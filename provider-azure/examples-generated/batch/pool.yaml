apiVersion: batch.azure.upbound.io/v1alpha1
kind: Pool
metadata:
  name: example
spec:
  forProvider:
    accountName: testbatchaccount
    autoScale:
    - evaluationInterval: PT15M
      formula: |2
              startingNumberOfVMs = 1;
              maxNumberofVMs = 25;
              pendingTaskSamplePercent = $PendingTasks.GetSamplePercent(180 * TimeInterval_Second);
              pendingTaskSamples = pendingTaskSamplePercent < 70 ? startingNumberOfVMs : avg($PendingTasks.GetSample(180 *   TimeInterval_Second));
              $TargetDedicatedNodes=min(maxNumberofVMs, pendingTaskSamples);
    certificate:
    - id: ${azurerm_batch_certificate.example.id}
      visibility:
      - StartTask
    containerConfiguration:
    - containerRegistries:
      - password: apassword
        registryServer: docker.io
        userName: login
      type: DockerCompatible
    displayName: Test Acc Pool Auto
    name: testaccpool
    nodeAgentSkuId: batch.node.ubuntu 20.04
    resourceGroupNameRef:
      name: example
    startTask:
    - commandLine: echo 'Hello World from $env'
      commonEnvironmentProperties:
        env: TEST
      taskRetryMaximum: 1
      userIdentity:
      - autoUser:
        - elevationLevel: NonAdmin
          scope: Task
      waitForSuccess: true
    storageImageReference:
    - offer: ubuntu-server-container
      publisher: microsoft-azure-batch
      sku: 20-04-lts
      version: latest
    vmSize: Standard_A1
  providerConfigRef:
    name: example
