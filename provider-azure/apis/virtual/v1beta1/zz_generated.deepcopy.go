//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DesktopScalingPlan) DeepCopyInto(out *DesktopScalingPlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DesktopScalingPlan.
func (in *DesktopScalingPlan) DeepCopy() *DesktopScalingPlan {
	if in == nil {
		return nil
	}
	out := new(DesktopScalingPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DesktopScalingPlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DesktopScalingPlanList) DeepCopyInto(out *DesktopScalingPlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DesktopScalingPlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DesktopScalingPlanList.
func (in *DesktopScalingPlanList) DeepCopy() *DesktopScalingPlanList {
	if in == nil {
		return nil
	}
	out := new(DesktopScalingPlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DesktopScalingPlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DesktopScalingPlanObservation) DeepCopyInto(out *DesktopScalingPlanObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DesktopScalingPlanObservation.
func (in *DesktopScalingPlanObservation) DeepCopy() *DesktopScalingPlanObservation {
	if in == nil {
		return nil
	}
	out := new(DesktopScalingPlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DesktopScalingPlanParameters) DeepCopyInto(out *DesktopScalingPlanParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExclusionTag != nil {
		in, out := &in.ExclusionTag, &out.ExclusionTag
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPool != nil {
		in, out := &in.HostPool, &out.HostPool
		*out = make([]HostPoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DesktopScalingPlanParameters.
func (in *DesktopScalingPlanParameters) DeepCopy() *DesktopScalingPlanParameters {
	if in == nil {
		return nil
	}
	out := new(DesktopScalingPlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DesktopScalingPlanSpec) DeepCopyInto(out *DesktopScalingPlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DesktopScalingPlanSpec.
func (in *DesktopScalingPlanSpec) DeepCopy() *DesktopScalingPlanSpec {
	if in == nil {
		return nil
	}
	out := new(DesktopScalingPlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DesktopScalingPlanStatus) DeepCopyInto(out *DesktopScalingPlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DesktopScalingPlanStatus.
func (in *DesktopScalingPlanStatus) DeepCopy() *DesktopScalingPlanStatus {
	if in == nil {
		return nil
	}
	out := new(DesktopScalingPlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalMappingObservation) DeepCopyInto(out *ExternalMappingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalMappingObservation.
func (in *ExternalMappingObservation) DeepCopy() *ExternalMappingObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalMappingParameters) DeepCopyInto(out *ExternalMappingParameters) {
	*out = *in
	if in.AddressSpace != nil {
		in, out := &in.AddressSpace, &out.AddressSpace
		*out = new(string)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalMappingParameters.
func (in *ExternalMappingParameters) DeepCopy() *ExternalMappingParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalMappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolObservation) DeepCopyInto(out *HostPoolObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolObservation.
func (in *HostPoolObservation) DeepCopy() *HostPoolObservation {
	if in == nil {
		return nil
	}
	out := new(HostPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolParameters) DeepCopyInto(out *HostPoolParameters) {
	*out = *in
	if in.HostpoolID != nil {
		in, out := &in.HostpoolID, &out.HostpoolID
		*out = new(string)
		**out = **in
	}
	if in.ScalingPlanEnabled != nil {
		in, out := &in.ScalingPlanEnabled, &out.ScalingPlanEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolParameters.
func (in *HostPoolParameters) DeepCopy() *HostPoolParameters {
	if in == nil {
		return nil
	}
	out := new(HostPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalMappingObservation) DeepCopyInto(out *InternalMappingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalMappingObservation.
func (in *InternalMappingObservation) DeepCopy() *InternalMappingObservation {
	if in == nil {
		return nil
	}
	out := new(InternalMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalMappingParameters) DeepCopyInto(out *InternalMappingParameters) {
	*out = *in
	if in.AddressSpace != nil {
		in, out := &in.AddressSpace, &out.AddressSpace
		*out = new(string)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalMappingParameters.
func (in *InternalMappingParameters) DeepCopy() *InternalMappingParameters {
	if in == nil {
		return nil
	}
	out := new(InternalMappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkGatewayNATRule) DeepCopyInto(out *NetworkGatewayNATRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkGatewayNATRule.
func (in *NetworkGatewayNATRule) DeepCopy() *NetworkGatewayNATRule {
	if in == nil {
		return nil
	}
	out := new(NetworkGatewayNATRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkGatewayNATRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkGatewayNATRuleList) DeepCopyInto(out *NetworkGatewayNATRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkGatewayNATRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkGatewayNATRuleList.
func (in *NetworkGatewayNATRuleList) DeepCopy() *NetworkGatewayNATRuleList {
	if in == nil {
		return nil
	}
	out := new(NetworkGatewayNATRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkGatewayNATRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkGatewayNATRuleObservation) DeepCopyInto(out *NetworkGatewayNATRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkGatewayNATRuleObservation.
func (in *NetworkGatewayNATRuleObservation) DeepCopy() *NetworkGatewayNATRuleObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkGatewayNATRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkGatewayNATRuleParameters) DeepCopyInto(out *NetworkGatewayNATRuleParameters) {
	*out = *in
	if in.ExternalMapping != nil {
		in, out := &in.ExternalMapping, &out.ExternalMapping
		*out = make([]ExternalMappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPConfigurationID != nil {
		in, out := &in.IPConfigurationID, &out.IPConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InternalMapping != nil {
		in, out := &in.InternalMapping, &out.InternalMapping
		*out = make([]InternalMappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkGatewayID != nil {
		in, out := &in.VirtualNetworkGatewayID, &out.VirtualNetworkGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkGatewayNATRuleParameters.
func (in *NetworkGatewayNATRuleParameters) DeepCopy() *NetworkGatewayNATRuleParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkGatewayNATRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkGatewayNATRuleSpec) DeepCopyInto(out *NetworkGatewayNATRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkGatewayNATRuleSpec.
func (in *NetworkGatewayNATRuleSpec) DeepCopy() *NetworkGatewayNATRuleSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkGatewayNATRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkGatewayNATRuleStatus) DeepCopyInto(out *NetworkGatewayNATRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkGatewayNATRuleStatus.
func (in *NetworkGatewayNATRuleStatus) DeepCopy() *NetworkGatewayNATRuleStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkGatewayNATRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OffPeakLoadBalancingAlgorithm != nil {
		in, out := &in.OffPeakLoadBalancingAlgorithm, &out.OffPeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.OffPeakStartTime != nil {
		in, out := &in.OffPeakStartTime, &out.OffPeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.PeakLoadBalancingAlgorithm != nil {
		in, out := &in.PeakLoadBalancingAlgorithm, &out.PeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.PeakStartTime != nil {
		in, out := &in.PeakStartTime, &out.PeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownCapacityThresholdPercent != nil {
		in, out := &in.RampDownCapacityThresholdPercent, &out.RampDownCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownForceLogoffUsers != nil {
		in, out := &in.RampDownForceLogoffUsers, &out.RampDownForceLogoffUsers
		*out = new(bool)
		**out = **in
	}
	if in.RampDownLoadBalancingAlgorithm != nil {
		in, out := &in.RampDownLoadBalancingAlgorithm, &out.RampDownLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampDownMinimumHostsPercent != nil {
		in, out := &in.RampDownMinimumHostsPercent, &out.RampDownMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownNotificationMessage != nil {
		in, out := &in.RampDownNotificationMessage, &out.RampDownNotificationMessage
		*out = new(string)
		**out = **in
	}
	if in.RampDownStartTime != nil {
		in, out := &in.RampDownStartTime, &out.RampDownStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownStopHostsWhen != nil {
		in, out := &in.RampDownStopHostsWhen, &out.RampDownStopHostsWhen
		*out = new(string)
		**out = **in
	}
	if in.RampDownWaitTimeMinutes != nil {
		in, out := &in.RampDownWaitTimeMinutes, &out.RampDownWaitTimeMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RampUpCapacityThresholdPercent != nil {
		in, out := &in.RampUpCapacityThresholdPercent, &out.RampUpCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpLoadBalancingAlgorithm != nil {
		in, out := &in.RampUpLoadBalancingAlgorithm, &out.RampUpLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampUpMinimumHostsPercent != nil {
		in, out := &in.RampUpMinimumHostsPercent, &out.RampUpMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpStartTime != nil {
		in, out := &in.RampUpStartTime, &out.RampUpStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}
