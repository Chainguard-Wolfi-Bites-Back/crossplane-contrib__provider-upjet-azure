//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroup) DeepCopyInto(out *ApplicationSecurityGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroup.
func (in *ApplicationSecurityGroup) DeepCopy() *ApplicationSecurityGroup {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationSecurityGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroupList) DeepCopyInto(out *ApplicationSecurityGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationSecurityGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroupList.
func (in *ApplicationSecurityGroupList) DeepCopy() *ApplicationSecurityGroupList {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationSecurityGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroupObservation) DeepCopyInto(out *ApplicationSecurityGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroupObservation.
func (in *ApplicationSecurityGroupObservation) DeepCopy() *ApplicationSecurityGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroupParameters) DeepCopyInto(out *ApplicationSecurityGroupParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroupParameters.
func (in *ApplicationSecurityGroupParameters) DeepCopy() *ApplicationSecurityGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroupSpec) DeepCopyInto(out *ApplicationSecurityGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroupSpec.
func (in *ApplicationSecurityGroupSpec) DeepCopy() *ApplicationSecurityGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroupStatus) DeepCopyInto(out *ApplicationSecurityGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroupStatus.
func (in *ApplicationSecurityGroupStatus) DeepCopy() *ApplicationSecurityGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureActiveDirectoryAuthenticationObservation) DeepCopyInto(out *AzureActiveDirectoryAuthenticationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureActiveDirectoryAuthenticationObservation.
func (in *AzureActiveDirectoryAuthenticationObservation) DeepCopy() *AzureActiveDirectoryAuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(AzureActiveDirectoryAuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureActiveDirectoryAuthenticationParameters) DeepCopyInto(out *AzureActiveDirectoryAuthenticationParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Tenant != nil {
		in, out := &in.Tenant, &out.Tenant
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureActiveDirectoryAuthenticationParameters.
func (in *AzureActiveDirectoryAuthenticationParameters) DeepCopy() *AzureActiveDirectoryAuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(AzureActiveDirectoryAuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPSettingsObservation) DeepCopyInto(out *BGPSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPSettingsObservation.
func (in *BGPSettingsObservation) DeepCopy() *BGPSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(BGPSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPSettingsParameters) DeepCopyInto(out *BGPSettingsParameters) {
	*out = *in
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.BGPPeeringAddress != nil {
		in, out := &in.BGPPeeringAddress, &out.BGPPeeringAddress
		*out = new(string)
		**out = **in
	}
	if in.PeerWeight != nil {
		in, out := &in.PeerWeight, &out.PeerWeight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPSettingsParameters.
func (in *BGPSettingsParameters) DeepCopy() *BGPSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(BGPSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRevokedCertificateObservation) DeepCopyInto(out *ClientRevokedCertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRevokedCertificateObservation.
func (in *ClientRevokedCertificateObservation) DeepCopy() *ClientRevokedCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(ClientRevokedCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRevokedCertificateParameters) DeepCopyInto(out *ClientRevokedCertificateParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRevokedCertificateParameters.
func (in *ClientRevokedCertificateParameters) DeepCopy() *ClientRevokedCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(ClientRevokedCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRootCertificateObservation) DeepCopyInto(out *ClientRootCertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRootCertificateObservation.
func (in *ClientRootCertificateObservation) DeepCopy() *ClientRootCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(ClientRootCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRootCertificateParameters) DeepCopyInto(out *ClientRootCertificateParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicCertData != nil {
		in, out := &in.PublicCertData, &out.PublicCertData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRootCertificateParameters.
func (in *ClientRootCertificateParameters) DeepCopy() *ClientRootCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(ClientRootCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConfigurationObservation) DeepCopyInto(out *ConnectionConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConfigurationObservation.
func (in *ConnectionConfigurationObservation) DeepCopy() *ConnectionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConfigurationParameters) DeepCopyInto(out *ConnectionConfigurationParameters) {
	*out = *in
	if in.InternetSecurityEnabled != nil {
		in, out := &in.InternetSecurityEnabled, &out.InternetSecurityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]RouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPNClientAddressPool != nil {
		in, out := &in.VPNClientAddressPool, &out.VPNClientAddressPool
		*out = make([]VPNClientAddressPoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConfigurationParameters.
func (in *ConnectionConfigurationParameters) DeepCopy() *ConnectionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionMonitor) DeepCopyInto(out *ConnectionMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionMonitor.
func (in *ConnectionMonitor) DeepCopy() *ConnectionMonitor {
	if in == nil {
		return nil
	}
	out := new(ConnectionMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionMonitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionMonitorList) DeepCopyInto(out *ConnectionMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConnectionMonitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionMonitorList.
func (in *ConnectionMonitorList) DeepCopy() *ConnectionMonitorList {
	if in == nil {
		return nil
	}
	out := new(ConnectionMonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionMonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionMonitorObservation) DeepCopyInto(out *ConnectionMonitorObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionMonitorObservation.
func (in *ConnectionMonitorObservation) DeepCopy() *ConnectionMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionMonitorParameters) DeepCopyInto(out *ConnectionMonitorParameters) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = make([]EndpointParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkWatcherID != nil {
		in, out := &in.NetworkWatcherID, &out.NetworkWatcherID
		*out = new(string)
		**out = **in
	}
	if in.NetworkWatcherIDRef != nil {
		in, out := &in.NetworkWatcherIDRef, &out.NetworkWatcherIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkWatcherIDSelector != nil {
		in, out := &in.NetworkWatcherIDSelector, &out.NetworkWatcherIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.OutputWorkspaceResourceIds != nil {
		in, out := &in.OutputWorkspaceResourceIds, &out.OutputWorkspaceResourceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TestConfiguration != nil {
		in, out := &in.TestConfiguration, &out.TestConfiguration
		*out = make([]TestConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TestGroup != nil {
		in, out := &in.TestGroup, &out.TestGroup
		*out = make([]TestGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionMonitorParameters.
func (in *ConnectionMonitorParameters) DeepCopy() *ConnectionMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionMonitorSpec) DeepCopyInto(out *ConnectionMonitorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionMonitorSpec.
func (in *ConnectionMonitorSpec) DeepCopy() *ConnectionMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionMonitorStatus) DeepCopyInto(out *ConnectionMonitorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionMonitorStatus.
func (in *ConnectionMonitorStatus) DeepCopy() *ConnectionMonitorStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionMonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerNetworkInterfaceIPConfigurationObservation) DeepCopyInto(out *ContainerNetworkInterfaceIPConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerNetworkInterfaceIPConfigurationObservation.
func (in *ContainerNetworkInterfaceIPConfigurationObservation) DeepCopy() *ContainerNetworkInterfaceIPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ContainerNetworkInterfaceIPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerNetworkInterfaceIPConfigurationParameters) DeepCopyInto(out *ContainerNetworkInterfaceIPConfigurationParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerNetworkInterfaceIPConfigurationParameters.
func (in *ContainerNetworkInterfaceIPConfigurationParameters) DeepCopy() *ContainerNetworkInterfaceIPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerNetworkInterfaceIPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerNetworkInterfaceObservation) DeepCopyInto(out *ContainerNetworkInterfaceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerNetworkInterfaceObservation.
func (in *ContainerNetworkInterfaceObservation) DeepCopy() *ContainerNetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(ContainerNetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerNetworkInterfaceParameters) DeepCopyInto(out *ContainerNetworkInterfaceParameters) {
	*out = *in
	if in.IPConfiguration != nil {
		in, out := &in.IPConfiguration, &out.IPConfiguration
		*out = make([]ContainerNetworkInterfaceIPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerNetworkInterfaceParameters.
func (in *ContainerNetworkInterfaceParameters) DeepCopy() *ContainerNetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerNetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomBGPAddressesObservation) DeepCopyInto(out *CustomBGPAddressesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomBGPAddressesObservation.
func (in *CustomBGPAddressesObservation) DeepCopy() *CustomBGPAddressesObservation {
	if in == nil {
		return nil
	}
	out := new(CustomBGPAddressesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomBGPAddressesParameters) DeepCopyInto(out *CustomBGPAddressesParameters) {
	*out = *in
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(string)
		**out = **in
	}
	if in.Secondary != nil {
		in, out := &in.Secondary, &out.Secondary
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomBGPAddressesParameters.
func (in *CustomBGPAddressesParameters) DeepCopy() *CustomBGPAddressesParameters {
	if in == nil {
		return nil
	}
	out := new(CustomBGPAddressesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDNSConfigsObservation) DeepCopyInto(out *CustomDNSConfigsObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDNSConfigsObservation.
func (in *CustomDNSConfigsObservation) DeepCopy() *CustomDNSConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomDNSConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDNSConfigsParameters) DeepCopyInto(out *CustomDNSConfigsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDNSConfigsParameters.
func (in *CustomDNSConfigsParameters) DeepCopy() *CustomDNSConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomDNSConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomRouteObservation) DeepCopyInto(out *CustomRouteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomRouteObservation.
func (in *CustomRouteObservation) DeepCopy() *CustomRouteObservation {
	if in == nil {
		return nil
	}
	out := new(CustomRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomRouteParameters) DeepCopyInto(out *CustomRouteParameters) {
	*out = *in
	if in.AddressPrefixes != nil {
		in, out := &in.AddressPrefixes, &out.AddressPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomRouteParameters.
func (in *CustomRouteParameters) DeepCopy() *CustomRouteParameters {
	if in == nil {
		return nil
	}
	out := new(CustomRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DDOSProtectionPlanObservation) DeepCopyInto(out *DDOSProtectionPlanObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DDOSProtectionPlanObservation.
func (in *DDOSProtectionPlanObservation) DeepCopy() *DDOSProtectionPlanObservation {
	if in == nil {
		return nil
	}
	out := new(DDOSProtectionPlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DDOSProtectionPlanParameters) DeepCopyInto(out *DDOSProtectionPlanParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DDOSProtectionPlanParameters.
func (in *DDOSProtectionPlanParameters) DeepCopy() *DDOSProtectionPlanParameters {
	if in == nil {
		return nil
	}
	out := new(DDOSProtectionPlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DDoSProtectionPlan) DeepCopyInto(out *DDoSProtectionPlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DDoSProtectionPlan.
func (in *DDoSProtectionPlan) DeepCopy() *DDoSProtectionPlan {
	if in == nil {
		return nil
	}
	out := new(DDoSProtectionPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DDoSProtectionPlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DDoSProtectionPlanList) DeepCopyInto(out *DDoSProtectionPlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DDoSProtectionPlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DDoSProtectionPlanList.
func (in *DDoSProtectionPlanList) DeepCopy() *DDoSProtectionPlanList {
	if in == nil {
		return nil
	}
	out := new(DDoSProtectionPlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DDoSProtectionPlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DDoSProtectionPlanObservation) DeepCopyInto(out *DDoSProtectionPlanObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkIds != nil {
		in, out := &in.VirtualNetworkIds, &out.VirtualNetworkIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DDoSProtectionPlanObservation.
func (in *DDoSProtectionPlanObservation) DeepCopy() *DDoSProtectionPlanObservation {
	if in == nil {
		return nil
	}
	out := new(DDoSProtectionPlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DDoSProtectionPlanParameters) DeepCopyInto(out *DDoSProtectionPlanParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DDoSProtectionPlanParameters.
func (in *DDoSProtectionPlanParameters) DeepCopy() *DDoSProtectionPlanParameters {
	if in == nil {
		return nil
	}
	out := new(DDoSProtectionPlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DDoSProtectionPlanSpec) DeepCopyInto(out *DDoSProtectionPlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DDoSProtectionPlanSpec.
func (in *DDoSProtectionPlanSpec) DeepCopy() *DDoSProtectionPlanSpec {
	if in == nil {
		return nil
	}
	out := new(DDoSProtectionPlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DDoSProtectionPlanStatus) DeepCopyInto(out *DDoSProtectionPlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DDoSProtectionPlanStatus.
func (in *DDoSProtectionPlanStatus) DeepCopy() *DDoSProtectionPlanStatus {
	if in == nil {
		return nil
	}
	out := new(DDoSProtectionPlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSAAAARecord) DeepCopyInto(out *DNSAAAARecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSAAAARecord.
func (in *DNSAAAARecord) DeepCopy() *DNSAAAARecord {
	if in == nil {
		return nil
	}
	out := new(DNSAAAARecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSAAAARecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSAAAARecordList) DeepCopyInto(out *DNSAAAARecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSAAAARecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSAAAARecordList.
func (in *DNSAAAARecordList) DeepCopy() *DNSAAAARecordList {
	if in == nil {
		return nil
	}
	out := new(DNSAAAARecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSAAAARecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSAAAARecordObservation) DeepCopyInto(out *DNSAAAARecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSAAAARecordObservation.
func (in *DNSAAAARecordObservation) DeepCopy() *DNSAAAARecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSAAAARecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSAAAARecordParameters) DeepCopyInto(out *DNSAAAARecordParameters) {
	*out = *in
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSAAAARecordParameters.
func (in *DNSAAAARecordParameters) DeepCopy() *DNSAAAARecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSAAAARecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSAAAARecordSpec) DeepCopyInto(out *DNSAAAARecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSAAAARecordSpec.
func (in *DNSAAAARecordSpec) DeepCopy() *DNSAAAARecordSpec {
	if in == nil {
		return nil
	}
	out := new(DNSAAAARecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSAAAARecordStatus) DeepCopyInto(out *DNSAAAARecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSAAAARecordStatus.
func (in *DNSAAAARecordStatus) DeepCopy() *DNSAAAARecordStatus {
	if in == nil {
		return nil
	}
	out := new(DNSAAAARecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSARecord) DeepCopyInto(out *DNSARecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSARecord.
func (in *DNSARecord) DeepCopy() *DNSARecord {
	if in == nil {
		return nil
	}
	out := new(DNSARecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSARecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSARecordList) DeepCopyInto(out *DNSARecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSARecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSARecordList.
func (in *DNSARecordList) DeepCopy() *DNSARecordList {
	if in == nil {
		return nil
	}
	out := new(DNSARecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSARecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSARecordObservation) DeepCopyInto(out *DNSARecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSARecordObservation.
func (in *DNSARecordObservation) DeepCopy() *DNSARecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSARecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSARecordParameters) DeepCopyInto(out *DNSARecordParameters) {
	*out = *in
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSARecordParameters.
func (in *DNSARecordParameters) DeepCopy() *DNSARecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSARecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSARecordSpec) DeepCopyInto(out *DNSARecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSARecordSpec.
func (in *DNSARecordSpec) DeepCopy() *DNSARecordSpec {
	if in == nil {
		return nil
	}
	out := new(DNSARecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSARecordStatus) DeepCopyInto(out *DNSARecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSARecordStatus.
func (in *DNSARecordStatus) DeepCopy() *DNSARecordStatus {
	if in == nil {
		return nil
	}
	out := new(DNSARecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCAARecord) DeepCopyInto(out *DNSCAARecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCAARecord.
func (in *DNSCAARecord) DeepCopy() *DNSCAARecord {
	if in == nil {
		return nil
	}
	out := new(DNSCAARecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSCAARecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCAARecordList) DeepCopyInto(out *DNSCAARecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSCAARecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCAARecordList.
func (in *DNSCAARecordList) DeepCopy() *DNSCAARecordList {
	if in == nil {
		return nil
	}
	out := new(DNSCAARecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSCAARecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCAARecordObservation) DeepCopyInto(out *DNSCAARecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCAARecordObservation.
func (in *DNSCAARecordObservation) DeepCopy() *DNSCAARecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSCAARecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCAARecordParameters) DeepCopyInto(out *DNSCAARecordParameters) {
	*out = *in
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]RecordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCAARecordParameters.
func (in *DNSCAARecordParameters) DeepCopy() *DNSCAARecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSCAARecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCAARecordSpec) DeepCopyInto(out *DNSCAARecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCAARecordSpec.
func (in *DNSCAARecordSpec) DeepCopy() *DNSCAARecordSpec {
	if in == nil {
		return nil
	}
	out := new(DNSCAARecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCAARecordStatus) DeepCopyInto(out *DNSCAARecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCAARecordStatus.
func (in *DNSCAARecordStatus) DeepCopy() *DNSCAARecordStatus {
	if in == nil {
		return nil
	}
	out := new(DNSCAARecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCNAMERecord) DeepCopyInto(out *DNSCNAMERecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCNAMERecord.
func (in *DNSCNAMERecord) DeepCopy() *DNSCNAMERecord {
	if in == nil {
		return nil
	}
	out := new(DNSCNAMERecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSCNAMERecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCNAMERecordList) DeepCopyInto(out *DNSCNAMERecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSCNAMERecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCNAMERecordList.
func (in *DNSCNAMERecordList) DeepCopy() *DNSCNAMERecordList {
	if in == nil {
		return nil
	}
	out := new(DNSCNAMERecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSCNAMERecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCNAMERecordObservation) DeepCopyInto(out *DNSCNAMERecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCNAMERecordObservation.
func (in *DNSCNAMERecordObservation) DeepCopy() *DNSCNAMERecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSCNAMERecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCNAMERecordParameters) DeepCopyInto(out *DNSCNAMERecordParameters) {
	*out = *in
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCNAMERecordParameters.
func (in *DNSCNAMERecordParameters) DeepCopy() *DNSCNAMERecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSCNAMERecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCNAMERecordSpec) DeepCopyInto(out *DNSCNAMERecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCNAMERecordSpec.
func (in *DNSCNAMERecordSpec) DeepCopy() *DNSCNAMERecordSpec {
	if in == nil {
		return nil
	}
	out := new(DNSCNAMERecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCNAMERecordStatus) DeepCopyInto(out *DNSCNAMERecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCNAMERecordStatus.
func (in *DNSCNAMERecordStatus) DeepCopy() *DNSCNAMERecordStatus {
	if in == nil {
		return nil
	}
	out := new(DNSCNAMERecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSMXRecord) DeepCopyInto(out *DNSMXRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSMXRecord.
func (in *DNSMXRecord) DeepCopy() *DNSMXRecord {
	if in == nil {
		return nil
	}
	out := new(DNSMXRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSMXRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSMXRecordList) DeepCopyInto(out *DNSMXRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSMXRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSMXRecordList.
func (in *DNSMXRecordList) DeepCopy() *DNSMXRecordList {
	if in == nil {
		return nil
	}
	out := new(DNSMXRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSMXRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSMXRecordObservation) DeepCopyInto(out *DNSMXRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSMXRecordObservation.
func (in *DNSMXRecordObservation) DeepCopy() *DNSMXRecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSMXRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSMXRecordParameters) DeepCopyInto(out *DNSMXRecordParameters) {
	*out = *in
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]DNSMXRecordRecordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSMXRecordParameters.
func (in *DNSMXRecordParameters) DeepCopy() *DNSMXRecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSMXRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSMXRecordRecordObservation) DeepCopyInto(out *DNSMXRecordRecordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSMXRecordRecordObservation.
func (in *DNSMXRecordRecordObservation) DeepCopy() *DNSMXRecordRecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSMXRecordRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSMXRecordRecordParameters) DeepCopyInto(out *DNSMXRecordRecordParameters) {
	*out = *in
	if in.Exchange != nil {
		in, out := &in.Exchange, &out.Exchange
		*out = new(string)
		**out = **in
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSMXRecordRecordParameters.
func (in *DNSMXRecordRecordParameters) DeepCopy() *DNSMXRecordRecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSMXRecordRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSMXRecordSpec) DeepCopyInto(out *DNSMXRecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSMXRecordSpec.
func (in *DNSMXRecordSpec) DeepCopy() *DNSMXRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DNSMXRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSMXRecordStatus) DeepCopyInto(out *DNSMXRecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSMXRecordStatus.
func (in *DNSMXRecordStatus) DeepCopy() *DNSMXRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DNSMXRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSNSRecord) DeepCopyInto(out *DNSNSRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSNSRecord.
func (in *DNSNSRecord) DeepCopy() *DNSNSRecord {
	if in == nil {
		return nil
	}
	out := new(DNSNSRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSNSRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSNSRecordList) DeepCopyInto(out *DNSNSRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSNSRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSNSRecordList.
func (in *DNSNSRecordList) DeepCopy() *DNSNSRecordList {
	if in == nil {
		return nil
	}
	out := new(DNSNSRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSNSRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSNSRecordObservation) DeepCopyInto(out *DNSNSRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSNSRecordObservation.
func (in *DNSNSRecordObservation) DeepCopy() *DNSNSRecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSNSRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSNSRecordParameters) DeepCopyInto(out *DNSNSRecordParameters) {
	*out = *in
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSNSRecordParameters.
func (in *DNSNSRecordParameters) DeepCopy() *DNSNSRecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSNSRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSNSRecordSpec) DeepCopyInto(out *DNSNSRecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSNSRecordSpec.
func (in *DNSNSRecordSpec) DeepCopy() *DNSNSRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DNSNSRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSNSRecordStatus) DeepCopyInto(out *DNSNSRecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSNSRecordStatus.
func (in *DNSNSRecordStatus) DeepCopy() *DNSNSRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DNSNSRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPTRRecord) DeepCopyInto(out *DNSPTRRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPTRRecord.
func (in *DNSPTRRecord) DeepCopy() *DNSPTRRecord {
	if in == nil {
		return nil
	}
	out := new(DNSPTRRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSPTRRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPTRRecordList) DeepCopyInto(out *DNSPTRRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSPTRRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPTRRecordList.
func (in *DNSPTRRecordList) DeepCopy() *DNSPTRRecordList {
	if in == nil {
		return nil
	}
	out := new(DNSPTRRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSPTRRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPTRRecordObservation) DeepCopyInto(out *DNSPTRRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPTRRecordObservation.
func (in *DNSPTRRecordObservation) DeepCopy() *DNSPTRRecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSPTRRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPTRRecordParameters) DeepCopyInto(out *DNSPTRRecordParameters) {
	*out = *in
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPTRRecordParameters.
func (in *DNSPTRRecordParameters) DeepCopy() *DNSPTRRecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSPTRRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPTRRecordSpec) DeepCopyInto(out *DNSPTRRecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPTRRecordSpec.
func (in *DNSPTRRecordSpec) DeepCopy() *DNSPTRRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DNSPTRRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPTRRecordStatus) DeepCopyInto(out *DNSPTRRecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPTRRecordStatus.
func (in *DNSPTRRecordStatus) DeepCopy() *DNSPTRRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DNSPTRRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSRVRecord) DeepCopyInto(out *DNSSRVRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSRVRecord.
func (in *DNSSRVRecord) DeepCopy() *DNSSRVRecord {
	if in == nil {
		return nil
	}
	out := new(DNSSRVRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSSRVRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSRVRecordList) DeepCopyInto(out *DNSSRVRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSSRVRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSRVRecordList.
func (in *DNSSRVRecordList) DeepCopy() *DNSSRVRecordList {
	if in == nil {
		return nil
	}
	out := new(DNSSRVRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSSRVRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSRVRecordObservation) DeepCopyInto(out *DNSSRVRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSRVRecordObservation.
func (in *DNSSRVRecordObservation) DeepCopy() *DNSSRVRecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSSRVRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSRVRecordParameters) DeepCopyInto(out *DNSSRVRecordParameters) {
	*out = *in
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]DNSSRVRecordRecordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSRVRecordParameters.
func (in *DNSSRVRecordParameters) DeepCopy() *DNSSRVRecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSSRVRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSRVRecordRecordObservation) DeepCopyInto(out *DNSSRVRecordRecordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSRVRecordRecordObservation.
func (in *DNSSRVRecordRecordObservation) DeepCopy() *DNSSRVRecordRecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSSRVRecordRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSRVRecordRecordParameters) DeepCopyInto(out *DNSSRVRecordRecordParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSRVRecordRecordParameters.
func (in *DNSSRVRecordRecordParameters) DeepCopy() *DNSSRVRecordRecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSSRVRecordRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSRVRecordSpec) DeepCopyInto(out *DNSSRVRecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSRVRecordSpec.
func (in *DNSSRVRecordSpec) DeepCopy() *DNSSRVRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DNSSRVRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSRVRecordStatus) DeepCopyInto(out *DNSSRVRecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSRVRecordStatus.
func (in *DNSSRVRecordStatus) DeepCopy() *DNSSRVRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DNSSRVRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTXTRecord) DeepCopyInto(out *DNSTXTRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTXTRecord.
func (in *DNSTXTRecord) DeepCopy() *DNSTXTRecord {
	if in == nil {
		return nil
	}
	out := new(DNSTXTRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSTXTRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTXTRecordList) DeepCopyInto(out *DNSTXTRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSTXTRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTXTRecordList.
func (in *DNSTXTRecordList) DeepCopy() *DNSTXTRecordList {
	if in == nil {
		return nil
	}
	out := new(DNSTXTRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSTXTRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTXTRecordObservation) DeepCopyInto(out *DNSTXTRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTXTRecordObservation.
func (in *DNSTXTRecordObservation) DeepCopy() *DNSTXTRecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSTXTRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTXTRecordParameters) DeepCopyInto(out *DNSTXTRecordParameters) {
	*out = *in
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]DNSTXTRecordRecordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTXTRecordParameters.
func (in *DNSTXTRecordParameters) DeepCopy() *DNSTXTRecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSTXTRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTXTRecordRecordObservation) DeepCopyInto(out *DNSTXTRecordRecordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTXTRecordRecordObservation.
func (in *DNSTXTRecordRecordObservation) DeepCopy() *DNSTXTRecordRecordObservation {
	if in == nil {
		return nil
	}
	out := new(DNSTXTRecordRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTXTRecordRecordParameters) DeepCopyInto(out *DNSTXTRecordRecordParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTXTRecordRecordParameters.
func (in *DNSTXTRecordRecordParameters) DeepCopy() *DNSTXTRecordRecordParameters {
	if in == nil {
		return nil
	}
	out := new(DNSTXTRecordRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTXTRecordSpec) DeepCopyInto(out *DNSTXTRecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTXTRecordSpec.
func (in *DNSTXTRecordSpec) DeepCopy() *DNSTXTRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DNSTXTRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTXTRecordStatus) DeepCopyInto(out *DNSTXTRecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTXTRecordStatus.
func (in *DNSTXTRecordStatus) DeepCopy() *DNSTXTRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DNSTXTRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSZone) DeepCopyInto(out *DNSZone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSZone.
func (in *DNSZone) DeepCopy() *DNSZone {
	if in == nil {
		return nil
	}
	out := new(DNSZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSZone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSZoneList) DeepCopyInto(out *DNSZoneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSZone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSZoneList.
func (in *DNSZoneList) DeepCopy() *DNSZoneList {
	if in == nil {
		return nil
	}
	out := new(DNSZoneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSZoneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSZoneObservation) DeepCopyInto(out *DNSZoneObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfRecordSets != nil {
		in, out := &in.MaxNumberOfRecordSets, &out.MaxNumberOfRecordSets
		*out = new(float64)
		**out = **in
	}
	if in.NameServers != nil {
		in, out := &in.NameServers, &out.NameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NumberOfRecordSets != nil {
		in, out := &in.NumberOfRecordSets, &out.NumberOfRecordSets
		*out = new(float64)
		**out = **in
	}
	if in.SoaRecord != nil {
		in, out := &in.SoaRecord, &out.SoaRecord
		*out = make([]SoaRecordObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSZoneObservation.
func (in *DNSZoneObservation) DeepCopy() *DNSZoneObservation {
	if in == nil {
		return nil
	}
	out := new(DNSZoneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSZoneParameters) DeepCopyInto(out *DNSZoneParameters) {
	*out = *in
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SoaRecord != nil {
		in, out := &in.SoaRecord, &out.SoaRecord
		*out = make([]SoaRecordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSZoneParameters.
func (in *DNSZoneParameters) DeepCopy() *DNSZoneParameters {
	if in == nil {
		return nil
	}
	out := new(DNSZoneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSZoneSpec) DeepCopyInto(out *DNSZoneSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSZoneSpec.
func (in *DNSZoneSpec) DeepCopy() *DNSZoneSpec {
	if in == nil {
		return nil
	}
	out := new(DNSZoneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSZoneStatus) DeepCopyInto(out *DNSZoneStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSZoneStatus.
func (in *DNSZoneStatus) DeepCopy() *DNSZoneStatus {
	if in == nil {
		return nil
	}
	out := new(DNSZoneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefinitionObservation) DeepCopyInto(out *DefinitionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefinitionObservation.
func (in *DefinitionObservation) DeepCopy() *DefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(DefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefinitionParameters) DeepCopyInto(out *DefinitionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceResources != nil {
		in, out := &in.ServiceResources, &out.ServiceResources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefinitionParameters.
func (in *DefinitionParameters) DeepCopy() *DefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(DefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelegationObservation) DeepCopyInto(out *DelegationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelegationObservation.
func (in *DelegationObservation) DeepCopy() *DelegationObservation {
	if in == nil {
		return nil
	}
	out := new(DelegationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelegationParameters) DeepCopyInto(out *DelegationParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceDelegation != nil {
		in, out := &in.ServiceDelegation, &out.ServiceDelegation
		*out = make([]ServiceDelegationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelegationParameters.
func (in *DelegationParameters) DeepCopy() *DelegationParameters {
	if in == nil {
		return nil
	}
	out := new(DelegationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointObservation) DeepCopyInto(out *EndpointObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointObservation.
func (in *EndpointObservation) DeepCopy() *EndpointObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointParameters) DeepCopyInto(out *EndpointParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.CoverageLevel != nil {
		in, out := &in.CoverageLevel, &out.CoverageLevel
		*out = new(string)
		**out = **in
	}
	if in.ExcludedIPAddresses != nil {
		in, out := &in.ExcludedIPAddresses, &out.ExcludedIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludedIPAddresses != nil {
		in, out := &in.IncludedIPAddresses, &out.IncludedIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceType != nil {
		in, out := &in.TargetResourceType, &out.TargetResourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointParameters.
func (in *EndpointParameters) DeepCopy() *EndpointParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuit) DeepCopyInto(out *ExpressRouteCircuit) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuit.
func (in *ExpressRouteCircuit) DeepCopy() *ExpressRouteCircuit {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteCircuit) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitAuthorization) DeepCopyInto(out *ExpressRouteCircuitAuthorization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitAuthorization.
func (in *ExpressRouteCircuitAuthorization) DeepCopy() *ExpressRouteCircuitAuthorization {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitAuthorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteCircuitAuthorization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitAuthorizationList) DeepCopyInto(out *ExpressRouteCircuitAuthorizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExpressRouteCircuitAuthorization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitAuthorizationList.
func (in *ExpressRouteCircuitAuthorizationList) DeepCopy() *ExpressRouteCircuitAuthorizationList {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitAuthorizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteCircuitAuthorizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitAuthorizationObservation) DeepCopyInto(out *ExpressRouteCircuitAuthorizationObservation) {
	*out = *in
	if in.AuthorizationUseStatus != nil {
		in, out := &in.AuthorizationUseStatus, &out.AuthorizationUseStatus
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitAuthorizationObservation.
func (in *ExpressRouteCircuitAuthorizationObservation) DeepCopy() *ExpressRouteCircuitAuthorizationObservation {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitAuthorizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitAuthorizationParameters) DeepCopyInto(out *ExpressRouteCircuitAuthorizationParameters) {
	*out = *in
	if in.ExpressRouteCircuitName != nil {
		in, out := &in.ExpressRouteCircuitName, &out.ExpressRouteCircuitName
		*out = new(string)
		**out = **in
	}
	if in.ExpressRouteCircuitNameRef != nil {
		in, out := &in.ExpressRouteCircuitNameRef, &out.ExpressRouteCircuitNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ExpressRouteCircuitNameSelector != nil {
		in, out := &in.ExpressRouteCircuitNameSelector, &out.ExpressRouteCircuitNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitAuthorizationParameters.
func (in *ExpressRouteCircuitAuthorizationParameters) DeepCopy() *ExpressRouteCircuitAuthorizationParameters {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitAuthorizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitAuthorizationSpec) DeepCopyInto(out *ExpressRouteCircuitAuthorizationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitAuthorizationSpec.
func (in *ExpressRouteCircuitAuthorizationSpec) DeepCopy() *ExpressRouteCircuitAuthorizationSpec {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitAuthorizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitAuthorizationStatus) DeepCopyInto(out *ExpressRouteCircuitAuthorizationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitAuthorizationStatus.
func (in *ExpressRouteCircuitAuthorizationStatus) DeepCopy() *ExpressRouteCircuitAuthorizationStatus {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitAuthorizationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitConnection) DeepCopyInto(out *ExpressRouteCircuitConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitConnection.
func (in *ExpressRouteCircuitConnection) DeepCopy() *ExpressRouteCircuitConnection {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteCircuitConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitConnectionList) DeepCopyInto(out *ExpressRouteCircuitConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExpressRouteCircuitConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitConnectionList.
func (in *ExpressRouteCircuitConnectionList) DeepCopy() *ExpressRouteCircuitConnectionList {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteCircuitConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitConnectionObservation) DeepCopyInto(out *ExpressRouteCircuitConnectionObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitConnectionObservation.
func (in *ExpressRouteCircuitConnectionObservation) DeepCopy() *ExpressRouteCircuitConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitConnectionParameters) DeepCopyInto(out *ExpressRouteCircuitConnectionParameters) {
	*out = *in
	if in.AddressPrefixIPv4 != nil {
		in, out := &in.AddressPrefixIPv4, &out.AddressPrefixIPv4
		*out = new(string)
		**out = **in
	}
	if in.AddressPrefixIPv6 != nil {
		in, out := &in.AddressPrefixIPv6, &out.AddressPrefixIPv6
		*out = new(string)
		**out = **in
	}
	if in.AuthorizationKeySecretRef != nil {
		in, out := &in.AuthorizationKeySecretRef, &out.AuthorizationKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PeerPeeringID != nil {
		in, out := &in.PeerPeeringID, &out.PeerPeeringID
		*out = new(string)
		**out = **in
	}
	if in.PeerPeeringIDRef != nil {
		in, out := &in.PeerPeeringIDRef, &out.PeerPeeringIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.PeerPeeringIDSelector != nil {
		in, out := &in.PeerPeeringIDSelector, &out.PeerPeeringIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PeeringID != nil {
		in, out := &in.PeeringID, &out.PeeringID
		*out = new(string)
		**out = **in
	}
	if in.PeeringIDRef != nil {
		in, out := &in.PeeringIDRef, &out.PeeringIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.PeeringIDSelector != nil {
		in, out := &in.PeeringIDSelector, &out.PeeringIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitConnectionParameters.
func (in *ExpressRouteCircuitConnectionParameters) DeepCopy() *ExpressRouteCircuitConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitConnectionSpec) DeepCopyInto(out *ExpressRouteCircuitConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitConnectionSpec.
func (in *ExpressRouteCircuitConnectionSpec) DeepCopy() *ExpressRouteCircuitConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitConnectionStatus) DeepCopyInto(out *ExpressRouteCircuitConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitConnectionStatus.
func (in *ExpressRouteCircuitConnectionStatus) DeepCopy() *ExpressRouteCircuitConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitList) DeepCopyInto(out *ExpressRouteCircuitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExpressRouteCircuit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitList.
func (in *ExpressRouteCircuitList) DeepCopy() *ExpressRouteCircuitList {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteCircuitList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitObservation) DeepCopyInto(out *ExpressRouteCircuitObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ServiceProviderProvisioningState != nil {
		in, out := &in.ServiceProviderProvisioningState, &out.ServiceProviderProvisioningState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitObservation.
func (in *ExpressRouteCircuitObservation) DeepCopy() *ExpressRouteCircuitObservation {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitParameters) DeepCopyInto(out *ExpressRouteCircuitParameters) {
	*out = *in
	if in.AllowClassicOperations != nil {
		in, out := &in.AllowClassicOperations, &out.AllowClassicOperations
		*out = new(bool)
		**out = **in
	}
	if in.BandwidthInGbps != nil {
		in, out := &in.BandwidthInGbps, &out.BandwidthInGbps
		*out = new(float64)
		**out = **in
	}
	if in.BandwidthInMbps != nil {
		in, out := &in.BandwidthInMbps, &out.BandwidthInMbps
		*out = new(float64)
		**out = **in
	}
	if in.ExpressRoutePortID != nil {
		in, out := &in.ExpressRoutePortID, &out.ExpressRoutePortID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PeeringLocation != nil {
		in, out := &in.PeeringLocation, &out.PeeringLocation
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceProviderName != nil {
		in, out := &in.ServiceProviderName, &out.ServiceProviderName
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = make([]SkuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitParameters.
func (in *ExpressRouteCircuitParameters) DeepCopy() *ExpressRouteCircuitParameters {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitPeering) DeepCopyInto(out *ExpressRouteCircuitPeering) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitPeering.
func (in *ExpressRouteCircuitPeering) DeepCopy() *ExpressRouteCircuitPeering {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitPeering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteCircuitPeering) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitPeeringList) DeepCopyInto(out *ExpressRouteCircuitPeeringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExpressRouteCircuitPeering, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitPeeringList.
func (in *ExpressRouteCircuitPeeringList) DeepCopy() *ExpressRouteCircuitPeeringList {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitPeeringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteCircuitPeeringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitPeeringObservation) DeepCopyInto(out *ExpressRouteCircuitPeeringObservation) {
	*out = *in
	if in.AzureAsn != nil {
		in, out := &in.AzureAsn, &out.AzureAsn
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryAzurePort != nil {
		in, out := &in.PrimaryAzurePort, &out.PrimaryAzurePort
		*out = new(string)
		**out = **in
	}
	if in.SecondaryAzurePort != nil {
		in, out := &in.SecondaryAzurePort, &out.SecondaryAzurePort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitPeeringObservation.
func (in *ExpressRouteCircuitPeeringObservation) DeepCopy() *ExpressRouteCircuitPeeringObservation {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitPeeringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitPeeringParameters) DeepCopyInto(out *ExpressRouteCircuitPeeringParameters) {
	*out = *in
	if in.ExpressRouteCircuitName != nil {
		in, out := &in.ExpressRouteCircuitName, &out.ExpressRouteCircuitName
		*out = new(string)
		**out = **in
	}
	if in.ExpressRouteCircuitNameRef != nil {
		in, out := &in.ExpressRouteCircuitNameRef, &out.ExpressRouteCircuitNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ExpressRouteCircuitNameSelector != nil {
		in, out := &in.ExpressRouteCircuitNameSelector, &out.ExpressRouteCircuitNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = make([]IPv6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftPeeringConfig != nil {
		in, out := &in.MicrosoftPeeringConfig, &out.MicrosoftPeeringConfig
		*out = make([]MicrosoftPeeringConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PeerAsn != nil {
		in, out := &in.PeerAsn, &out.PeerAsn
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryPeerAddressPrefix != nil {
		in, out := &in.PrimaryPeerAddressPrefix, &out.PrimaryPeerAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteFilterID != nil {
		in, out := &in.RouteFilterID, &out.RouteFilterID
		*out = new(string)
		**out = **in
	}
	if in.SecondaryPeerAddressPrefix != nil {
		in, out := &in.SecondaryPeerAddressPrefix, &out.SecondaryPeerAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.SharedKeySecretRef != nil {
		in, out := &in.SharedKeySecretRef, &out.SharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitPeeringParameters.
func (in *ExpressRouteCircuitPeeringParameters) DeepCopy() *ExpressRouteCircuitPeeringParameters {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitPeeringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitPeeringSpec) DeepCopyInto(out *ExpressRouteCircuitPeeringSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitPeeringSpec.
func (in *ExpressRouteCircuitPeeringSpec) DeepCopy() *ExpressRouteCircuitPeeringSpec {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitPeeringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitPeeringStatus) DeepCopyInto(out *ExpressRouteCircuitPeeringStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitPeeringStatus.
func (in *ExpressRouteCircuitPeeringStatus) DeepCopy() *ExpressRouteCircuitPeeringStatus {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitPeeringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitSpec) DeepCopyInto(out *ExpressRouteCircuitSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitSpec.
func (in *ExpressRouteCircuitSpec) DeepCopy() *ExpressRouteCircuitSpec {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteCircuitStatus) DeepCopyInto(out *ExpressRouteCircuitStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteCircuitStatus.
func (in *ExpressRouteCircuitStatus) DeepCopy() *ExpressRouteCircuitStatus {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteCircuitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteConnection) DeepCopyInto(out *ExpressRouteConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteConnection.
func (in *ExpressRouteConnection) DeepCopy() *ExpressRouteConnection {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteConnectionList) DeepCopyInto(out *ExpressRouteConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExpressRouteConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteConnectionList.
func (in *ExpressRouteConnectionList) DeepCopy() *ExpressRouteConnectionList {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteConnectionObservation) DeepCopyInto(out *ExpressRouteConnectionObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteConnectionObservation.
func (in *ExpressRouteConnectionObservation) DeepCopy() *ExpressRouteConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteConnectionParameters) DeepCopyInto(out *ExpressRouteConnectionParameters) {
	*out = *in
	if in.AuthorizationKey != nil {
		in, out := &in.AuthorizationKey, &out.AuthorizationKey
		*out = new(string)
		**out = **in
	}
	if in.EnableInternetSecurity != nil {
		in, out := &in.EnableInternetSecurity, &out.EnableInternetSecurity
		*out = new(bool)
		**out = **in
	}
	if in.ExpressRouteCircuitPeeringID != nil {
		in, out := &in.ExpressRouteCircuitPeeringID, &out.ExpressRouteCircuitPeeringID
		*out = new(string)
		**out = **in
	}
	if in.ExpressRouteCircuitPeeringIDRef != nil {
		in, out := &in.ExpressRouteCircuitPeeringIDRef, &out.ExpressRouteCircuitPeeringIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ExpressRouteCircuitPeeringIDSelector != nil {
		in, out := &in.ExpressRouteCircuitPeeringIDSelector, &out.ExpressRouteCircuitPeeringIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpressRouteGatewayID != nil {
		in, out := &in.ExpressRouteGatewayID, &out.ExpressRouteGatewayID
		*out = new(string)
		**out = **in
	}
	if in.ExpressRouteGatewayIDRef != nil {
		in, out := &in.ExpressRouteGatewayIDRef, &out.ExpressRouteGatewayIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ExpressRouteGatewayIDSelector != nil {
		in, out := &in.ExpressRouteGatewayIDSelector, &out.ExpressRouteGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = make([]RoutingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoutingWeight != nil {
		in, out := &in.RoutingWeight, &out.RoutingWeight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteConnectionParameters.
func (in *ExpressRouteConnectionParameters) DeepCopy() *ExpressRouteConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteConnectionSpec) DeepCopyInto(out *ExpressRouteConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteConnectionSpec.
func (in *ExpressRouteConnectionSpec) DeepCopy() *ExpressRouteConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteConnectionStatus) DeepCopyInto(out *ExpressRouteConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteConnectionStatus.
func (in *ExpressRouteConnectionStatus) DeepCopy() *ExpressRouteConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteGateway) DeepCopyInto(out *ExpressRouteGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteGateway.
func (in *ExpressRouteGateway) DeepCopy() *ExpressRouteGateway {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteGatewayList) DeepCopyInto(out *ExpressRouteGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExpressRouteGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteGatewayList.
func (in *ExpressRouteGatewayList) DeepCopy() *ExpressRouteGatewayList {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRouteGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteGatewayObservation) DeepCopyInto(out *ExpressRouteGatewayObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteGatewayObservation.
func (in *ExpressRouteGatewayObservation) DeepCopy() *ExpressRouteGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteGatewayParameters) DeepCopyInto(out *ExpressRouteGatewayParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ScaleUnits != nil {
		in, out := &in.ScaleUnits, &out.ScaleUnits
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualHubID != nil {
		in, out := &in.VirtualHubID, &out.VirtualHubID
		*out = new(string)
		**out = **in
	}
	if in.VirtualHubIDRef != nil {
		in, out := &in.VirtualHubIDRef, &out.VirtualHubIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VirtualHubIDSelector != nil {
		in, out := &in.VirtualHubIDSelector, &out.VirtualHubIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteGatewayParameters.
func (in *ExpressRouteGatewayParameters) DeepCopy() *ExpressRouteGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteGatewaySpec) DeepCopyInto(out *ExpressRouteGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteGatewaySpec.
func (in *ExpressRouteGatewaySpec) DeepCopy() *ExpressRouteGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRouteGatewayStatus) DeepCopyInto(out *ExpressRouteGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRouteGatewayStatus.
func (in *ExpressRouteGatewayStatus) DeepCopy() *ExpressRouteGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(ExpressRouteGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRoutePort) DeepCopyInto(out *ExpressRoutePort) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRoutePort.
func (in *ExpressRoutePort) DeepCopy() *ExpressRoutePort {
	if in == nil {
		return nil
	}
	out := new(ExpressRoutePort)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRoutePort) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRoutePortList) DeepCopyInto(out *ExpressRoutePortList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExpressRoutePort, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRoutePortList.
func (in *ExpressRoutePortList) DeepCopy() *ExpressRoutePortList {
	if in == nil {
		return nil
	}
	out := new(ExpressRoutePortList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExpressRoutePortList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRoutePortObservation) DeepCopyInto(out *ExpressRoutePortObservation) {
	*out = *in
	if in.Ethertype != nil {
		in, out := &in.Ethertype, &out.Ethertype
		*out = new(string)
		**out = **in
	}
	if in.GUID != nil {
		in, out := &in.GUID, &out.GUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Link1 != nil {
		in, out := &in.Link1, &out.Link1
		*out = make([]Link1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Link2 != nil {
		in, out := &in.Link2, &out.Link2
		*out = make([]Link2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRoutePortObservation.
func (in *ExpressRoutePortObservation) DeepCopy() *ExpressRoutePortObservation {
	if in == nil {
		return nil
	}
	out := new(ExpressRoutePortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRoutePortParameters) DeepCopyInto(out *ExpressRoutePortParameters) {
	*out = *in
	if in.BandwidthInGbps != nil {
		in, out := &in.BandwidthInGbps, &out.BandwidthInGbps
		*out = new(float64)
		**out = **in
	}
	if in.Encapsulation != nil {
		in, out := &in.Encapsulation, &out.Encapsulation
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Link1 != nil {
		in, out := &in.Link1, &out.Link1
		*out = make([]Link1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Link2 != nil {
		in, out := &in.Link2, &out.Link2
		*out = make([]Link2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PeeringLocation != nil {
		in, out := &in.PeeringLocation, &out.PeeringLocation
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRoutePortParameters.
func (in *ExpressRoutePortParameters) DeepCopy() *ExpressRoutePortParameters {
	if in == nil {
		return nil
	}
	out := new(ExpressRoutePortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRoutePortSpec) DeepCopyInto(out *ExpressRoutePortSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRoutePortSpec.
func (in *ExpressRoutePortSpec) DeepCopy() *ExpressRoutePortSpec {
	if in == nil {
		return nil
	}
	out := new(ExpressRoutePortSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressRoutePortStatus) DeepCopyInto(out *ExpressRoutePortStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressRoutePortStatus.
func (in *ExpressRoutePortStatus) DeepCopy() *ExpressRoutePortStatus {
	if in == nil {
		return nil
	}
	out := new(ExpressRoutePortStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = make([]ItemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Firewall) DeepCopyInto(out *Firewall) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Firewall.
func (in *Firewall) DeepCopy() *Firewall {
	if in == nil {
		return nil
	}
	out := new(Firewall)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Firewall) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallList) DeepCopyInto(out *FirewallList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Firewall, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallList.
func (in *FirewallList) DeepCopy() *FirewallList {
	if in == nil {
		return nil
	}
	out := new(FirewallList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallObservation) DeepCopyInto(out *FirewallObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPConfiguration != nil {
		in, out := &in.IPConfiguration, &out.IPConfiguration
		*out = make([]IPConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagementIPConfiguration != nil {
		in, out := &in.ManagementIPConfiguration, &out.ManagementIPConfiguration
		*out = make([]ManagementIPConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualHub != nil {
		in, out := &in.VirtualHub, &out.VirtualHub
		*out = make([]VirtualHubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallObservation.
func (in *FirewallObservation) DeepCopy() *FirewallObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallParameters) DeepCopyInto(out *FirewallParameters) {
	*out = *in
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FirewallPolicyID != nil {
		in, out := &in.FirewallPolicyID, &out.FirewallPolicyID
		*out = new(string)
		**out = **in
	}
	if in.IPConfiguration != nil {
		in, out := &in.IPConfiguration, &out.IPConfiguration
		*out = make([]IPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagementIPConfiguration != nil {
		in, out := &in.ManagementIPConfiguration, &out.ManagementIPConfiguration
		*out = make([]ManagementIPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIPRanges != nil {
		in, out := &in.PrivateIPRanges, &out.PrivateIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SkuTier != nil {
		in, out := &in.SkuTier, &out.SkuTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThreatIntelMode != nil {
		in, out := &in.ThreatIntelMode, &out.ThreatIntelMode
		*out = new(string)
		**out = **in
	}
	if in.VirtualHub != nil {
		in, out := &in.VirtualHub, &out.VirtualHub
		*out = make([]VirtualHubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallParameters.
func (in *FirewallParameters) DeepCopy() *FirewallParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallSpec) DeepCopyInto(out *FirewallSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallSpec.
func (in *FirewallSpec) DeepCopy() *FirewallSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallStatus) DeepCopyInto(out *FirewallStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallStatus.
func (in *FirewallStatus) DeepCopy() *FirewallStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendIPConfigurationObservation) DeepCopyInto(out *FrontendIPConfigurationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InboundNATRules != nil {
		in, out := &in.InboundNATRules, &out.InboundNATRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoadBalancerRules != nil {
		in, out := &in.LoadBalancerRules, &out.LoadBalancerRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundRules != nil {
		in, out := &in.OutboundRules, &out.OutboundRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendIPConfigurationObservation.
func (in *FrontendIPConfigurationObservation) DeepCopy() *FrontendIPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(FrontendIPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendIPConfigurationParameters) DeepCopyInto(out *FrontendIPConfigurationParameters) {
	*out = *in
	if in.GatewayLoadBalancerFrontendIPConfigurationID != nil {
		in, out := &in.GatewayLoadBalancerFrontendIPConfigurationID, &out.GatewayLoadBalancerFrontendIPConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressAllocation != nil {
		in, out := &in.PrivateIPAddressAllocation, &out.PrivateIPAddressAllocation
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressIDRef != nil {
		in, out := &in.PublicIPAddressIDRef, &out.PublicIPAddressIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.PublicIPAddressIDSelector != nil {
		in, out := &in.PublicIPAddressIDSelector, &out.PublicIPAddressIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicIPPrefixID != nil {
		in, out := &in.PublicIPPrefixID, &out.PublicIPPrefixID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendIPConfigurationParameters.
func (in *FrontendIPConfigurationParameters) DeepCopy() *FrontendIPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(FrontendIPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPConfigurationObservation) DeepCopyInto(out *HTTPConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPConfigurationObservation.
func (in *HTTPConfigurationObservation) DeepCopy() *HTTPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPConfigurationParameters) DeepCopyInto(out *HTTPConfigurationParameters) {
	*out = *in
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PreferHTTPS != nil {
		in, out := &in.PreferHTTPS, &out.PreferHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RequestHeader != nil {
		in, out := &in.RequestHeader, &out.RequestHeader
		*out = make([]RequestHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ValidStatusCodeRanges != nil {
		in, out := &in.ValidStatusCodeRanges, &out.ValidStatusCodeRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPConfigurationParameters.
func (in *HTTPConfigurationParameters) DeepCopy() *HTTPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigurationObservation) DeepCopyInto(out *IPConfigurationObservation) {
	*out = *in
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigurationObservation.
func (in *IPConfigurationObservation) DeepCopy() *IPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(IPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigurationParameters) DeepCopyInto(out *IPConfigurationParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressIDRef != nil {
		in, out := &in.PublicIPAddressIDRef, &out.PublicIPAddressIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.PublicIPAddressIDSelector != nil {
		in, out := &in.PublicIPAddressIDSelector, &out.PublicIPAddressIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigurationParameters.
func (in *IPConfigurationParameters) DeepCopy() *IPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(IPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPGroup) DeepCopyInto(out *IPGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPGroup.
func (in *IPGroup) DeepCopy() *IPGroup {
	if in == nil {
		return nil
	}
	out := new(IPGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPGroupList) DeepCopyInto(out *IPGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IPGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPGroupList.
func (in *IPGroupList) DeepCopy() *IPGroupList {
	if in == nil {
		return nil
	}
	out := new(IPGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPGroupObservation) DeepCopyInto(out *IPGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPGroupObservation.
func (in *IPGroupObservation) DeepCopy() *IPGroupObservation {
	if in == nil {
		return nil
	}
	out := new(IPGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPGroupParameters) DeepCopyInto(out *IPGroupParameters) {
	*out = *in
	if in.Cidrs != nil {
		in, out := &in.Cidrs, &out.Cidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPGroupParameters.
func (in *IPGroupParameters) DeepCopy() *IPGroupParameters {
	if in == nil {
		return nil
	}
	out := new(IPGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPGroupSpec) DeepCopyInto(out *IPGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPGroupSpec.
func (in *IPGroupSpec) DeepCopy() *IPGroupSpec {
	if in == nil {
		return nil
	}
	out := new(IPGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPGroupStatus) DeepCopyInto(out *IPGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPGroupStatus.
func (in *IPGroupStatus) DeepCopy() *IPGroupStatus {
	if in == nil {
		return nil
	}
	out := new(IPGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Observation) DeepCopyInto(out *IPv6Observation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Observation.
func (in *IPv6Observation) DeepCopy() *IPv6Observation {
	if in == nil {
		return nil
	}
	out := new(IPv6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Parameters) DeepCopyInto(out *IPv6Parameters) {
	*out = *in
	if in.MicrosoftPeering != nil {
		in, out := &in.MicrosoftPeering, &out.MicrosoftPeering
		*out = make([]MicrosoftPeeringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrimaryPeerAddressPrefix != nil {
		in, out := &in.PrimaryPeerAddressPrefix, &out.PrimaryPeerAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.RouteFilterID != nil {
		in, out := &in.RouteFilterID, &out.RouteFilterID
		*out = new(string)
		**out = **in
	}
	if in.SecondaryPeerAddressPrefix != nil {
		in, out := &in.SecondaryPeerAddressPrefix, &out.SecondaryPeerAddressPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Parameters.
func (in *IPv6Parameters) DeepCopy() *IPv6Parameters {
	if in == nil {
		return nil
	}
	out := new(IPv6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IcmpConfigurationObservation) DeepCopyInto(out *IcmpConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IcmpConfigurationObservation.
func (in *IcmpConfigurationObservation) DeepCopy() *IcmpConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(IcmpConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IcmpConfigurationParameters) DeepCopyInto(out *IcmpConfigurationParameters) {
	*out = *in
	if in.TraceRouteEnabled != nil {
		in, out := &in.TraceRouteEnabled, &out.TraceRouteEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IcmpConfigurationParameters.
func (in *IcmpConfigurationParameters) DeepCopy() *IcmpConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(IcmpConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecPolicyObservation) DeepCopyInto(out *IpsecPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecPolicyObservation.
func (in *IpsecPolicyObservation) DeepCopy() *IpsecPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(IpsecPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecPolicyParameters) DeepCopyInto(out *IpsecPolicyParameters) {
	*out = *in
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IkeEncryption != nil {
		in, out := &in.IkeEncryption, &out.IkeEncryption
		*out = new(string)
		**out = **in
	}
	if in.IkeIntegrity != nil {
		in, out := &in.IkeIntegrity, &out.IkeIntegrity
		*out = new(string)
		**out = **in
	}
	if in.IpsecEncryption != nil {
		in, out := &in.IpsecEncryption, &out.IpsecEncryption
		*out = new(string)
		**out = **in
	}
	if in.IpsecIntegrity != nil {
		in, out := &in.IpsecIntegrity, &out.IpsecIntegrity
		*out = new(string)
		**out = **in
	}
	if in.PfsGroup != nil {
		in, out := &in.PfsGroup, &out.PfsGroup
		*out = new(string)
		**out = **in
	}
	if in.SaDatasize != nil {
		in, out := &in.SaDatasize, &out.SaDatasize
		*out = new(float64)
		**out = **in
	}
	if in.SaLifetime != nil {
		in, out := &in.SaLifetime, &out.SaLifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecPolicyParameters.
func (in *IpsecPolicyParameters) DeepCopy() *IpsecPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemObservation) DeepCopyInto(out *ItemObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemObservation.
func (in *ItemObservation) DeepCopy() *ItemObservation {
	if in == nil {
		return nil
	}
	out := new(ItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemParameters) DeepCopyInto(out *ItemParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemParameters.
func (in *ItemParameters) DeepCopy() *ItemParameters {
	if in == nil {
		return nil
	}
	out := new(ItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Link1Observation) DeepCopyInto(out *Link1Observation) {
	*out = *in
	if in.ConnectorType != nil {
		in, out := &in.ConnectorType, &out.ConnectorType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
	if in.PatchPanelID != nil {
		in, out := &in.PatchPanelID, &out.PatchPanelID
		*out = new(string)
		**out = **in
	}
	if in.RackID != nil {
		in, out := &in.RackID, &out.RackID
		*out = new(string)
		**out = **in
	}
	if in.RouterName != nil {
		in, out := &in.RouterName, &out.RouterName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Link1Observation.
func (in *Link1Observation) DeepCopy() *Link1Observation {
	if in == nil {
		return nil
	}
	out := new(Link1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Link1Parameters) DeepCopyInto(out *Link1Parameters) {
	*out = *in
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MacsecCakKeyvaultSecretID != nil {
		in, out := &in.MacsecCakKeyvaultSecretID, &out.MacsecCakKeyvaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.MacsecCipher != nil {
		in, out := &in.MacsecCipher, &out.MacsecCipher
		*out = new(string)
		**out = **in
	}
	if in.MacsecCknKeyvaultSecretID != nil {
		in, out := &in.MacsecCknKeyvaultSecretID, &out.MacsecCknKeyvaultSecretID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Link1Parameters.
func (in *Link1Parameters) DeepCopy() *Link1Parameters {
	if in == nil {
		return nil
	}
	out := new(Link1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Link2Observation) DeepCopyInto(out *Link2Observation) {
	*out = *in
	if in.ConnectorType != nil {
		in, out := &in.ConnectorType, &out.ConnectorType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
	if in.PatchPanelID != nil {
		in, out := &in.PatchPanelID, &out.PatchPanelID
		*out = new(string)
		**out = **in
	}
	if in.RackID != nil {
		in, out := &in.RackID, &out.RackID
		*out = new(string)
		**out = **in
	}
	if in.RouterName != nil {
		in, out := &in.RouterName, &out.RouterName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Link2Observation.
func (in *Link2Observation) DeepCopy() *Link2Observation {
	if in == nil {
		return nil
	}
	out := new(Link2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Link2Parameters) DeepCopyInto(out *Link2Parameters) {
	*out = *in
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MacsecCakKeyvaultSecretID != nil {
		in, out := &in.MacsecCakKeyvaultSecretID, &out.MacsecCakKeyvaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.MacsecCipher != nil {
		in, out := &in.MacsecCipher, &out.MacsecCipher
		*out = new(string)
		**out = **in
	}
	if in.MacsecCknKeyvaultSecretID != nil {
		in, out := &in.MacsecCknKeyvaultSecretID, &out.MacsecCknKeyvaultSecretID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Link2Parameters.
func (in *Link2Parameters) DeepCopy() *Link2Parameters {
	if in == nil {
		return nil
	}
	out := new(Link2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancer) DeepCopyInto(out *LoadBalancer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancer.
func (in *LoadBalancer) DeepCopy() *LoadBalancer {
	if in == nil {
		return nil
	}
	out := new(LoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPool) DeepCopyInto(out *LoadBalancerBackendAddressPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPool.
func (in *LoadBalancerBackendAddressPool) DeepCopy() *LoadBalancerBackendAddressPool {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerBackendAddressPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolAddress) DeepCopyInto(out *LoadBalancerBackendAddressPoolAddress) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolAddress.
func (in *LoadBalancerBackendAddressPoolAddress) DeepCopy() *LoadBalancerBackendAddressPoolAddress {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerBackendAddressPoolAddress) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolAddressList) DeepCopyInto(out *LoadBalancerBackendAddressPoolAddressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerBackendAddressPoolAddress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolAddressList.
func (in *LoadBalancerBackendAddressPoolAddressList) DeepCopy() *LoadBalancerBackendAddressPoolAddressList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolAddressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerBackendAddressPoolAddressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolAddressObservation) DeepCopyInto(out *LoadBalancerBackendAddressPoolAddressObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolAddressObservation.
func (in *LoadBalancerBackendAddressPoolAddressObservation) DeepCopy() *LoadBalancerBackendAddressPoolAddressObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolAddressParameters) DeepCopyInto(out *LoadBalancerBackendAddressPoolAddressParameters) {
	*out = *in
	if in.BackendAddressPoolID != nil {
		in, out := &in.BackendAddressPoolID, &out.BackendAddressPoolID
		*out = new(string)
		**out = **in
	}
	if in.BackendAddressPoolIDRef != nil {
		in, out := &in.BackendAddressPoolIDRef, &out.BackendAddressPoolIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.BackendAddressPoolIDSelector != nil {
		in, out := &in.BackendAddressPoolIDSelector, &out.BackendAddressPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkIDRef != nil {
		in, out := &in.VirtualNetworkIDRef, &out.VirtualNetworkIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VirtualNetworkIDSelector != nil {
		in, out := &in.VirtualNetworkIDSelector, &out.VirtualNetworkIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolAddressParameters.
func (in *LoadBalancerBackendAddressPoolAddressParameters) DeepCopy() *LoadBalancerBackendAddressPoolAddressParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolAddressSpec) DeepCopyInto(out *LoadBalancerBackendAddressPoolAddressSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolAddressSpec.
func (in *LoadBalancerBackendAddressPoolAddressSpec) DeepCopy() *LoadBalancerBackendAddressPoolAddressSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolAddressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolAddressStatus) DeepCopyInto(out *LoadBalancerBackendAddressPoolAddressStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolAddressStatus.
func (in *LoadBalancerBackendAddressPoolAddressStatus) DeepCopy() *LoadBalancerBackendAddressPoolAddressStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolAddressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolList) DeepCopyInto(out *LoadBalancerBackendAddressPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerBackendAddressPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolList.
func (in *LoadBalancerBackendAddressPoolList) DeepCopy() *LoadBalancerBackendAddressPoolList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerBackendAddressPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolObservation) DeepCopyInto(out *LoadBalancerBackendAddressPoolObservation) {
	*out = *in
	if in.BackendIPConfigurations != nil {
		in, out := &in.BackendIPConfigurations, &out.BackendIPConfigurations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancingRules != nil {
		in, out := &in.LoadBalancingRules, &out.LoadBalancingRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundRules != nil {
		in, out := &in.OutboundRules, &out.OutboundRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolObservation.
func (in *LoadBalancerBackendAddressPoolObservation) DeepCopy() *LoadBalancerBackendAddressPoolObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolParameters) DeepCopyInto(out *LoadBalancerBackendAddressPoolParameters) {
	*out = *in
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerIDRef != nil {
		in, out := &in.LoadbalancerIDRef, &out.LoadbalancerIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.LoadbalancerIDSelector != nil {
		in, out := &in.LoadbalancerIDSelector, &out.LoadbalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TunnelInterface != nil {
		in, out := &in.TunnelInterface, &out.TunnelInterface
		*out = make([]TunnelInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolParameters.
func (in *LoadBalancerBackendAddressPoolParameters) DeepCopy() *LoadBalancerBackendAddressPoolParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolSpec) DeepCopyInto(out *LoadBalancerBackendAddressPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolSpec.
func (in *LoadBalancerBackendAddressPoolSpec) DeepCopy() *LoadBalancerBackendAddressPoolSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddressPoolStatus) DeepCopyInto(out *LoadBalancerBackendAddressPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddressPoolStatus.
func (in *LoadBalancerBackendAddressPoolStatus) DeepCopy() *LoadBalancerBackendAddressPoolStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddressPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerList) DeepCopyInto(out *LoadBalancerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerList.
func (in *LoadBalancerList) DeepCopy() *LoadBalancerList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatPool) DeepCopyInto(out *LoadBalancerNatPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatPool.
func (in *LoadBalancerNatPool) DeepCopy() *LoadBalancerNatPool {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerNatPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatPoolList) DeepCopyInto(out *LoadBalancerNatPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerNatPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatPoolList.
func (in *LoadBalancerNatPoolList) DeepCopy() *LoadBalancerNatPoolList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerNatPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatPoolObservation) DeepCopyInto(out *LoadBalancerNatPoolObservation) {
	*out = *in
	if in.FrontendIPConfigurationID != nil {
		in, out := &in.FrontendIPConfigurationID, &out.FrontendIPConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatPoolObservation.
func (in *LoadBalancerNatPoolObservation) DeepCopy() *LoadBalancerNatPoolObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatPoolParameters) DeepCopyInto(out *LoadBalancerNatPoolParameters) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(float64)
		**out = **in
	}
	if in.FloatingIPEnabled != nil {
		in, out := &in.FloatingIPEnabled, &out.FloatingIPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FrontendIPConfigurationName != nil {
		in, out := &in.FrontendIPConfigurationName, &out.FrontendIPConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.FrontendPortEnd != nil {
		in, out := &in.FrontendPortEnd, &out.FrontendPortEnd
		*out = new(float64)
		**out = **in
	}
	if in.FrontendPortStart != nil {
		in, out := &in.FrontendPortStart, &out.FrontendPortStart
		*out = new(float64)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerIDRef != nil {
		in, out := &in.LoadbalancerIDRef, &out.LoadbalancerIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.LoadbalancerIDSelector != nil {
		in, out := &in.LoadbalancerIDSelector, &out.LoadbalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TCPResetEnabled != nil {
		in, out := &in.TCPResetEnabled, &out.TCPResetEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatPoolParameters.
func (in *LoadBalancerNatPoolParameters) DeepCopy() *LoadBalancerNatPoolParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatPoolSpec) DeepCopyInto(out *LoadBalancerNatPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatPoolSpec.
func (in *LoadBalancerNatPoolSpec) DeepCopy() *LoadBalancerNatPoolSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatPoolStatus) DeepCopyInto(out *LoadBalancerNatPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatPoolStatus.
func (in *LoadBalancerNatPoolStatus) DeepCopy() *LoadBalancerNatPoolStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatRule) DeepCopyInto(out *LoadBalancerNatRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatRule.
func (in *LoadBalancerNatRule) DeepCopy() *LoadBalancerNatRule {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerNatRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatRuleList) DeepCopyInto(out *LoadBalancerNatRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerNatRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatRuleList.
func (in *LoadBalancerNatRuleList) DeepCopy() *LoadBalancerNatRuleList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerNatRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatRuleObservation) DeepCopyInto(out *LoadBalancerNatRuleObservation) {
	*out = *in
	if in.BackendIPConfigurationID != nil {
		in, out := &in.BackendIPConfigurationID, &out.BackendIPConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.FrontendIPConfigurationID != nil {
		in, out := &in.FrontendIPConfigurationID, &out.FrontendIPConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatRuleObservation.
func (in *LoadBalancerNatRuleObservation) DeepCopy() *LoadBalancerNatRuleObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatRuleParameters) DeepCopyInto(out *LoadBalancerNatRuleParameters) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(float64)
		**out = **in
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTCPReset != nil {
		in, out := &in.EnableTCPReset, &out.EnableTCPReset
		*out = new(bool)
		**out = **in
	}
	if in.FrontendIPConfigurationName != nil {
		in, out := &in.FrontendIPConfigurationName, &out.FrontendIPConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(float64)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerIDRef != nil {
		in, out := &in.LoadbalancerIDRef, &out.LoadbalancerIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.LoadbalancerIDSelector != nil {
		in, out := &in.LoadbalancerIDSelector, &out.LoadbalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatRuleParameters.
func (in *LoadBalancerNatRuleParameters) DeepCopy() *LoadBalancerNatRuleParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatRuleSpec) DeepCopyInto(out *LoadBalancerNatRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatRuleSpec.
func (in *LoadBalancerNatRuleSpec) DeepCopy() *LoadBalancerNatRuleSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerNatRuleStatus) DeepCopyInto(out *LoadBalancerNatRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerNatRuleStatus.
func (in *LoadBalancerNatRuleStatus) DeepCopy() *LoadBalancerNatRuleStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerNatRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerObservation) DeepCopyInto(out *LoadBalancerObservation) {
	*out = *in
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = make([]FrontendIPConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddresses != nil {
		in, out := &in.PrivateIPAddresses, &out.PrivateIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerObservation.
func (in *LoadBalancerObservation) DeepCopy() *LoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOutboundRule) DeepCopyInto(out *LoadBalancerOutboundRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOutboundRule.
func (in *LoadBalancerOutboundRule) DeepCopy() *LoadBalancerOutboundRule {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOutboundRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerOutboundRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOutboundRuleFrontendIPConfigurationObservation) DeepCopyInto(out *LoadBalancerOutboundRuleFrontendIPConfigurationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOutboundRuleFrontendIPConfigurationObservation.
func (in *LoadBalancerOutboundRuleFrontendIPConfigurationObservation) DeepCopy() *LoadBalancerOutboundRuleFrontendIPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOutboundRuleFrontendIPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOutboundRuleFrontendIPConfigurationParameters) DeepCopyInto(out *LoadBalancerOutboundRuleFrontendIPConfigurationParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOutboundRuleFrontendIPConfigurationParameters.
func (in *LoadBalancerOutboundRuleFrontendIPConfigurationParameters) DeepCopy() *LoadBalancerOutboundRuleFrontendIPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOutboundRuleFrontendIPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOutboundRuleList) DeepCopyInto(out *LoadBalancerOutboundRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerOutboundRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOutboundRuleList.
func (in *LoadBalancerOutboundRuleList) DeepCopy() *LoadBalancerOutboundRuleList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOutboundRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerOutboundRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOutboundRuleObservation) DeepCopyInto(out *LoadBalancerOutboundRuleObservation) {
	*out = *in
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = make([]LoadBalancerOutboundRuleFrontendIPConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOutboundRuleObservation.
func (in *LoadBalancerOutboundRuleObservation) DeepCopy() *LoadBalancerOutboundRuleObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOutboundRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOutboundRuleParameters) DeepCopyInto(out *LoadBalancerOutboundRuleParameters) {
	*out = *in
	if in.AllocatedOutboundPorts != nil {
		in, out := &in.AllocatedOutboundPorts, &out.AllocatedOutboundPorts
		*out = new(float64)
		**out = **in
	}
	if in.BackendAddressPoolID != nil {
		in, out := &in.BackendAddressPoolID, &out.BackendAddressPoolID
		*out = new(string)
		**out = **in
	}
	if in.BackendAddressPoolIDRef != nil {
		in, out := &in.BackendAddressPoolIDRef, &out.BackendAddressPoolIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.BackendAddressPoolIDSelector != nil {
		in, out := &in.BackendAddressPoolIDSelector, &out.BackendAddressPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableTCPReset != nil {
		in, out := &in.EnableTCPReset, &out.EnableTCPReset
		*out = new(bool)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = make([]LoadBalancerOutboundRuleFrontendIPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerIDRef != nil {
		in, out := &in.LoadbalancerIDRef, &out.LoadbalancerIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.LoadbalancerIDSelector != nil {
		in, out := &in.LoadbalancerIDSelector, &out.LoadbalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOutboundRuleParameters.
func (in *LoadBalancerOutboundRuleParameters) DeepCopy() *LoadBalancerOutboundRuleParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOutboundRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOutboundRuleSpec) DeepCopyInto(out *LoadBalancerOutboundRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOutboundRuleSpec.
func (in *LoadBalancerOutboundRuleSpec) DeepCopy() *LoadBalancerOutboundRuleSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOutboundRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOutboundRuleStatus) DeepCopyInto(out *LoadBalancerOutboundRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOutboundRuleStatus.
func (in *LoadBalancerOutboundRuleStatus) DeepCopy() *LoadBalancerOutboundRuleStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOutboundRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerParameters) DeepCopyInto(out *LoadBalancerParameters) {
	*out = *in
	if in.EdgeZone != nil {
		in, out := &in.EdgeZone, &out.EdgeZone
		*out = new(string)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = make([]FrontendIPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.SkuTier != nil {
		in, out := &in.SkuTier, &out.SkuTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerParameters.
func (in *LoadBalancerParameters) DeepCopy() *LoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerProbe) DeepCopyInto(out *LoadBalancerProbe) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerProbe.
func (in *LoadBalancerProbe) DeepCopy() *LoadBalancerProbe {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerProbe) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerProbeList) DeepCopyInto(out *LoadBalancerProbeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerProbe, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerProbeList.
func (in *LoadBalancerProbeList) DeepCopy() *LoadBalancerProbeList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerProbeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerProbeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerProbeObservation) DeepCopyInto(out *LoadBalancerProbeObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerRules != nil {
		in, out := &in.LoadBalancerRules, &out.LoadBalancerRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerProbeObservation.
func (in *LoadBalancerProbeObservation) DeepCopy() *LoadBalancerProbeObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerProbeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerProbeParameters) DeepCopyInto(out *LoadBalancerProbeParameters) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerIDRef != nil {
		in, out := &in.LoadbalancerIDRef, &out.LoadbalancerIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.LoadbalancerIDSelector != nil {
		in, out := &in.LoadbalancerIDSelector, &out.LoadbalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NumberOfProbes != nil {
		in, out := &in.NumberOfProbes, &out.NumberOfProbes
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerProbeParameters.
func (in *LoadBalancerProbeParameters) DeepCopy() *LoadBalancerProbeParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerProbeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerProbeSpec) DeepCopyInto(out *LoadBalancerProbeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerProbeSpec.
func (in *LoadBalancerProbeSpec) DeepCopy() *LoadBalancerProbeSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerProbeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerProbeStatus) DeepCopyInto(out *LoadBalancerProbeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerProbeStatus.
func (in *LoadBalancerProbeStatus) DeepCopy() *LoadBalancerProbeStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerProbeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerRule) DeepCopyInto(out *LoadBalancerRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerRule.
func (in *LoadBalancerRule) DeepCopy() *LoadBalancerRule {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerRuleList) DeepCopyInto(out *LoadBalancerRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerRuleList.
func (in *LoadBalancerRuleList) DeepCopy() *LoadBalancerRuleList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerRuleObservation) DeepCopyInto(out *LoadBalancerRuleObservation) {
	*out = *in
	if in.FrontendIPConfigurationID != nil {
		in, out := &in.FrontendIPConfigurationID, &out.FrontendIPConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerRuleObservation.
func (in *LoadBalancerRuleObservation) DeepCopy() *LoadBalancerRuleObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerRuleParameters) DeepCopyInto(out *LoadBalancerRuleParameters) {
	*out = *in
	if in.BackendAddressPoolIds != nil {
		in, out := &in.BackendAddressPoolIds, &out.BackendAddressPoolIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(float64)
		**out = **in
	}
	if in.DisableOutboundSnat != nil {
		in, out := &in.DisableOutboundSnat, &out.DisableOutboundSnat
		*out = new(bool)
		**out = **in
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTCPReset != nil {
		in, out := &in.EnableTCPReset, &out.EnableTCPReset
		*out = new(bool)
		**out = **in
	}
	if in.FrontendIPConfigurationName != nil {
		in, out := &in.FrontendIPConfigurationName, &out.FrontendIPConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(float64)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LoadDistribution != nil {
		in, out := &in.LoadDistribution, &out.LoadDistribution
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerIDRef != nil {
		in, out := &in.LoadbalancerIDRef, &out.LoadbalancerIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.LoadbalancerIDSelector != nil {
		in, out := &in.LoadbalancerIDSelector, &out.LoadbalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProbeID != nil {
		in, out := &in.ProbeID, &out.ProbeID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerRuleParameters.
func (in *LoadBalancerRuleParameters) DeepCopy() *LoadBalancerRuleParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerRuleSpec) DeepCopyInto(out *LoadBalancerRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerRuleSpec.
func (in *LoadBalancerRuleSpec) DeepCopy() *LoadBalancerRuleSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerRuleStatus) DeepCopyInto(out *LoadBalancerRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerRuleStatus.
func (in *LoadBalancerRuleStatus) DeepCopy() *LoadBalancerRuleStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSpec) DeepCopyInto(out *LoadBalancerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSpec.
func (in *LoadBalancerSpec) DeepCopy() *LoadBalancerSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerStatus) DeepCopyInto(out *LoadBalancerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerStatus.
func (in *LoadBalancerStatus) DeepCopy() *LoadBalancerStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalNetworkGateway) DeepCopyInto(out *LocalNetworkGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalNetworkGateway.
func (in *LocalNetworkGateway) DeepCopy() *LocalNetworkGateway {
	if in == nil {
		return nil
	}
	out := new(LocalNetworkGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LocalNetworkGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalNetworkGatewayList) DeepCopyInto(out *LocalNetworkGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LocalNetworkGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalNetworkGatewayList.
func (in *LocalNetworkGatewayList) DeepCopy() *LocalNetworkGatewayList {
	if in == nil {
		return nil
	}
	out := new(LocalNetworkGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LocalNetworkGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalNetworkGatewayObservation) DeepCopyInto(out *LocalNetworkGatewayObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalNetworkGatewayObservation.
func (in *LocalNetworkGatewayObservation) DeepCopy() *LocalNetworkGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(LocalNetworkGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalNetworkGatewayParameters) DeepCopyInto(out *LocalNetworkGatewayParameters) {
	*out = *in
	if in.AddressSpace != nil {
		in, out := &in.AddressSpace, &out.AddressSpace
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BGPSettings != nil {
		in, out := &in.BGPSettings, &out.BGPSettings
		*out = make([]BGPSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayAddress != nil {
		in, out := &in.GatewayAddress, &out.GatewayAddress
		*out = new(string)
		**out = **in
	}
	if in.GatewayFqdn != nil {
		in, out := &in.GatewayFqdn, &out.GatewayFqdn
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalNetworkGatewayParameters.
func (in *LocalNetworkGatewayParameters) DeepCopy() *LocalNetworkGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(LocalNetworkGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalNetworkGatewaySpec) DeepCopyInto(out *LocalNetworkGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalNetworkGatewaySpec.
func (in *LocalNetworkGatewaySpec) DeepCopy() *LocalNetworkGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(LocalNetworkGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalNetworkGatewayStatus) DeepCopyInto(out *LocalNetworkGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalNetworkGatewayStatus.
func (in *LocalNetworkGatewayStatus) DeepCopy() *LocalNetworkGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(LocalNetworkGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementIPConfigurationObservation) DeepCopyInto(out *ManagementIPConfigurationObservation) {
	*out = *in
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementIPConfigurationObservation.
func (in *ManagementIPConfigurationObservation) DeepCopy() *ManagementIPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ManagementIPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementIPConfigurationParameters) DeepCopyInto(out *ManagementIPConfigurationParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementIPConfigurationParameters.
func (in *ManagementIPConfigurationParameters) DeepCopy() *ManagementIPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ManagementIPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftPeeringConfigObservation) DeepCopyInto(out *MicrosoftPeeringConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftPeeringConfigObservation.
func (in *MicrosoftPeeringConfigObservation) DeepCopy() *MicrosoftPeeringConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MicrosoftPeeringConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftPeeringConfigParameters) DeepCopyInto(out *MicrosoftPeeringConfigParameters) {
	*out = *in
	if in.AdvertisedPublicPrefixes != nil {
		in, out := &in.AdvertisedPublicPrefixes, &out.AdvertisedPublicPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(float64)
		**out = **in
	}
	if in.RoutingRegistryName != nil {
		in, out := &in.RoutingRegistryName, &out.RoutingRegistryName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftPeeringConfigParameters.
func (in *MicrosoftPeeringConfigParameters) DeepCopy() *MicrosoftPeeringConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MicrosoftPeeringConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftPeeringObservation) DeepCopyInto(out *MicrosoftPeeringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftPeeringObservation.
func (in *MicrosoftPeeringObservation) DeepCopy() *MicrosoftPeeringObservation {
	if in == nil {
		return nil
	}
	out := new(MicrosoftPeeringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftPeeringParameters) DeepCopyInto(out *MicrosoftPeeringParameters) {
	*out = *in
	if in.AdvertisedPublicPrefixes != nil {
		in, out := &in.AdvertisedPublicPrefixes, &out.AdvertisedPublicPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(float64)
		**out = **in
	}
	if in.RoutingRegistryName != nil {
		in, out := &in.RoutingRegistryName, &out.RoutingRegistryName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftPeeringParameters.
func (in *MicrosoftPeeringParameters) DeepCopy() *MicrosoftPeeringParameters {
	if in == nil {
		return nil
	}
	out := new(MicrosoftPeeringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGateway) DeepCopyInto(out *NATGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGateway.
func (in *NATGateway) DeepCopy() *NATGateway {
	if in == nil {
		return nil
	}
	out := new(NATGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayList) DeepCopyInto(out *NATGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NATGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayList.
func (in *NATGatewayList) DeepCopy() *NATGatewayList {
	if in == nil {
		return nil
	}
	out := new(NATGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayObservation) DeepCopyInto(out *NATGatewayObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGUID != nil {
		in, out := &in.ResourceGUID, &out.ResourceGUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayObservation.
func (in *NATGatewayObservation) DeepCopy() *NATGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(NATGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayParameters) DeepCopyInto(out *NATGatewayParameters) {
	*out = *in
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayParameters.
func (in *NATGatewayParameters) DeepCopy() *NATGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(NATGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPAssociation) DeepCopyInto(out *NATGatewayPublicIPAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPAssociation.
func (in *NATGatewayPublicIPAssociation) DeepCopy() *NATGatewayPublicIPAssociation {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGatewayPublicIPAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPAssociationList) DeepCopyInto(out *NATGatewayPublicIPAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NATGatewayPublicIPAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPAssociationList.
func (in *NATGatewayPublicIPAssociationList) DeepCopy() *NATGatewayPublicIPAssociationList {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGatewayPublicIPAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPAssociationObservation) DeepCopyInto(out *NATGatewayPublicIPAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPAssociationObservation.
func (in *NATGatewayPublicIPAssociationObservation) DeepCopy() *NATGatewayPublicIPAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPAssociationParameters) DeepCopyInto(out *NATGatewayPublicIPAssociationParameters) {
	*out = *in
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayIDRef != nil {
		in, out := &in.NATGatewayIDRef, &out.NATGatewayIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NATGatewayIDSelector != nil {
		in, out := &in.NATGatewayIDSelector, &out.NATGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressIDRef != nil {
		in, out := &in.PublicIPAddressIDRef, &out.PublicIPAddressIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.PublicIPAddressIDSelector != nil {
		in, out := &in.PublicIPAddressIDSelector, &out.PublicIPAddressIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPAssociationParameters.
func (in *NATGatewayPublicIPAssociationParameters) DeepCopy() *NATGatewayPublicIPAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPAssociationSpec) DeepCopyInto(out *NATGatewayPublicIPAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPAssociationSpec.
func (in *NATGatewayPublicIPAssociationSpec) DeepCopy() *NATGatewayPublicIPAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPAssociationStatus) DeepCopyInto(out *NATGatewayPublicIPAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPAssociationStatus.
func (in *NATGatewayPublicIPAssociationStatus) DeepCopy() *NATGatewayPublicIPAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPPrefixAssociation) DeepCopyInto(out *NATGatewayPublicIPPrefixAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPPrefixAssociation.
func (in *NATGatewayPublicIPPrefixAssociation) DeepCopy() *NATGatewayPublicIPPrefixAssociation {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPPrefixAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGatewayPublicIPPrefixAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPPrefixAssociationList) DeepCopyInto(out *NATGatewayPublicIPPrefixAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NATGatewayPublicIPPrefixAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPPrefixAssociationList.
func (in *NATGatewayPublicIPPrefixAssociationList) DeepCopy() *NATGatewayPublicIPPrefixAssociationList {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPPrefixAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGatewayPublicIPPrefixAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPPrefixAssociationObservation) DeepCopyInto(out *NATGatewayPublicIPPrefixAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPPrefixAssociationObservation.
func (in *NATGatewayPublicIPPrefixAssociationObservation) DeepCopy() *NATGatewayPublicIPPrefixAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPPrefixAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPPrefixAssociationParameters) DeepCopyInto(out *NATGatewayPublicIPPrefixAssociationParameters) {
	*out = *in
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayIDRef != nil {
		in, out := &in.NATGatewayIDRef, &out.NATGatewayIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NATGatewayIDSelector != nil {
		in, out := &in.NATGatewayIDSelector, &out.NATGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicIPPrefixID != nil {
		in, out := &in.PublicIPPrefixID, &out.PublicIPPrefixID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPrefixIDRef != nil {
		in, out := &in.PublicIPPrefixIDRef, &out.PublicIPPrefixIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.PublicIPPrefixIDSelector != nil {
		in, out := &in.PublicIPPrefixIDSelector, &out.PublicIPPrefixIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPPrefixAssociationParameters.
func (in *NATGatewayPublicIPPrefixAssociationParameters) DeepCopy() *NATGatewayPublicIPPrefixAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPPrefixAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPPrefixAssociationSpec) DeepCopyInto(out *NATGatewayPublicIPPrefixAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPPrefixAssociationSpec.
func (in *NATGatewayPublicIPPrefixAssociationSpec) DeepCopy() *NATGatewayPublicIPPrefixAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPPrefixAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayPublicIPPrefixAssociationStatus) DeepCopyInto(out *NATGatewayPublicIPPrefixAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayPublicIPPrefixAssociationStatus.
func (in *NATGatewayPublicIPPrefixAssociationStatus) DeepCopy() *NATGatewayPublicIPPrefixAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(NATGatewayPublicIPPrefixAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewaySpec) DeepCopyInto(out *NATGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewaySpec.
func (in *NATGatewaySpec) DeepCopy() *NATGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(NATGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayStatus) DeepCopyInto(out *NATGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayStatus.
func (in *NATGatewayStatus) DeepCopy() *NATGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(NATGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATIPConfigurationObservation) DeepCopyInto(out *NATIPConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATIPConfigurationObservation.
func (in *NATIPConfigurationObservation) DeepCopy() *NATIPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(NATIPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATIPConfigurationParameters) DeepCopyInto(out *NATIPConfigurationParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATIPConfigurationParameters.
func (in *NATIPConfigurationParameters) DeepCopy() *NATIPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(NATIPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface) DeepCopyInto(out *NetworkInterface) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface.
func (in *NetworkInterface) DeepCopy() *NetworkInterface {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterface) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceApplicationSecurityGroupAssociation) DeepCopyInto(out *NetworkInterfaceApplicationSecurityGroupAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceApplicationSecurityGroupAssociation.
func (in *NetworkInterfaceApplicationSecurityGroupAssociation) DeepCopy() *NetworkInterfaceApplicationSecurityGroupAssociation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceApplicationSecurityGroupAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceApplicationSecurityGroupAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationList) DeepCopyInto(out *NetworkInterfaceApplicationSecurityGroupAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInterfaceApplicationSecurityGroupAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceApplicationSecurityGroupAssociationList.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationList) DeepCopy() *NetworkInterfaceApplicationSecurityGroupAssociationList {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceApplicationSecurityGroupAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationObservation) DeepCopyInto(out *NetworkInterfaceApplicationSecurityGroupAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceApplicationSecurityGroupAssociationObservation.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationObservation) DeepCopy() *NetworkInterfaceApplicationSecurityGroupAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceApplicationSecurityGroupAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationParameters) DeepCopyInto(out *NetworkInterfaceApplicationSecurityGroupAssociationParameters) {
	*out = *in
	if in.ApplicationSecurityGroupID != nil {
		in, out := &in.ApplicationSecurityGroupID, &out.ApplicationSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationSecurityGroupIDRef != nil {
		in, out := &in.ApplicationSecurityGroupIDRef, &out.ApplicationSecurityGroupIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ApplicationSecurityGroupIDSelector != nil {
		in, out := &in.ApplicationSecurityGroupIDSelector, &out.ApplicationSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceApplicationSecurityGroupAssociationParameters.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationParameters) DeepCopy() *NetworkInterfaceApplicationSecurityGroupAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceApplicationSecurityGroupAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationSpec) DeepCopyInto(out *NetworkInterfaceApplicationSecurityGroupAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceApplicationSecurityGroupAssociationSpec.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationSpec) DeepCopy() *NetworkInterfaceApplicationSecurityGroupAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceApplicationSecurityGroupAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationStatus) DeepCopyInto(out *NetworkInterfaceApplicationSecurityGroupAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceApplicationSecurityGroupAssociationStatus.
func (in *NetworkInterfaceApplicationSecurityGroupAssociationStatus) DeepCopy() *NetworkInterfaceApplicationSecurityGroupAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceApplicationSecurityGroupAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceBackendAddressPoolAssociation) DeepCopyInto(out *NetworkInterfaceBackendAddressPoolAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceBackendAddressPoolAssociation.
func (in *NetworkInterfaceBackendAddressPoolAssociation) DeepCopy() *NetworkInterfaceBackendAddressPoolAssociation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceBackendAddressPoolAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceBackendAddressPoolAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceBackendAddressPoolAssociationList) DeepCopyInto(out *NetworkInterfaceBackendAddressPoolAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInterfaceBackendAddressPoolAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceBackendAddressPoolAssociationList.
func (in *NetworkInterfaceBackendAddressPoolAssociationList) DeepCopy() *NetworkInterfaceBackendAddressPoolAssociationList {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceBackendAddressPoolAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceBackendAddressPoolAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceBackendAddressPoolAssociationObservation) DeepCopyInto(out *NetworkInterfaceBackendAddressPoolAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceBackendAddressPoolAssociationObservation.
func (in *NetworkInterfaceBackendAddressPoolAssociationObservation) DeepCopy() *NetworkInterfaceBackendAddressPoolAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceBackendAddressPoolAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceBackendAddressPoolAssociationParameters) DeepCopyInto(out *NetworkInterfaceBackendAddressPoolAssociationParameters) {
	*out = *in
	if in.BackendAddressPoolID != nil {
		in, out := &in.BackendAddressPoolID, &out.BackendAddressPoolID
		*out = new(string)
		**out = **in
	}
	if in.BackendAddressPoolIDRef != nil {
		in, out := &in.BackendAddressPoolIDRef, &out.BackendAddressPoolIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.BackendAddressPoolIDSelector != nil {
		in, out := &in.BackendAddressPoolIDSelector, &out.BackendAddressPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPConfigurationName != nil {
		in, out := &in.IPConfigurationName, &out.IPConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceBackendAddressPoolAssociationParameters.
func (in *NetworkInterfaceBackendAddressPoolAssociationParameters) DeepCopy() *NetworkInterfaceBackendAddressPoolAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceBackendAddressPoolAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceBackendAddressPoolAssociationSpec) DeepCopyInto(out *NetworkInterfaceBackendAddressPoolAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceBackendAddressPoolAssociationSpec.
func (in *NetworkInterfaceBackendAddressPoolAssociationSpec) DeepCopy() *NetworkInterfaceBackendAddressPoolAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceBackendAddressPoolAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceBackendAddressPoolAssociationStatus) DeepCopyInto(out *NetworkInterfaceBackendAddressPoolAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceBackendAddressPoolAssociationStatus.
func (in *NetworkInterfaceBackendAddressPoolAssociationStatus) DeepCopy() *NetworkInterfaceBackendAddressPoolAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceBackendAddressPoolAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPConfigurationObservation) DeepCopyInto(out *NetworkInterfaceIPConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPConfigurationObservation.
func (in *NetworkInterfaceIPConfigurationObservation) DeepCopy() *NetworkInterfaceIPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPConfigurationParameters) DeepCopyInto(out *NetworkInterfaceIPConfigurationParameters) {
	*out = *in
	if in.GatewayLoadBalancerFrontendIPConfigurationID != nil {
		in, out := &in.GatewayLoadBalancerFrontendIPConfigurationID, &out.GatewayLoadBalancerFrontendIPConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressAllocation != nil {
		in, out := &in.PrivateIPAddressAllocation, &out.PrivateIPAddressAllocation
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPConfigurationParameters.
func (in *NetworkInterfaceIPConfigurationParameters) DeepCopy() *NetworkInterfaceIPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceList) DeepCopyInto(out *NetworkInterfaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInterface, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceList.
func (in *NetworkInterfaceList) DeepCopy() *NetworkInterfaceList {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceNatRuleAssociation) DeepCopyInto(out *NetworkInterfaceNatRuleAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceNatRuleAssociation.
func (in *NetworkInterfaceNatRuleAssociation) DeepCopy() *NetworkInterfaceNatRuleAssociation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceNatRuleAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceNatRuleAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceNatRuleAssociationList) DeepCopyInto(out *NetworkInterfaceNatRuleAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInterfaceNatRuleAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceNatRuleAssociationList.
func (in *NetworkInterfaceNatRuleAssociationList) DeepCopy() *NetworkInterfaceNatRuleAssociationList {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceNatRuleAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceNatRuleAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceNatRuleAssociationObservation) DeepCopyInto(out *NetworkInterfaceNatRuleAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceNatRuleAssociationObservation.
func (in *NetworkInterfaceNatRuleAssociationObservation) DeepCopy() *NetworkInterfaceNatRuleAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceNatRuleAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceNatRuleAssociationParameters) DeepCopyInto(out *NetworkInterfaceNatRuleAssociationParameters) {
	*out = *in
	if in.IPConfigurationName != nil {
		in, out := &in.IPConfigurationName, &out.IPConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.NATRuleID != nil {
		in, out := &in.NATRuleID, &out.NATRuleID
		*out = new(string)
		**out = **in
	}
	if in.NATRuleIDRef != nil {
		in, out := &in.NATRuleIDRef, &out.NATRuleIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NATRuleIDSelector != nil {
		in, out := &in.NATRuleIDSelector, &out.NATRuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceNatRuleAssociationParameters.
func (in *NetworkInterfaceNatRuleAssociationParameters) DeepCopy() *NetworkInterfaceNatRuleAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceNatRuleAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceNatRuleAssociationSpec) DeepCopyInto(out *NetworkInterfaceNatRuleAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceNatRuleAssociationSpec.
func (in *NetworkInterfaceNatRuleAssociationSpec) DeepCopy() *NetworkInterfaceNatRuleAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceNatRuleAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceNatRuleAssociationStatus) DeepCopyInto(out *NetworkInterfaceNatRuleAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceNatRuleAssociationStatus.
func (in *NetworkInterfaceNatRuleAssociationStatus) DeepCopy() *NetworkInterfaceNatRuleAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceNatRuleAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceObservation) DeepCopyInto(out *NetworkInterfaceObservation) {
	*out = *in
	if in.AppliedDNSServers != nil {
		in, out := &in.AppliedDNSServers, &out.AppliedDNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternalDomainNameSuffix != nil {
		in, out := &in.InternalDomainNameSuffix, &out.InternalDomainNameSuffix
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddresses != nil {
		in, out := &in.PrivateIPAddresses, &out.PrivateIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VirtualMachineID != nil {
		in, out := &in.VirtualMachineID, &out.VirtualMachineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceObservation.
func (in *NetworkInterfaceObservation) DeepCopy() *NetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceParameters) DeepCopyInto(out *NetworkInterfaceParameters) {
	*out = *in
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EdgeZone != nil {
		in, out := &in.EdgeZone, &out.EdgeZone
		*out = new(string)
		**out = **in
	}
	if in.EnableAcceleratedNetworking != nil {
		in, out := &in.EnableAcceleratedNetworking, &out.EnableAcceleratedNetworking
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPForwarding != nil {
		in, out := &in.EnableIPForwarding, &out.EnableIPForwarding
		*out = new(bool)
		**out = **in
	}
	if in.IPConfiguration != nil {
		in, out := &in.IPConfiguration, &out.IPConfiguration
		*out = make([]NetworkInterfaceIPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InternalDNSNameLabel != nil {
		in, out := &in.InternalDNSNameLabel, &out.InternalDNSNameLabel
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceParameters.
func (in *NetworkInterfaceParameters) DeepCopy() *NetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSecurityGroupAssociation) DeepCopyInto(out *NetworkInterfaceSecurityGroupAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSecurityGroupAssociation.
func (in *NetworkInterfaceSecurityGroupAssociation) DeepCopy() *NetworkInterfaceSecurityGroupAssociation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSecurityGroupAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceSecurityGroupAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSecurityGroupAssociationList) DeepCopyInto(out *NetworkInterfaceSecurityGroupAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInterfaceSecurityGroupAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSecurityGroupAssociationList.
func (in *NetworkInterfaceSecurityGroupAssociationList) DeepCopy() *NetworkInterfaceSecurityGroupAssociationList {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSecurityGroupAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceSecurityGroupAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSecurityGroupAssociationObservation) DeepCopyInto(out *NetworkInterfaceSecurityGroupAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSecurityGroupAssociationObservation.
func (in *NetworkInterfaceSecurityGroupAssociationObservation) DeepCopy() *NetworkInterfaceSecurityGroupAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSecurityGroupAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSecurityGroupAssociationParameters) DeepCopyInto(out *NetworkInterfaceSecurityGroupAssociationParameters) {
	*out = *in
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSecurityGroupID != nil {
		in, out := &in.NetworkSecurityGroupID, &out.NetworkSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityGroupIDRef != nil {
		in, out := &in.NetworkSecurityGroupIDRef, &out.NetworkSecurityGroupIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkSecurityGroupIDSelector != nil {
		in, out := &in.NetworkSecurityGroupIDSelector, &out.NetworkSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSecurityGroupAssociationParameters.
func (in *NetworkInterfaceSecurityGroupAssociationParameters) DeepCopy() *NetworkInterfaceSecurityGroupAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSecurityGroupAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSecurityGroupAssociationSpec) DeepCopyInto(out *NetworkInterfaceSecurityGroupAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSecurityGroupAssociationSpec.
func (in *NetworkInterfaceSecurityGroupAssociationSpec) DeepCopy() *NetworkInterfaceSecurityGroupAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSecurityGroupAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSecurityGroupAssociationStatus) DeepCopyInto(out *NetworkInterfaceSecurityGroupAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSecurityGroupAssociationStatus.
func (in *NetworkInterfaceSecurityGroupAssociationStatus) DeepCopy() *NetworkInterfaceSecurityGroupAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSecurityGroupAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSpec) DeepCopyInto(out *NetworkInterfaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSpec.
func (in *NetworkInterfaceSpec) DeepCopy() *NetworkInterfaceSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceStatus) DeepCopyInto(out *NetworkInterfaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceStatus.
func (in *NetworkInterfaceStatus) DeepCopy() *NetworkInterfaceStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketCapture) DeepCopyInto(out *PacketCapture) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketCapture.
func (in *PacketCapture) DeepCopy() *PacketCapture {
	if in == nil {
		return nil
	}
	out := new(PacketCapture)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PacketCapture) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketCaptureFilterObservation) DeepCopyInto(out *PacketCaptureFilterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketCaptureFilterObservation.
func (in *PacketCaptureFilterObservation) DeepCopy() *PacketCaptureFilterObservation {
	if in == nil {
		return nil
	}
	out := new(PacketCaptureFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketCaptureFilterParameters) DeepCopyInto(out *PacketCaptureFilterParameters) {
	*out = *in
	if in.LocalIPAddress != nil {
		in, out := &in.LocalIPAddress, &out.LocalIPAddress
		*out = new(string)
		**out = **in
	}
	if in.LocalPort != nil {
		in, out := &in.LocalPort, &out.LocalPort
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPAddress != nil {
		in, out := &in.RemoteIPAddress, &out.RemoteIPAddress
		*out = new(string)
		**out = **in
	}
	if in.RemotePort != nil {
		in, out := &in.RemotePort, &out.RemotePort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketCaptureFilterParameters.
func (in *PacketCaptureFilterParameters) DeepCopy() *PacketCaptureFilterParameters {
	if in == nil {
		return nil
	}
	out := new(PacketCaptureFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketCaptureList) DeepCopyInto(out *PacketCaptureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PacketCapture, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketCaptureList.
func (in *PacketCaptureList) DeepCopy() *PacketCaptureList {
	if in == nil {
		return nil
	}
	out := new(PacketCaptureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PacketCaptureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketCaptureObservation) DeepCopyInto(out *PacketCaptureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = make([]StorageLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketCaptureObservation.
func (in *PacketCaptureObservation) DeepCopy() *PacketCaptureObservation {
	if in == nil {
		return nil
	}
	out := new(PacketCaptureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketCaptureParameters) DeepCopyInto(out *PacketCaptureParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]PacketCaptureFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaximumBytesPerPacket != nil {
		in, out := &in.MaximumBytesPerPacket, &out.MaximumBytesPerPacket
		*out = new(float64)
		**out = **in
	}
	if in.MaximumBytesPerSession != nil {
		in, out := &in.MaximumBytesPerSession, &out.MaximumBytesPerSession
		*out = new(float64)
		**out = **in
	}
	if in.MaximumCaptureDuration != nil {
		in, out := &in.MaximumCaptureDuration, &out.MaximumCaptureDuration
		*out = new(float64)
		**out = **in
	}
	if in.NetworkWatcherName != nil {
		in, out := &in.NetworkWatcherName, &out.NetworkWatcherName
		*out = new(string)
		**out = **in
	}
	if in.NetworkWatcherNameRef != nil {
		in, out := &in.NetworkWatcherNameRef, &out.NetworkWatcherNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkWatcherNameSelector != nil {
		in, out := &in.NetworkWatcherNameSelector, &out.NetworkWatcherNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = make([]StorageLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketCaptureParameters.
func (in *PacketCaptureParameters) DeepCopy() *PacketCaptureParameters {
	if in == nil {
		return nil
	}
	out := new(PacketCaptureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketCaptureSpec) DeepCopyInto(out *PacketCaptureSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketCaptureSpec.
func (in *PacketCaptureSpec) DeepCopy() *PacketCaptureSpec {
	if in == nil {
		return nil
	}
	out := new(PacketCaptureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketCaptureStatus) DeepCopyInto(out *PacketCaptureStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketCaptureStatus.
func (in *PacketCaptureStatus) DeepCopy() *PacketCaptureStatus {
	if in == nil {
		return nil
	}
	out := new(PacketCaptureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeeringAddressesObservation) DeepCopyInto(out *PeeringAddressesObservation) {
	*out = *in
	if in.DefaultAddresses != nil {
		in, out := &in.DefaultAddresses, &out.DefaultAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TunnelIPAddresses != nil {
		in, out := &in.TunnelIPAddresses, &out.TunnelIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeeringAddressesObservation.
func (in *PeeringAddressesObservation) DeepCopy() *PeeringAddressesObservation {
	if in == nil {
		return nil
	}
	out := new(PeeringAddressesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeeringAddressesParameters) DeepCopyInto(out *PeeringAddressesParameters) {
	*out = *in
	if in.ApipaAddresses != nil {
		in, out := &in.ApipaAddresses, &out.ApipaAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPConfigurationName != nil {
		in, out := &in.IPConfigurationName, &out.IPConfigurationName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeeringAddressesParameters.
func (in *PeeringAddressesParameters) DeepCopy() *PeeringAddressesParameters {
	if in == nil {
		return nil
	}
	out := new(PeeringAddressesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointToSiteVPNGateway) DeepCopyInto(out *PointToSiteVPNGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointToSiteVPNGateway.
func (in *PointToSiteVPNGateway) DeepCopy() *PointToSiteVPNGateway {
	if in == nil {
		return nil
	}
	out := new(PointToSiteVPNGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PointToSiteVPNGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointToSiteVPNGatewayList) DeepCopyInto(out *PointToSiteVPNGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PointToSiteVPNGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointToSiteVPNGatewayList.
func (in *PointToSiteVPNGatewayList) DeepCopy() *PointToSiteVPNGatewayList {
	if in == nil {
		return nil
	}
	out := new(PointToSiteVPNGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PointToSiteVPNGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointToSiteVPNGatewayObservation) DeepCopyInto(out *PointToSiteVPNGatewayObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointToSiteVPNGatewayObservation.
func (in *PointToSiteVPNGatewayObservation) DeepCopy() *PointToSiteVPNGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(PointToSiteVPNGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointToSiteVPNGatewayParameters) DeepCopyInto(out *PointToSiteVPNGatewayParameters) {
	*out = *in
	if in.ConnectionConfiguration != nil {
		in, out := &in.ConnectionConfiguration, &out.ConnectionConfiguration
		*out = make([]ConnectionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ScaleUnit != nil {
		in, out := &in.ScaleUnit, &out.ScaleUnit
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPNServerConfigurationID != nil {
		in, out := &in.VPNServerConfigurationID, &out.VPNServerConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.VPNServerConfigurationIDRef != nil {
		in, out := &in.VPNServerConfigurationIDRef, &out.VPNServerConfigurationIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VPNServerConfigurationIDSelector != nil {
		in, out := &in.VPNServerConfigurationIDSelector, &out.VPNServerConfigurationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualHubID != nil {
		in, out := &in.VirtualHubID, &out.VirtualHubID
		*out = new(string)
		**out = **in
	}
	if in.VirtualHubIDRef != nil {
		in, out := &in.VirtualHubIDRef, &out.VirtualHubIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VirtualHubIDSelector != nil {
		in, out := &in.VirtualHubIDSelector, &out.VirtualHubIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointToSiteVPNGatewayParameters.
func (in *PointToSiteVPNGatewayParameters) DeepCopy() *PointToSiteVPNGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(PointToSiteVPNGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointToSiteVPNGatewaySpec) DeepCopyInto(out *PointToSiteVPNGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointToSiteVPNGatewaySpec.
func (in *PointToSiteVPNGatewaySpec) DeepCopy() *PointToSiteVPNGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(PointToSiteVPNGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointToSiteVPNGatewayStatus) DeepCopyInto(out *PointToSiteVPNGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointToSiteVPNGatewayStatus.
func (in *PointToSiteVPNGatewayStatus) DeepCopy() *PointToSiteVPNGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(PointToSiteVPNGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSAAAARecord) DeepCopyInto(out *PrivateDNSAAAARecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSAAAARecord.
func (in *PrivateDNSAAAARecord) DeepCopy() *PrivateDNSAAAARecord {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSAAAARecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSAAAARecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSAAAARecordList) DeepCopyInto(out *PrivateDNSAAAARecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDNSAAAARecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSAAAARecordList.
func (in *PrivateDNSAAAARecordList) DeepCopy() *PrivateDNSAAAARecordList {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSAAAARecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSAAAARecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSAAAARecordObservation) DeepCopyInto(out *PrivateDNSAAAARecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSAAAARecordObservation.
func (in *PrivateDNSAAAARecordObservation) DeepCopy() *PrivateDNSAAAARecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSAAAARecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSAAAARecordParameters) DeepCopyInto(out *PrivateDNSAAAARecordParameters) {
	*out = *in
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSAAAARecordParameters.
func (in *PrivateDNSAAAARecordParameters) DeepCopy() *PrivateDNSAAAARecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSAAAARecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSAAAARecordSpec) DeepCopyInto(out *PrivateDNSAAAARecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSAAAARecordSpec.
func (in *PrivateDNSAAAARecordSpec) DeepCopy() *PrivateDNSAAAARecordSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSAAAARecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSAAAARecordStatus) DeepCopyInto(out *PrivateDNSAAAARecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSAAAARecordStatus.
func (in *PrivateDNSAAAARecordStatus) DeepCopy() *PrivateDNSAAAARecordStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSAAAARecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSARecord) DeepCopyInto(out *PrivateDNSARecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSARecord.
func (in *PrivateDNSARecord) DeepCopy() *PrivateDNSARecord {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSARecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSARecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSARecordList) DeepCopyInto(out *PrivateDNSARecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDNSARecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSARecordList.
func (in *PrivateDNSARecordList) DeepCopy() *PrivateDNSARecordList {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSARecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSARecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSARecordObservation) DeepCopyInto(out *PrivateDNSARecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSARecordObservation.
func (in *PrivateDNSARecordObservation) DeepCopy() *PrivateDNSARecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSARecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSARecordParameters) DeepCopyInto(out *PrivateDNSARecordParameters) {
	*out = *in
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSARecordParameters.
func (in *PrivateDNSARecordParameters) DeepCopy() *PrivateDNSARecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSARecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSARecordSpec) DeepCopyInto(out *PrivateDNSARecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSARecordSpec.
func (in *PrivateDNSARecordSpec) DeepCopy() *PrivateDNSARecordSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSARecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSARecordStatus) DeepCopyInto(out *PrivateDNSARecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSARecordStatus.
func (in *PrivateDNSARecordStatus) DeepCopy() *PrivateDNSARecordStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSARecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSCNAMERecord) DeepCopyInto(out *PrivateDNSCNAMERecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSCNAMERecord.
func (in *PrivateDNSCNAMERecord) DeepCopy() *PrivateDNSCNAMERecord {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSCNAMERecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSCNAMERecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSCNAMERecordList) DeepCopyInto(out *PrivateDNSCNAMERecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDNSCNAMERecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSCNAMERecordList.
func (in *PrivateDNSCNAMERecordList) DeepCopy() *PrivateDNSCNAMERecordList {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSCNAMERecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSCNAMERecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSCNAMERecordObservation) DeepCopyInto(out *PrivateDNSCNAMERecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSCNAMERecordObservation.
func (in *PrivateDNSCNAMERecordObservation) DeepCopy() *PrivateDNSCNAMERecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSCNAMERecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSCNAMERecordParameters) DeepCopyInto(out *PrivateDNSCNAMERecordParameters) {
	*out = *in
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSCNAMERecordParameters.
func (in *PrivateDNSCNAMERecordParameters) DeepCopy() *PrivateDNSCNAMERecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSCNAMERecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSCNAMERecordSpec) DeepCopyInto(out *PrivateDNSCNAMERecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSCNAMERecordSpec.
func (in *PrivateDNSCNAMERecordSpec) DeepCopy() *PrivateDNSCNAMERecordSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSCNAMERecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSCNAMERecordStatus) DeepCopyInto(out *PrivateDNSCNAMERecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSCNAMERecordStatus.
func (in *PrivateDNSCNAMERecordStatus) DeepCopy() *PrivateDNSCNAMERecordStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSCNAMERecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSMXRecord) DeepCopyInto(out *PrivateDNSMXRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSMXRecord.
func (in *PrivateDNSMXRecord) DeepCopy() *PrivateDNSMXRecord {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSMXRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSMXRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSMXRecordList) DeepCopyInto(out *PrivateDNSMXRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDNSMXRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSMXRecordList.
func (in *PrivateDNSMXRecordList) DeepCopy() *PrivateDNSMXRecordList {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSMXRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSMXRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSMXRecordObservation) DeepCopyInto(out *PrivateDNSMXRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSMXRecordObservation.
func (in *PrivateDNSMXRecordObservation) DeepCopy() *PrivateDNSMXRecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSMXRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSMXRecordParameters) DeepCopyInto(out *PrivateDNSMXRecordParameters) {
	*out = *in
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]PrivateDNSMXRecordRecordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSMXRecordParameters.
func (in *PrivateDNSMXRecordParameters) DeepCopy() *PrivateDNSMXRecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSMXRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSMXRecordRecordObservation) DeepCopyInto(out *PrivateDNSMXRecordRecordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSMXRecordRecordObservation.
func (in *PrivateDNSMXRecordRecordObservation) DeepCopy() *PrivateDNSMXRecordRecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSMXRecordRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSMXRecordRecordParameters) DeepCopyInto(out *PrivateDNSMXRecordRecordParameters) {
	*out = *in
	if in.Exchange != nil {
		in, out := &in.Exchange, &out.Exchange
		*out = new(string)
		**out = **in
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSMXRecordRecordParameters.
func (in *PrivateDNSMXRecordRecordParameters) DeepCopy() *PrivateDNSMXRecordRecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSMXRecordRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSMXRecordSpec) DeepCopyInto(out *PrivateDNSMXRecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSMXRecordSpec.
func (in *PrivateDNSMXRecordSpec) DeepCopy() *PrivateDNSMXRecordSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSMXRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSMXRecordStatus) DeepCopyInto(out *PrivateDNSMXRecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSMXRecordStatus.
func (in *PrivateDNSMXRecordStatus) DeepCopy() *PrivateDNSMXRecordStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSMXRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSPTRRecord) DeepCopyInto(out *PrivateDNSPTRRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSPTRRecord.
func (in *PrivateDNSPTRRecord) DeepCopy() *PrivateDNSPTRRecord {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSPTRRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSPTRRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSPTRRecordList) DeepCopyInto(out *PrivateDNSPTRRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDNSPTRRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSPTRRecordList.
func (in *PrivateDNSPTRRecordList) DeepCopy() *PrivateDNSPTRRecordList {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSPTRRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSPTRRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSPTRRecordObservation) DeepCopyInto(out *PrivateDNSPTRRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSPTRRecordObservation.
func (in *PrivateDNSPTRRecordObservation) DeepCopy() *PrivateDNSPTRRecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSPTRRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSPTRRecordParameters) DeepCopyInto(out *PrivateDNSPTRRecordParameters) {
	*out = *in
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSPTRRecordParameters.
func (in *PrivateDNSPTRRecordParameters) DeepCopy() *PrivateDNSPTRRecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSPTRRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSPTRRecordSpec) DeepCopyInto(out *PrivateDNSPTRRecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSPTRRecordSpec.
func (in *PrivateDNSPTRRecordSpec) DeepCopy() *PrivateDNSPTRRecordSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSPTRRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSPTRRecordStatus) DeepCopyInto(out *PrivateDNSPTRRecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSPTRRecordStatus.
func (in *PrivateDNSPTRRecordStatus) DeepCopy() *PrivateDNSPTRRecordStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSPTRRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSSRVRecord) DeepCopyInto(out *PrivateDNSSRVRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSSRVRecord.
func (in *PrivateDNSSRVRecord) DeepCopy() *PrivateDNSSRVRecord {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSSRVRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSSRVRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSSRVRecordList) DeepCopyInto(out *PrivateDNSSRVRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDNSSRVRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSSRVRecordList.
func (in *PrivateDNSSRVRecordList) DeepCopy() *PrivateDNSSRVRecordList {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSSRVRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSSRVRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSSRVRecordObservation) DeepCopyInto(out *PrivateDNSSRVRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSSRVRecordObservation.
func (in *PrivateDNSSRVRecordObservation) DeepCopy() *PrivateDNSSRVRecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSSRVRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSSRVRecordParameters) DeepCopyInto(out *PrivateDNSSRVRecordParameters) {
	*out = *in
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]PrivateDNSSRVRecordRecordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSSRVRecordParameters.
func (in *PrivateDNSSRVRecordParameters) DeepCopy() *PrivateDNSSRVRecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSSRVRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSSRVRecordRecordObservation) DeepCopyInto(out *PrivateDNSSRVRecordRecordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSSRVRecordRecordObservation.
func (in *PrivateDNSSRVRecordRecordObservation) DeepCopy() *PrivateDNSSRVRecordRecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSSRVRecordRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSSRVRecordRecordParameters) DeepCopyInto(out *PrivateDNSSRVRecordRecordParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSSRVRecordRecordParameters.
func (in *PrivateDNSSRVRecordRecordParameters) DeepCopy() *PrivateDNSSRVRecordRecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSSRVRecordRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSSRVRecordSpec) DeepCopyInto(out *PrivateDNSSRVRecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSSRVRecordSpec.
func (in *PrivateDNSSRVRecordSpec) DeepCopy() *PrivateDNSSRVRecordSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSSRVRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSSRVRecordStatus) DeepCopyInto(out *PrivateDNSSRVRecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSSRVRecordStatus.
func (in *PrivateDNSSRVRecordStatus) DeepCopy() *PrivateDNSSRVRecordStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSSRVRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSTXTRecord) DeepCopyInto(out *PrivateDNSTXTRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSTXTRecord.
func (in *PrivateDNSTXTRecord) DeepCopy() *PrivateDNSTXTRecord {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSTXTRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSTXTRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSTXTRecordList) DeepCopyInto(out *PrivateDNSTXTRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDNSTXTRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSTXTRecordList.
func (in *PrivateDNSTXTRecordList) DeepCopy() *PrivateDNSTXTRecordList {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSTXTRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSTXTRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSTXTRecordObservation) DeepCopyInto(out *PrivateDNSTXTRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSTXTRecordObservation.
func (in *PrivateDNSTXTRecordObservation) DeepCopy() *PrivateDNSTXTRecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSTXTRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSTXTRecordParameters) DeepCopyInto(out *PrivateDNSTXTRecordParameters) {
	*out = *in
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]PrivateDNSTXTRecordRecordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	if in.ZoneNameRef != nil {
		in, out := &in.ZoneNameRef, &out.ZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ZoneNameSelector != nil {
		in, out := &in.ZoneNameSelector, &out.ZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSTXTRecordParameters.
func (in *PrivateDNSTXTRecordParameters) DeepCopy() *PrivateDNSTXTRecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSTXTRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSTXTRecordRecordObservation) DeepCopyInto(out *PrivateDNSTXTRecordRecordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSTXTRecordRecordObservation.
func (in *PrivateDNSTXTRecordRecordObservation) DeepCopy() *PrivateDNSTXTRecordRecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSTXTRecordRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSTXTRecordRecordParameters) DeepCopyInto(out *PrivateDNSTXTRecordRecordParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSTXTRecordRecordParameters.
func (in *PrivateDNSTXTRecordRecordParameters) DeepCopy() *PrivateDNSTXTRecordRecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSTXTRecordRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSTXTRecordSpec) DeepCopyInto(out *PrivateDNSTXTRecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSTXTRecordSpec.
func (in *PrivateDNSTXTRecordSpec) DeepCopy() *PrivateDNSTXTRecordSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSTXTRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSTXTRecordStatus) DeepCopyInto(out *PrivateDNSTXTRecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSTXTRecordStatus.
func (in *PrivateDNSTXTRecordStatus) DeepCopy() *PrivateDNSTXTRecordStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSTXTRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZone) DeepCopyInto(out *PrivateDNSZone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZone.
func (in *PrivateDNSZone) DeepCopy() *PrivateDNSZone {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSZone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneConfigsObservation) DeepCopyInto(out *PrivateDNSZoneConfigsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSZoneID != nil {
		in, out := &in.PrivateDNSZoneID, &out.PrivateDNSZoneID
		*out = new(string)
		**out = **in
	}
	if in.RecordSets != nil {
		in, out := &in.RecordSets, &out.RecordSets
		*out = make([]RecordSetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneConfigsObservation.
func (in *PrivateDNSZoneConfigsObservation) DeepCopy() *PrivateDNSZoneConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneConfigsParameters) DeepCopyInto(out *PrivateDNSZoneConfigsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneConfigsParameters.
func (in *PrivateDNSZoneConfigsParameters) DeepCopy() *PrivateDNSZoneConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneGroupObservation) DeepCopyInto(out *PrivateDNSZoneGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneGroupObservation.
func (in *PrivateDNSZoneGroupObservation) DeepCopy() *PrivateDNSZoneGroupObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneGroupParameters) DeepCopyInto(out *PrivateDNSZoneGroupParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSZoneIds != nil {
		in, out := &in.PrivateDNSZoneIds, &out.PrivateDNSZoneIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneGroupParameters.
func (in *PrivateDNSZoneGroupParameters) DeepCopy() *PrivateDNSZoneGroupParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneList) DeepCopyInto(out *PrivateDNSZoneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDNSZone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneList.
func (in *PrivateDNSZoneList) DeepCopy() *PrivateDNSZoneList {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSZoneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneObservation) DeepCopyInto(out *PrivateDNSZoneObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfRecordSets != nil {
		in, out := &in.MaxNumberOfRecordSets, &out.MaxNumberOfRecordSets
		*out = new(float64)
		**out = **in
	}
	if in.MaxNumberOfVirtualNetworkLinks != nil {
		in, out := &in.MaxNumberOfVirtualNetworkLinks, &out.MaxNumberOfVirtualNetworkLinks
		*out = new(float64)
		**out = **in
	}
	if in.MaxNumberOfVirtualNetworkLinksWithRegistration != nil {
		in, out := &in.MaxNumberOfVirtualNetworkLinksWithRegistration, &out.MaxNumberOfVirtualNetworkLinksWithRegistration
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfRecordSets != nil {
		in, out := &in.NumberOfRecordSets, &out.NumberOfRecordSets
		*out = new(float64)
		**out = **in
	}
	if in.SoaRecord != nil {
		in, out := &in.SoaRecord, &out.SoaRecord
		*out = make([]PrivateDNSZoneSoaRecordObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneObservation.
func (in *PrivateDNSZoneObservation) DeepCopy() *PrivateDNSZoneObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneParameters) DeepCopyInto(out *PrivateDNSZoneParameters) {
	*out = *in
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SoaRecord != nil {
		in, out := &in.SoaRecord, &out.SoaRecord
		*out = make([]PrivateDNSZoneSoaRecordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneParameters.
func (in *PrivateDNSZoneParameters) DeepCopy() *PrivateDNSZoneParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneSoaRecordObservation) DeepCopyInto(out *PrivateDNSZoneSoaRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.SerialNumber != nil {
		in, out := &in.SerialNumber, &out.SerialNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneSoaRecordObservation.
func (in *PrivateDNSZoneSoaRecordObservation) DeepCopy() *PrivateDNSZoneSoaRecordObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneSoaRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneSoaRecordParameters) DeepCopyInto(out *PrivateDNSZoneSoaRecordParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.MinimumTTL != nil {
		in, out := &in.MinimumTTL, &out.MinimumTTL
		*out = new(float64)
		**out = **in
	}
	if in.RefreshTime != nil {
		in, out := &in.RefreshTime, &out.RefreshTime
		*out = new(float64)
		**out = **in
	}
	if in.RetryTime != nil {
		in, out := &in.RetryTime, &out.RetryTime
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneSoaRecordParameters.
func (in *PrivateDNSZoneSoaRecordParameters) DeepCopy() *PrivateDNSZoneSoaRecordParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneSoaRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneSpec) DeepCopyInto(out *PrivateDNSZoneSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneSpec.
func (in *PrivateDNSZoneSpec) DeepCopy() *PrivateDNSZoneSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneStatus) DeepCopyInto(out *PrivateDNSZoneStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneStatus.
func (in *PrivateDNSZoneStatus) DeepCopy() *PrivateDNSZoneStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneVirtualNetworkLink) DeepCopyInto(out *PrivateDNSZoneVirtualNetworkLink) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneVirtualNetworkLink.
func (in *PrivateDNSZoneVirtualNetworkLink) DeepCopy() *PrivateDNSZoneVirtualNetworkLink {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneVirtualNetworkLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSZoneVirtualNetworkLink) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneVirtualNetworkLinkList) DeepCopyInto(out *PrivateDNSZoneVirtualNetworkLinkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDNSZoneVirtualNetworkLink, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneVirtualNetworkLinkList.
func (in *PrivateDNSZoneVirtualNetworkLinkList) DeepCopy() *PrivateDNSZoneVirtualNetworkLinkList {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneVirtualNetworkLinkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDNSZoneVirtualNetworkLinkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneVirtualNetworkLinkObservation) DeepCopyInto(out *PrivateDNSZoneVirtualNetworkLinkObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneVirtualNetworkLinkObservation.
func (in *PrivateDNSZoneVirtualNetworkLinkObservation) DeepCopy() *PrivateDNSZoneVirtualNetworkLinkObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneVirtualNetworkLinkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneVirtualNetworkLinkParameters) DeepCopyInto(out *PrivateDNSZoneVirtualNetworkLinkParameters) {
	*out = *in
	if in.PrivateDNSZoneName != nil {
		in, out := &in.PrivateDNSZoneName, &out.PrivateDNSZoneName
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSZoneNameRef != nil {
		in, out := &in.PrivateDNSZoneNameRef, &out.PrivateDNSZoneNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.PrivateDNSZoneNameSelector != nil {
		in, out := &in.PrivateDNSZoneNameSelector, &out.PrivateDNSZoneNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RegistrationEnabled != nil {
		in, out := &in.RegistrationEnabled, &out.RegistrationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkIDRef != nil {
		in, out := &in.VirtualNetworkIDRef, &out.VirtualNetworkIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VirtualNetworkIDSelector != nil {
		in, out := &in.VirtualNetworkIDSelector, &out.VirtualNetworkIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneVirtualNetworkLinkParameters.
func (in *PrivateDNSZoneVirtualNetworkLinkParameters) DeepCopy() *PrivateDNSZoneVirtualNetworkLinkParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneVirtualNetworkLinkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneVirtualNetworkLinkSpec) DeepCopyInto(out *PrivateDNSZoneVirtualNetworkLinkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneVirtualNetworkLinkSpec.
func (in *PrivateDNSZoneVirtualNetworkLinkSpec) DeepCopy() *PrivateDNSZoneVirtualNetworkLinkSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneVirtualNetworkLinkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSZoneVirtualNetworkLinkStatus) DeepCopyInto(out *PrivateDNSZoneVirtualNetworkLinkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSZoneVirtualNetworkLinkStatus.
func (in *PrivateDNSZoneVirtualNetworkLinkStatus) DeepCopy() *PrivateDNSZoneVirtualNetworkLinkStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSZoneVirtualNetworkLinkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpoint) DeepCopyInto(out *PrivateEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpoint.
func (in *PrivateEndpoint) DeepCopy() *PrivateEndpoint {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointList) DeepCopyInto(out *PrivateEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointList.
func (in *PrivateEndpointList) DeepCopy() *PrivateEndpointList {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointNetworkInterfaceObservation) DeepCopyInto(out *PrivateEndpointNetworkInterfaceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointNetworkInterfaceObservation.
func (in *PrivateEndpointNetworkInterfaceObservation) DeepCopy() *PrivateEndpointNetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointNetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointNetworkInterfaceParameters) DeepCopyInto(out *PrivateEndpointNetworkInterfaceParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointNetworkInterfaceParameters.
func (in *PrivateEndpointNetworkInterfaceParameters) DeepCopy() *PrivateEndpointNetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointNetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointObservation) DeepCopyInto(out *PrivateEndpointObservation) {
	*out = *in
	if in.CustomDNSConfigs != nil {
		in, out := &in.CustomDNSConfigs, &out.CustomDNSConfigs
		*out = make([]CustomDNSConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]PrivateEndpointNetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDNSZoneConfigs != nil {
		in, out := &in.PrivateDNSZoneConfigs, &out.PrivateDNSZoneConfigs
		*out = make([]PrivateDNSZoneConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDNSZoneGroup != nil {
		in, out := &in.PrivateDNSZoneGroup, &out.PrivateDNSZoneGroup
		*out = make([]PrivateDNSZoneGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateServiceConnection != nil {
		in, out := &in.PrivateServiceConnection, &out.PrivateServiceConnection
		*out = make([]PrivateServiceConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointObservation.
func (in *PrivateEndpointObservation) DeepCopy() *PrivateEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointParameters) DeepCopyInto(out *PrivateEndpointParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSZoneGroup != nil {
		in, out := &in.PrivateDNSZoneGroup, &out.PrivateDNSZoneGroup
		*out = make([]PrivateDNSZoneGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateServiceConnection != nil {
		in, out := &in.PrivateServiceConnection, &out.PrivateServiceConnection
		*out = make([]PrivateServiceConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointParameters.
func (in *PrivateEndpointParameters) DeepCopy() *PrivateEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointSpec) DeepCopyInto(out *PrivateEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointSpec.
func (in *PrivateEndpointSpec) DeepCopy() *PrivateEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointStatus) DeepCopyInto(out *PrivateEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointStatus.
func (in *PrivateEndpointStatus) DeepCopy() *PrivateEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkService) DeepCopyInto(out *PrivateLinkService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkService.
func (in *PrivateLinkService) DeepCopy() *PrivateLinkService {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateLinkService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceList) DeepCopyInto(out *PrivateLinkServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateLinkService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceList.
func (in *PrivateLinkServiceList) DeepCopy() *PrivateLinkServiceList {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateLinkServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceObservation) DeepCopyInto(out *PrivateLinkServiceObservation) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceObservation.
func (in *PrivateLinkServiceObservation) DeepCopy() *PrivateLinkServiceObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceParameters) DeepCopyInto(out *PrivateLinkServiceParameters) {
	*out = *in
	if in.AutoApprovalSubscriptionIds != nil {
		in, out := &in.AutoApprovalSubscriptionIds, &out.AutoApprovalSubscriptionIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableProxyProtocol != nil {
		in, out := &in.EnableProxyProtocol, &out.EnableProxyProtocol
		*out = new(bool)
		**out = **in
	}
	if in.LoadBalancerFrontendIPConfigurationIds != nil {
		in, out := &in.LoadBalancerFrontendIPConfigurationIds, &out.LoadBalancerFrontendIPConfigurationIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NATIPConfiguration != nil {
		in, out := &in.NATIPConfiguration, &out.NATIPConfiguration
		*out = make([]NATIPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VisibilitySubscriptionIds != nil {
		in, out := &in.VisibilitySubscriptionIds, &out.VisibilitySubscriptionIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceParameters.
func (in *PrivateLinkServiceParameters) DeepCopy() *PrivateLinkServiceParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceSpec) DeepCopyInto(out *PrivateLinkServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceSpec.
func (in *PrivateLinkServiceSpec) DeepCopy() *PrivateLinkServiceSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceStatus) DeepCopyInto(out *PrivateLinkServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceStatus.
func (in *PrivateLinkServiceStatus) DeepCopy() *PrivateLinkServiceStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateServiceConnectionObservation) DeepCopyInto(out *PrivateServiceConnectionObservation) {
	*out = *in
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateServiceConnectionObservation.
func (in *PrivateServiceConnectionObservation) DeepCopy() *PrivateServiceConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateServiceConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateServiceConnectionParameters) DeepCopyInto(out *PrivateServiceConnectionParameters) {
	*out = *in
	if in.IsManualConnection != nil {
		in, out := &in.IsManualConnection, &out.IsManualConnection
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionResourceAlias != nil {
		in, out := &in.PrivateConnectionResourceAlias, &out.PrivateConnectionResourceAlias
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionResourceID != nil {
		in, out := &in.PrivateConnectionResourceID, &out.PrivateConnectionResourceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionResourceIDRef != nil {
		in, out := &in.PrivateConnectionResourceIDRef, &out.PrivateConnectionResourceIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.PrivateConnectionResourceIDSelector != nil {
		in, out := &in.PrivateConnectionResourceIDSelector, &out.PrivateConnectionResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestMessage != nil {
		in, out := &in.RequestMessage, &out.RequestMessage
		*out = new(string)
		**out = **in
	}
	if in.SubresourceNames != nil {
		in, out := &in.SubresourceNames, &out.SubresourceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateServiceConnectionParameters.
func (in *PrivateServiceConnectionParameters) DeepCopy() *PrivateServiceConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateServiceConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Profile) DeepCopyInto(out *Profile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Profile.
func (in *Profile) DeepCopy() *Profile {
	if in == nil {
		return nil
	}
	out := new(Profile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Profile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileList) DeepCopyInto(out *ProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Profile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileList.
func (in *ProfileList) DeepCopy() *ProfileList {
	if in == nil {
		return nil
	}
	out := new(ProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileObservation) DeepCopyInto(out *ProfileObservation) {
	*out = *in
	if in.ContainerNetworkInterfaceIds != nil {
		in, out := &in.ContainerNetworkInterfaceIds, &out.ContainerNetworkInterfaceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileObservation.
func (in *ProfileObservation) DeepCopy() *ProfileObservation {
	if in == nil {
		return nil
	}
	out := new(ProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileParameters) DeepCopyInto(out *ProfileParameters) {
	*out = *in
	if in.ContainerNetworkInterface != nil {
		in, out := &in.ContainerNetworkInterface, &out.ContainerNetworkInterface
		*out = make([]ContainerNetworkInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileParameters.
func (in *ProfileParameters) DeepCopy() *ProfileParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileSpec) DeepCopyInto(out *ProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileSpec.
func (in *ProfileSpec) DeepCopy() *ProfileSpec {
	if in == nil {
		return nil
	}
	out := new(ProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileStatus) DeepCopyInto(out *ProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileStatus.
func (in *ProfileStatus) DeepCopy() *ProfileStatus {
	if in == nil {
		return nil
	}
	out := new(ProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropagatedRouteTableObservation) DeepCopyInto(out *PropagatedRouteTableObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropagatedRouteTableObservation.
func (in *PropagatedRouteTableObservation) DeepCopy() *PropagatedRouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(PropagatedRouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropagatedRouteTableParameters) DeepCopyInto(out *PropagatedRouteTableParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteTableIds != nil {
		in, out := &in.RouteTableIds, &out.RouteTableIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropagatedRouteTableParameters.
func (in *PropagatedRouteTableParameters) DeepCopy() *PropagatedRouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(PropagatedRouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIP) DeepCopyInto(out *PublicIP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIP.
func (in *PublicIP) DeepCopy() *PublicIP {
	if in == nil {
		return nil
	}
	out := new(PublicIP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPList) DeepCopyInto(out *PublicIPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PublicIP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPList.
func (in *PublicIPList) DeepCopy() *PublicIPList {
	if in == nil {
		return nil
	}
	out := new(PublicIPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPObservation) DeepCopyInto(out *PublicIPObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPObservation.
func (in *PublicIPObservation) DeepCopy() *PublicIPObservation {
	if in == nil {
		return nil
	}
	out := new(PublicIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPParameters) DeepCopyInto(out *PublicIPParameters) {
	*out = *in
	if in.AllocationMethod != nil {
		in, out := &in.AllocationMethod, &out.AllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.DomainNameLabel != nil {
		in, out := &in.DomainNameLabel, &out.DomainNameLabel
		*out = new(string)
		**out = **in
	}
	if in.EdgeZone != nil {
		in, out := &in.EdgeZone, &out.EdgeZone
		*out = new(string)
		**out = **in
	}
	if in.IPTags != nil {
		in, out := &in.IPTags, &out.IPTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPrefixID != nil {
		in, out := &in.PublicIPPrefixID, &out.PublicIPPrefixID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReverseFqdn != nil {
		in, out := &in.ReverseFqdn, &out.ReverseFqdn
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.SkuTier != nil {
		in, out := &in.SkuTier, &out.SkuTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPParameters.
func (in *PublicIPParameters) DeepCopy() *PublicIPParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefix) DeepCopyInto(out *PublicIPPrefix) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefix.
func (in *PublicIPPrefix) DeepCopy() *PublicIPPrefix {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefix)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPPrefix) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefixList) DeepCopyInto(out *PublicIPPrefixList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PublicIPPrefix, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefixList.
func (in *PublicIPPrefixList) DeepCopy() *PublicIPPrefixList {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefixList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPPrefixList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefixObservation) DeepCopyInto(out *PublicIPPrefixObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPPrefix != nil {
		in, out := &in.IPPrefix, &out.IPPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefixObservation.
func (in *PublicIPPrefixObservation) DeepCopy() *PublicIPPrefixObservation {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefixObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefixParameters) DeepCopyInto(out *PublicIPPrefixParameters) {
	*out = *in
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefixParameters.
func (in *PublicIPPrefixParameters) DeepCopy() *PublicIPPrefixParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefixParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefixSpec) DeepCopyInto(out *PublicIPPrefixSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefixSpec.
func (in *PublicIPPrefixSpec) DeepCopy() *PublicIPPrefixSpec {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefixSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefixStatus) DeepCopyInto(out *PublicIPPrefixStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefixStatus.
func (in *PublicIPPrefixStatus) DeepCopy() *PublicIPPrefixStatus {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefixStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPSpec) DeepCopyInto(out *PublicIPSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPSpec.
func (in *PublicIPSpec) DeepCopy() *PublicIPSpec {
	if in == nil {
		return nil
	}
	out := new(PublicIPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPStatus) DeepCopyInto(out *PublicIPStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPStatus.
func (in *PublicIPStatus) DeepCopy() *PublicIPStatus {
	if in == nil {
		return nil
	}
	out := new(PublicIPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RadiusClientRootCertificateObservation) DeepCopyInto(out *RadiusClientRootCertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RadiusClientRootCertificateObservation.
func (in *RadiusClientRootCertificateObservation) DeepCopy() *RadiusClientRootCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(RadiusClientRootCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RadiusClientRootCertificateParameters) DeepCopyInto(out *RadiusClientRootCertificateParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RadiusClientRootCertificateParameters.
func (in *RadiusClientRootCertificateParameters) DeepCopy() *RadiusClientRootCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(RadiusClientRootCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RadiusObservation) DeepCopyInto(out *RadiusObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RadiusObservation.
func (in *RadiusObservation) DeepCopy() *RadiusObservation {
	if in == nil {
		return nil
	}
	out := new(RadiusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RadiusParameters) DeepCopyInto(out *RadiusParameters) {
	*out = *in
	if in.ClientRootCertificate != nil {
		in, out := &in.ClientRootCertificate, &out.ClientRootCertificate
		*out = make([]RadiusClientRootCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = make([]ServerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerRootCertificate != nil {
		in, out := &in.ServerRootCertificate, &out.ServerRootCertificate
		*out = make([]ServerRootCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RadiusParameters.
func (in *RadiusParameters) DeepCopy() *RadiusParameters {
	if in == nil {
		return nil
	}
	out := new(RadiusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordObservation) DeepCopyInto(out *RecordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordObservation.
func (in *RecordObservation) DeepCopy() *RecordObservation {
	if in == nil {
		return nil
	}
	out := new(RecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordParameters) DeepCopyInto(out *RecordParameters) {
	*out = *in
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordParameters.
func (in *RecordParameters) DeepCopy() *RecordParameters {
	if in == nil {
		return nil
	}
	out := new(RecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSetsObservation) DeepCopyInto(out *RecordSetsObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSetsObservation.
func (in *RecordSetsObservation) DeepCopy() *RecordSetsObservation {
	if in == nil {
		return nil
	}
	out := new(RecordSetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSetsParameters) DeepCopyInto(out *RecordSetsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSetsParameters.
func (in *RecordSetsParameters) DeepCopy() *RecordSetsParameters {
	if in == nil {
		return nil
	}
	out := new(RecordSetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderObservation) DeepCopyInto(out *RequestHeaderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderObservation.
func (in *RequestHeaderObservation) DeepCopy() *RequestHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderParameters) DeepCopyInto(out *RequestHeaderParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderParameters.
func (in *RequestHeaderParameters) DeepCopy() *RequestHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyObservation) DeepCopyInto(out *RetentionPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyObservation.
func (in *RetentionPolicyObservation) DeepCopy() *RetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyParameters) DeepCopyInto(out *RetentionPolicyParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyParameters.
func (in *RetentionPolicyParameters) DeepCopy() *RetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevokedCertificateObservation) DeepCopyInto(out *RevokedCertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevokedCertificateObservation.
func (in *RevokedCertificateObservation) DeepCopy() *RevokedCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(RevokedCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevokedCertificateParameters) DeepCopyInto(out *RevokedCertificateParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevokedCertificateParameters.
func (in *RevokedCertificateParameters) DeepCopy() *RevokedCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(RevokedCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootCertificateObservation) DeepCopyInto(out *RootCertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootCertificateObservation.
func (in *RootCertificateObservation) DeepCopy() *RootCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(RootCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootCertificateParameters) DeepCopyInto(out *RootCertificateParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicCertData != nil {
		in, out := &in.PublicCertData, &out.PublicCertData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootCertificateParameters.
func (in *RootCertificateParameters) DeepCopy() *RootCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(RootCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation) DeepCopyInto(out *RouteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation.
func (in *RouteObservation) DeepCopy() *RouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters) DeepCopyInto(out *RouteParameters) {
	*out = *in
	if in.AssociatedRouteTableID != nil {
		in, out := &in.AssociatedRouteTableID, &out.AssociatedRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.PropagatedRouteTable != nil {
		in, out := &in.PropagatedRouteTable, &out.PropagatedRouteTable
		*out = make([]RoutePropagatedRouteTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters.
func (in *RouteParameters) DeepCopy() *RouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutePropagatedRouteTableObservation) DeepCopyInto(out *RoutePropagatedRouteTableObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutePropagatedRouteTableObservation.
func (in *RoutePropagatedRouteTableObservation) DeepCopy() *RoutePropagatedRouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(RoutePropagatedRouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutePropagatedRouteTableParameters) DeepCopyInto(out *RoutePropagatedRouteTableParameters) {
	*out = *in
	if in.Ids != nil {
		in, out := &in.Ids, &out.Ids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutePropagatedRouteTableParameters.
func (in *RoutePropagatedRouteTableParameters) DeepCopy() *RoutePropagatedRouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(RoutePropagatedRouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingObservation) DeepCopyInto(out *RoutingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingObservation.
func (in *RoutingObservation) DeepCopy() *RoutingObservation {
	if in == nil {
		return nil
	}
	out := new(RoutingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingParameters) DeepCopyInto(out *RoutingParameters) {
	*out = *in
	if in.AssociatedRouteTableID != nil {
		in, out := &in.AssociatedRouteTableID, &out.AssociatedRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.PropagatedRouteTable != nil {
		in, out := &in.PropagatedRouteTable, &out.PropagatedRouteTable
		*out = make([]PropagatedRouteTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingParameters.
func (in *RoutingParameters) DeepCopy() *RoutingParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroup) DeepCopyInto(out *SecurityGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroup.
func (in *SecurityGroup) DeepCopy() *SecurityGroup {
	if in == nil {
		return nil
	}
	out := new(SecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupList) DeepCopyInto(out *SecurityGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupList.
func (in *SecurityGroupList) DeepCopy() *SecurityGroupList {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupObservation) DeepCopyInto(out *SecurityGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupObservation.
func (in *SecurityGroupObservation) DeepCopy() *SecurityGroupObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupParameters) DeepCopyInto(out *SecurityGroupParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityRule != nil {
		in, out := &in.SecurityRule, &out.SecurityRule
		*out = make([]SecurityRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupParameters.
func (in *SecurityGroupParameters) DeepCopy() *SecurityGroupParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupSpec) DeepCopyInto(out *SecurityGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupSpec.
func (in *SecurityGroupSpec) DeepCopy() *SecurityGroupSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupStatus) DeepCopyInto(out *SecurityGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupStatus.
func (in *SecurityGroupStatus) DeepCopy() *SecurityGroupStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRule) DeepCopyInto(out *SecurityRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRule.
func (in *SecurityRule) DeepCopy() *SecurityRule {
	if in == nil {
		return nil
	}
	out := new(SecurityRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuleList) DeepCopyInto(out *SecurityRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuleList.
func (in *SecurityRuleList) DeepCopy() *SecurityRuleList {
	if in == nil {
		return nil
	}
	out := new(SecurityRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuleObservation) DeepCopyInto(out *SecurityRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuleObservation.
func (in *SecurityRuleObservation) DeepCopy() *SecurityRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuleObservation_2) DeepCopyInto(out *SecurityRuleObservation_2) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuleObservation_2.
func (in *SecurityRuleObservation_2) DeepCopy() *SecurityRuleObservation_2 {
	if in == nil {
		return nil
	}
	out := new(SecurityRuleObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuleParameters) DeepCopyInto(out *SecurityRuleParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddressPrefix != nil {
		in, out := &in.DestinationAddressPrefix, &out.DestinationAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddressPrefixes != nil {
		in, out := &in.DestinationAddressPrefixes, &out.DestinationAddressPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationApplicationSecurityGroupIds != nil {
		in, out := &in.DestinationApplicationSecurityGroupIds, &out.DestinationApplicationSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRanges != nil {
		in, out := &in.DestinationPortRanges, &out.DestinationPortRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceAddressPrefix != nil {
		in, out := &in.SourceAddressPrefix, &out.SourceAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.SourceAddressPrefixes != nil {
		in, out := &in.SourceAddressPrefixes, &out.SourceAddressPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceApplicationSecurityGroupIds != nil {
		in, out := &in.SourceApplicationSecurityGroupIds, &out.SourceApplicationSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRanges != nil {
		in, out := &in.SourcePortRanges, &out.SourcePortRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuleParameters.
func (in *SecurityRuleParameters) DeepCopy() *SecurityRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuleParameters_2) DeepCopyInto(out *SecurityRuleParameters_2) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddressPrefix != nil {
		in, out := &in.DestinationAddressPrefix, &out.DestinationAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddressPrefixes != nil {
		in, out := &in.DestinationAddressPrefixes, &out.DestinationAddressPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationApplicationSecurityGroupIds != nil {
		in, out := &in.DestinationApplicationSecurityGroupIds, &out.DestinationApplicationSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRanges != nil {
		in, out := &in.DestinationPortRanges, &out.DestinationPortRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityGroupName != nil {
		in, out := &in.NetworkSecurityGroupName, &out.NetworkSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityGroupNameRef != nil {
		in, out := &in.NetworkSecurityGroupNameRef, &out.NetworkSecurityGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkSecurityGroupNameSelector != nil {
		in, out := &in.NetworkSecurityGroupNameSelector, &out.NetworkSecurityGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceAddressPrefix != nil {
		in, out := &in.SourceAddressPrefix, &out.SourceAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.SourceAddressPrefixes != nil {
		in, out := &in.SourceAddressPrefixes, &out.SourceAddressPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceApplicationSecurityGroupIds != nil {
		in, out := &in.SourceApplicationSecurityGroupIds, &out.SourceApplicationSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRanges != nil {
		in, out := &in.SourcePortRanges, &out.SourcePortRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuleParameters_2.
func (in *SecurityRuleParameters_2) DeepCopy() *SecurityRuleParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SecurityRuleParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuleSpec) DeepCopyInto(out *SecurityRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuleSpec.
func (in *SecurityRuleSpec) DeepCopy() *SecurityRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuleStatus) DeepCopyInto(out *SecurityRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuleStatus.
func (in *SecurityRuleStatus) DeepCopy() *SecurityRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerObservation) DeepCopyInto(out *ServerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerObservation.
func (in *ServerObservation) DeepCopy() *ServerObservation {
	if in == nil {
		return nil
	}
	out := new(ServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerParameters) DeepCopyInto(out *ServerParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Score != nil {
		in, out := &in.Score, &out.Score
		*out = new(float64)
		**out = **in
	}
	out.SecretSecretRef = in.SecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerParameters.
func (in *ServerParameters) DeepCopy() *ServerParameters {
	if in == nil {
		return nil
	}
	out := new(ServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerRootCertificateObservation) DeepCopyInto(out *ServerRootCertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerRootCertificateObservation.
func (in *ServerRootCertificateObservation) DeepCopy() *ServerRootCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(ServerRootCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerRootCertificateParameters) DeepCopyInto(out *ServerRootCertificateParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicCertData != nil {
		in, out := &in.PublicCertData, &out.PublicCertData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerRootCertificateParameters.
func (in *ServerRootCertificateParameters) DeepCopy() *ServerRootCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(ServerRootCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceDelegationObservation) DeepCopyInto(out *ServiceDelegationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceDelegationObservation.
func (in *ServiceDelegationObservation) DeepCopy() *ServiceDelegationObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceDelegationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceDelegationParameters) DeepCopyInto(out *ServiceDelegationParameters) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceDelegationParameters.
func (in *ServiceDelegationParameters) DeepCopy() *ServiceDelegationParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceDelegationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuObservation) DeepCopyInto(out *SkuObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuObservation.
func (in *SkuObservation) DeepCopy() *SkuObservation {
	if in == nil {
		return nil
	}
	out := new(SkuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuParameters) DeepCopyInto(out *SkuParameters) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuParameters.
func (in *SkuParameters) DeepCopy() *SkuParameters {
	if in == nil {
		return nil
	}
	out := new(SkuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoaRecordObservation) DeepCopyInto(out *SoaRecordObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoaRecordObservation.
func (in *SoaRecordObservation) DeepCopy() *SoaRecordObservation {
	if in == nil {
		return nil
	}
	out := new(SoaRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoaRecordParameters) DeepCopyInto(out *SoaRecordParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.MinimumTTL != nil {
		in, out := &in.MinimumTTL, &out.MinimumTTL
		*out = new(float64)
		**out = **in
	}
	if in.RefreshTime != nil {
		in, out := &in.RefreshTime, &out.RefreshTime
		*out = new(float64)
		**out = **in
	}
	if in.RetryTime != nil {
		in, out := &in.RetryTime, &out.RetryTime
		*out = new(float64)
		**out = **in
	}
	if in.SerialNumber != nil {
		in, out := &in.SerialNumber, &out.SerialNumber
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoaRecordParameters.
func (in *SoaRecordParameters) DeepCopy() *SoaRecordParameters {
	if in == nil {
		return nil
	}
	out := new(SoaRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageLocationObservation) DeepCopyInto(out *StorageLocationObservation) {
	*out = *in
	if in.StoragePath != nil {
		in, out := &in.StoragePath, &out.StoragePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageLocationObservation.
func (in *StorageLocationObservation) DeepCopy() *StorageLocationObservation {
	if in == nil {
		return nil
	}
	out := new(StorageLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageLocationParameters) DeepCopyInto(out *StorageLocationParameters) {
	*out = *in
	if in.FilePath != nil {
		in, out := &in.FilePath, &out.FilePath
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountIDRef != nil {
		in, out := &in.StorageAccountIDRef, &out.StorageAccountIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.StorageAccountIDSelector != nil {
		in, out := &in.StorageAccountIDSelector, &out.StorageAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageLocationParameters.
func (in *StorageLocationParameters) DeepCopy() *StorageLocationParameters {
	if in == nil {
		return nil
	}
	out := new(StorageLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet) DeepCopyInto(out *Subnet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet.
func (in *Subnet) DeepCopy() *Subnet {
	if in == nil {
		return nil
	}
	out := new(Subnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subnet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetList) DeepCopyInto(out *SubnetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subnet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetList.
func (in *SubnetList) DeepCopy() *SubnetList {
	if in == nil {
		return nil
	}
	out := new(SubnetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNATGatewayAssociation) DeepCopyInto(out *SubnetNATGatewayAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNATGatewayAssociation.
func (in *SubnetNATGatewayAssociation) DeepCopy() *SubnetNATGatewayAssociation {
	if in == nil {
		return nil
	}
	out := new(SubnetNATGatewayAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetNATGatewayAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNATGatewayAssociationList) DeepCopyInto(out *SubnetNATGatewayAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubnetNATGatewayAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNATGatewayAssociationList.
func (in *SubnetNATGatewayAssociationList) DeepCopy() *SubnetNATGatewayAssociationList {
	if in == nil {
		return nil
	}
	out := new(SubnetNATGatewayAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetNATGatewayAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNATGatewayAssociationObservation) DeepCopyInto(out *SubnetNATGatewayAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNATGatewayAssociationObservation.
func (in *SubnetNATGatewayAssociationObservation) DeepCopy() *SubnetNATGatewayAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetNATGatewayAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNATGatewayAssociationParameters) DeepCopyInto(out *SubnetNATGatewayAssociationParameters) {
	*out = *in
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNATGatewayAssociationParameters.
func (in *SubnetNATGatewayAssociationParameters) DeepCopy() *SubnetNATGatewayAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetNATGatewayAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNATGatewayAssociationSpec) DeepCopyInto(out *SubnetNATGatewayAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNATGatewayAssociationSpec.
func (in *SubnetNATGatewayAssociationSpec) DeepCopy() *SubnetNATGatewayAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetNATGatewayAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNATGatewayAssociationStatus) DeepCopyInto(out *SubnetNATGatewayAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNATGatewayAssociationStatus.
func (in *SubnetNATGatewayAssociationStatus) DeepCopy() *SubnetNATGatewayAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetNATGatewayAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNetworkSecurityGroupAssociation) DeepCopyInto(out *SubnetNetworkSecurityGroupAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNetworkSecurityGroupAssociation.
func (in *SubnetNetworkSecurityGroupAssociation) DeepCopy() *SubnetNetworkSecurityGroupAssociation {
	if in == nil {
		return nil
	}
	out := new(SubnetNetworkSecurityGroupAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetNetworkSecurityGroupAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNetworkSecurityGroupAssociationList) DeepCopyInto(out *SubnetNetworkSecurityGroupAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubnetNetworkSecurityGroupAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNetworkSecurityGroupAssociationList.
func (in *SubnetNetworkSecurityGroupAssociationList) DeepCopy() *SubnetNetworkSecurityGroupAssociationList {
	if in == nil {
		return nil
	}
	out := new(SubnetNetworkSecurityGroupAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetNetworkSecurityGroupAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNetworkSecurityGroupAssociationObservation) DeepCopyInto(out *SubnetNetworkSecurityGroupAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNetworkSecurityGroupAssociationObservation.
func (in *SubnetNetworkSecurityGroupAssociationObservation) DeepCopy() *SubnetNetworkSecurityGroupAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetNetworkSecurityGroupAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNetworkSecurityGroupAssociationParameters) DeepCopyInto(out *SubnetNetworkSecurityGroupAssociationParameters) {
	*out = *in
	if in.NetworkSecurityGroupID != nil {
		in, out := &in.NetworkSecurityGroupID, &out.NetworkSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNetworkSecurityGroupAssociationParameters.
func (in *SubnetNetworkSecurityGroupAssociationParameters) DeepCopy() *SubnetNetworkSecurityGroupAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetNetworkSecurityGroupAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNetworkSecurityGroupAssociationSpec) DeepCopyInto(out *SubnetNetworkSecurityGroupAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNetworkSecurityGroupAssociationSpec.
func (in *SubnetNetworkSecurityGroupAssociationSpec) DeepCopy() *SubnetNetworkSecurityGroupAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetNetworkSecurityGroupAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetNetworkSecurityGroupAssociationStatus) DeepCopyInto(out *SubnetNetworkSecurityGroupAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetNetworkSecurityGroupAssociationStatus.
func (in *SubnetNetworkSecurityGroupAssociationStatus) DeepCopy() *SubnetNetworkSecurityGroupAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetNetworkSecurityGroupAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetObservation) DeepCopyInto(out *SubnetObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetObservation.
func (in *SubnetObservation) DeepCopy() *SubnetObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetParameters) DeepCopyInto(out *SubnetParameters) {
	*out = *in
	if in.AddressPrefixes != nil {
		in, out := &in.AddressPrefixes, &out.AddressPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Delegation != nil {
		in, out := &in.Delegation, &out.Delegation
		*out = make([]DelegationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnforcePrivateLinkEndpointNetworkPolicies != nil {
		in, out := &in.EnforcePrivateLinkEndpointNetworkPolicies, &out.EnforcePrivateLinkEndpointNetworkPolicies
		*out = new(bool)
		**out = **in
	}
	if in.EnforcePrivateLinkServiceNetworkPolicies != nil {
		in, out := &in.EnforcePrivateLinkServiceNetworkPolicies, &out.EnforcePrivateLinkServiceNetworkPolicies
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceEndpointPolicyIds != nil {
		in, out := &in.ServiceEndpointPolicyIds, &out.ServiceEndpointPolicyIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceEndpoints != nil {
		in, out := &in.ServiceEndpoints, &out.ServiceEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VirtualNetworkName != nil {
		in, out := &in.VirtualNetworkName, &out.VirtualNetworkName
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkNameRef != nil {
		in, out := &in.VirtualNetworkNameRef, &out.VirtualNetworkNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VirtualNetworkNameSelector != nil {
		in, out := &in.VirtualNetworkNameSelector, &out.VirtualNetworkNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetParameters.
func (in *SubnetParameters) DeepCopy() *SubnetParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetRouteTableAssociation) DeepCopyInto(out *SubnetRouteTableAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetRouteTableAssociation.
func (in *SubnetRouteTableAssociation) DeepCopy() *SubnetRouteTableAssociation {
	if in == nil {
		return nil
	}
	out := new(SubnetRouteTableAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetRouteTableAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetRouteTableAssociationList) DeepCopyInto(out *SubnetRouteTableAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubnetRouteTableAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetRouteTableAssociationList.
func (in *SubnetRouteTableAssociationList) DeepCopy() *SubnetRouteTableAssociationList {
	if in == nil {
		return nil
	}
	out := new(SubnetRouteTableAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetRouteTableAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetRouteTableAssociationObservation) DeepCopyInto(out *SubnetRouteTableAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetRouteTableAssociationObservation.
func (in *SubnetRouteTableAssociationObservation) DeepCopy() *SubnetRouteTableAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetRouteTableAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetRouteTableAssociationParameters) DeepCopyInto(out *SubnetRouteTableAssociationParameters) {
	*out = *in
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetRouteTableAssociationParameters.
func (in *SubnetRouteTableAssociationParameters) DeepCopy() *SubnetRouteTableAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetRouteTableAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetRouteTableAssociationSpec) DeepCopyInto(out *SubnetRouteTableAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetRouteTableAssociationSpec.
func (in *SubnetRouteTableAssociationSpec) DeepCopy() *SubnetRouteTableAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetRouteTableAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetRouteTableAssociationStatus) DeepCopyInto(out *SubnetRouteTableAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetRouteTableAssociationStatus.
func (in *SubnetRouteTableAssociationStatus) DeepCopy() *SubnetRouteTableAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetRouteTableAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetServiceEndpointStoragePolicy) DeepCopyInto(out *SubnetServiceEndpointStoragePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetServiceEndpointStoragePolicy.
func (in *SubnetServiceEndpointStoragePolicy) DeepCopy() *SubnetServiceEndpointStoragePolicy {
	if in == nil {
		return nil
	}
	out := new(SubnetServiceEndpointStoragePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetServiceEndpointStoragePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetServiceEndpointStoragePolicyList) DeepCopyInto(out *SubnetServiceEndpointStoragePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubnetServiceEndpointStoragePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetServiceEndpointStoragePolicyList.
func (in *SubnetServiceEndpointStoragePolicyList) DeepCopy() *SubnetServiceEndpointStoragePolicyList {
	if in == nil {
		return nil
	}
	out := new(SubnetServiceEndpointStoragePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetServiceEndpointStoragePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetServiceEndpointStoragePolicyObservation) DeepCopyInto(out *SubnetServiceEndpointStoragePolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetServiceEndpointStoragePolicyObservation.
func (in *SubnetServiceEndpointStoragePolicyObservation) DeepCopy() *SubnetServiceEndpointStoragePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetServiceEndpointStoragePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetServiceEndpointStoragePolicyParameters) DeepCopyInto(out *SubnetServiceEndpointStoragePolicyParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = make([]DefinitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetServiceEndpointStoragePolicyParameters.
func (in *SubnetServiceEndpointStoragePolicyParameters) DeepCopy() *SubnetServiceEndpointStoragePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetServiceEndpointStoragePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetServiceEndpointStoragePolicySpec) DeepCopyInto(out *SubnetServiceEndpointStoragePolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetServiceEndpointStoragePolicySpec.
func (in *SubnetServiceEndpointStoragePolicySpec) DeepCopy() *SubnetServiceEndpointStoragePolicySpec {
	if in == nil {
		return nil
	}
	out := new(SubnetServiceEndpointStoragePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetServiceEndpointStoragePolicyStatus) DeepCopyInto(out *SubnetServiceEndpointStoragePolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetServiceEndpointStoragePolicyStatus.
func (in *SubnetServiceEndpointStoragePolicyStatus) DeepCopy() *SubnetServiceEndpointStoragePolicyStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetServiceEndpointStoragePolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetSpec) DeepCopyInto(out *SubnetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetSpec.
func (in *SubnetSpec) DeepCopy() *SubnetSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetStatus) DeepCopyInto(out *SubnetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetStatus.
func (in *SubnetStatus) DeepCopy() *SubnetStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuccessThresholdObservation) DeepCopyInto(out *SuccessThresholdObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuccessThresholdObservation.
func (in *SuccessThresholdObservation) DeepCopy() *SuccessThresholdObservation {
	if in == nil {
		return nil
	}
	out := new(SuccessThresholdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuccessThresholdParameters) DeepCopyInto(out *SuccessThresholdParameters) {
	*out = *in
	if in.ChecksFailedPercent != nil {
		in, out := &in.ChecksFailedPercent, &out.ChecksFailedPercent
		*out = new(float64)
		**out = **in
	}
	if in.RoundTripTimeMS != nil {
		in, out := &in.RoundTripTimeMS, &out.RoundTripTimeMS
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuccessThresholdParameters.
func (in *SuccessThresholdParameters) DeepCopy() *SuccessThresholdParameters {
	if in == nil {
		return nil
	}
	out := new(SuccessThresholdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPConfigurationObservation) DeepCopyInto(out *TCPConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPConfigurationObservation.
func (in *TCPConfigurationObservation) DeepCopy() *TCPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(TCPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPConfigurationParameters) DeepCopyInto(out *TCPConfigurationParameters) {
	*out = *in
	if in.DestinationPortBehavior != nil {
		in, out := &in.DestinationPortBehavior, &out.DestinationPortBehavior
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TraceRouteEnabled != nil {
		in, out := &in.TraceRouteEnabled, &out.TraceRouteEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPConfigurationParameters.
func (in *TCPConfigurationParameters) DeepCopy() *TCPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(TCPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestConfigurationObservation) DeepCopyInto(out *TestConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestConfigurationObservation.
func (in *TestConfigurationObservation) DeepCopy() *TestConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(TestConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestConfigurationParameters) DeepCopyInto(out *TestConfigurationParameters) {
	*out = *in
	if in.HTTPConfiguration != nil {
		in, out := &in.HTTPConfiguration, &out.HTTPConfiguration
		*out = make([]HTTPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IcmpConfiguration != nil {
		in, out := &in.IcmpConfiguration, &out.IcmpConfiguration
		*out = make([]IcmpConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PreferredIPVersion != nil {
		in, out := &in.PreferredIPVersion, &out.PreferredIPVersion
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = make([]SuccessThresholdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPConfiguration != nil {
		in, out := &in.TCPConfiguration, &out.TCPConfiguration
		*out = make([]TCPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TestFrequencyInSeconds != nil {
		in, out := &in.TestFrequencyInSeconds, &out.TestFrequencyInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestConfigurationParameters.
func (in *TestConfigurationParameters) DeepCopy() *TestConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(TestConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestGroupObservation) DeepCopyInto(out *TestGroupObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestGroupObservation.
func (in *TestGroupObservation) DeepCopy() *TestGroupObservation {
	if in == nil {
		return nil
	}
	out := new(TestGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestGroupParameters) DeepCopyInto(out *TestGroupParameters) {
	*out = *in
	if in.DestinationEndpoints != nil {
		in, out := &in.DestinationEndpoints, &out.DestinationEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpoints != nil {
		in, out := &in.SourceEndpoints, &out.SourceEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TestConfigurationNames != nil {
		in, out := &in.TestConfigurationNames, &out.TestConfigurationNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestGroupParameters.
func (in *TestGroupParameters) DeepCopy() *TestGroupParameters {
	if in == nil {
		return nil
	}
	out := new(TestGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficAnalyticsObservation) DeepCopyInto(out *TrafficAnalyticsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficAnalyticsObservation.
func (in *TrafficAnalyticsObservation) DeepCopy() *TrafficAnalyticsObservation {
	if in == nil {
		return nil
	}
	out := new(TrafficAnalyticsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficAnalyticsParameters) DeepCopyInto(out *TrafficAnalyticsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IntervalInMinutes != nil {
		in, out := &in.IntervalInMinutes, &out.IntervalInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceRegion != nil {
		in, out := &in.WorkspaceRegion, &out.WorkspaceRegion
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceResourceID != nil {
		in, out := &in.WorkspaceResourceID, &out.WorkspaceResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficAnalyticsParameters.
func (in *TrafficAnalyticsParameters) DeepCopy() *TrafficAnalyticsParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficAnalyticsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficSelectorPolicyObservation) DeepCopyInto(out *TrafficSelectorPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficSelectorPolicyObservation.
func (in *TrafficSelectorPolicyObservation) DeepCopy() *TrafficSelectorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(TrafficSelectorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficSelectorPolicyParameters) DeepCopyInto(out *TrafficSelectorPolicyParameters) {
	*out = *in
	if in.LocalAddressCidrs != nil {
		in, out := &in.LocalAddressCidrs, &out.LocalAddressCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RemoteAddressCidrs != nil {
		in, out := &in.RemoteAddressCidrs, &out.RemoteAddressCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficSelectorPolicyParameters.
func (in *TrafficSelectorPolicyParameters) DeepCopy() *TrafficSelectorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficSelectorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TunnelInterfaceObservation) DeepCopyInto(out *TunnelInterfaceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TunnelInterfaceObservation.
func (in *TunnelInterfaceObservation) DeepCopy() *TunnelInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(TunnelInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TunnelInterfaceParameters) DeepCopyInto(out *TunnelInterfaceParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TunnelInterfaceParameters.
func (in *TunnelInterfaceParameters) DeepCopy() *TunnelInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(TunnelInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNClientAddressPoolObservation) DeepCopyInto(out *VPNClientAddressPoolObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNClientAddressPoolObservation.
func (in *VPNClientAddressPoolObservation) DeepCopy() *VPNClientAddressPoolObservation {
	if in == nil {
		return nil
	}
	out := new(VPNClientAddressPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNClientAddressPoolParameters) DeepCopyInto(out *VPNClientAddressPoolParameters) {
	*out = *in
	if in.AddressPrefixes != nil {
		in, out := &in.AddressPrefixes, &out.AddressPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNClientAddressPoolParameters.
func (in *VPNClientAddressPoolParameters) DeepCopy() *VPNClientAddressPoolParameters {
	if in == nil {
		return nil
	}
	out := new(VPNClientAddressPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNClientConfigurationObservation) DeepCopyInto(out *VPNClientConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNClientConfigurationObservation.
func (in *VPNClientConfigurationObservation) DeepCopy() *VPNClientConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(VPNClientConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNClientConfigurationParameters) DeepCopyInto(out *VPNClientConfigurationParameters) {
	*out = *in
	if in.AADAudience != nil {
		in, out := &in.AADAudience, &out.AADAudience
		*out = new(string)
		**out = **in
	}
	if in.AADIssuer != nil {
		in, out := &in.AADIssuer, &out.AADIssuer
		*out = new(string)
		**out = **in
	}
	if in.AADTenant != nil {
		in, out := &in.AADTenant, &out.AADTenant
		*out = new(string)
		**out = **in
	}
	if in.AddressSpace != nil {
		in, out := &in.AddressSpace, &out.AddressSpace
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RadiusServerAddress != nil {
		in, out := &in.RadiusServerAddress, &out.RadiusServerAddress
		*out = new(string)
		**out = **in
	}
	if in.RadiusServerSecret != nil {
		in, out := &in.RadiusServerSecret, &out.RadiusServerSecret
		*out = new(string)
		**out = **in
	}
	if in.RevokedCertificate != nil {
		in, out := &in.RevokedCertificate, &out.RevokedCertificate
		*out = make([]RevokedCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootCertificate != nil {
		in, out := &in.RootCertificate, &out.RootCertificate
		*out = make([]RootCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPNAuthTypes != nil {
		in, out := &in.VPNAuthTypes, &out.VPNAuthTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPNClientProtocols != nil {
		in, out := &in.VPNClientProtocols, &out.VPNClientProtocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNClientConfigurationParameters.
func (in *VPNClientConfigurationParameters) DeepCopy() *VPNClientConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(VPNClientConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNServerConfiguration) DeepCopyInto(out *VPNServerConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNServerConfiguration.
func (in *VPNServerConfiguration) DeepCopy() *VPNServerConfiguration {
	if in == nil {
		return nil
	}
	out := new(VPNServerConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNServerConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNServerConfigurationIpsecPolicyObservation) DeepCopyInto(out *VPNServerConfigurationIpsecPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNServerConfigurationIpsecPolicyObservation.
func (in *VPNServerConfigurationIpsecPolicyObservation) DeepCopy() *VPNServerConfigurationIpsecPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VPNServerConfigurationIpsecPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNServerConfigurationIpsecPolicyParameters) DeepCopyInto(out *VPNServerConfigurationIpsecPolicyParameters) {
	*out = *in
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IkeEncryption != nil {
		in, out := &in.IkeEncryption, &out.IkeEncryption
		*out = new(string)
		**out = **in
	}
	if in.IkeIntegrity != nil {
		in, out := &in.IkeIntegrity, &out.IkeIntegrity
		*out = new(string)
		**out = **in
	}
	if in.IpsecEncryption != nil {
		in, out := &in.IpsecEncryption, &out.IpsecEncryption
		*out = new(string)
		**out = **in
	}
	if in.IpsecIntegrity != nil {
		in, out := &in.IpsecIntegrity, &out.IpsecIntegrity
		*out = new(string)
		**out = **in
	}
	if in.PfsGroup != nil {
		in, out := &in.PfsGroup, &out.PfsGroup
		*out = new(string)
		**out = **in
	}
	if in.SaDataSizeKilobytes != nil {
		in, out := &in.SaDataSizeKilobytes, &out.SaDataSizeKilobytes
		*out = new(float64)
		**out = **in
	}
	if in.SaLifetimeSeconds != nil {
		in, out := &in.SaLifetimeSeconds, &out.SaLifetimeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNServerConfigurationIpsecPolicyParameters.
func (in *VPNServerConfigurationIpsecPolicyParameters) DeepCopy() *VPNServerConfigurationIpsecPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VPNServerConfigurationIpsecPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNServerConfigurationList) DeepCopyInto(out *VPNServerConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNServerConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNServerConfigurationList.
func (in *VPNServerConfigurationList) DeepCopy() *VPNServerConfigurationList {
	if in == nil {
		return nil
	}
	out := new(VPNServerConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNServerConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNServerConfigurationObservation) DeepCopyInto(out *VPNServerConfigurationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNServerConfigurationObservation.
func (in *VPNServerConfigurationObservation) DeepCopy() *VPNServerConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(VPNServerConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNServerConfigurationParameters) DeepCopyInto(out *VPNServerConfigurationParameters) {
	*out = *in
	if in.AzureActiveDirectoryAuthentication != nil {
		in, out := &in.AzureActiveDirectoryAuthentication, &out.AzureActiveDirectoryAuthentication
		*out = make([]AzureActiveDirectoryAuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientRevokedCertificate != nil {
		in, out := &in.ClientRevokedCertificate, &out.ClientRevokedCertificate
		*out = make([]ClientRevokedCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientRootCertificate != nil {
		in, out := &in.ClientRootCertificate, &out.ClientRootCertificate
		*out = make([]ClientRootCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpsecPolicy != nil {
		in, out := &in.IpsecPolicy, &out.IpsecPolicy
		*out = make([]VPNServerConfigurationIpsecPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Radius != nil {
		in, out := &in.Radius, &out.Radius
		*out = make([]RadiusParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPNAuthenticationTypes != nil {
		in, out := &in.VPNAuthenticationTypes, &out.VPNAuthenticationTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPNProtocols != nil {
		in, out := &in.VPNProtocols, &out.VPNProtocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNServerConfigurationParameters.
func (in *VPNServerConfigurationParameters) DeepCopy() *VPNServerConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(VPNServerConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNServerConfigurationSpec) DeepCopyInto(out *VPNServerConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNServerConfigurationSpec.
func (in *VPNServerConfigurationSpec) DeepCopy() *VPNServerConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(VPNServerConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNServerConfigurationStatus) DeepCopyInto(out *VPNServerConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNServerConfigurationStatus.
func (in *VPNServerConfigurationStatus) DeepCopy() *VPNServerConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(VPNServerConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHub) DeepCopyInto(out *VirtualHub) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHub.
func (in *VirtualHub) DeepCopy() *VirtualHub {
	if in == nil {
		return nil
	}
	out := new(VirtualHub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualHub) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHubList) DeepCopyInto(out *VirtualHubList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualHub, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHubList.
func (in *VirtualHubList) DeepCopy() *VirtualHubList {
	if in == nil {
		return nil
	}
	out := new(VirtualHubList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualHubList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHubObservation) DeepCopyInto(out *VirtualHubObservation) {
	*out = *in
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddresses != nil {
		in, out := &in.PublicIPAddresses, &out.PublicIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHubObservation.
func (in *VirtualHubObservation) DeepCopy() *VirtualHubObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualHubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHubObservation_2) DeepCopyInto(out *VirtualHubObservation_2) {
	*out = *in
	if in.DefaultRouteTableID != nil {
		in, out := &in.DefaultRouteTableID, &out.DefaultRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.VirtualRouterAsn != nil {
		in, out := &in.VirtualRouterAsn, &out.VirtualRouterAsn
		*out = new(float64)
		**out = **in
	}
	if in.VirtualRouterIps != nil {
		in, out := &in.VirtualRouterIps, &out.VirtualRouterIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHubObservation_2.
func (in *VirtualHubObservation_2) DeepCopy() *VirtualHubObservation_2 {
	if in == nil {
		return nil
	}
	out := new(VirtualHubObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHubParameters) DeepCopyInto(out *VirtualHubParameters) {
	*out = *in
	if in.PublicIPCount != nil {
		in, out := &in.PublicIPCount, &out.PublicIPCount
		*out = new(float64)
		**out = **in
	}
	if in.VirtualHubID != nil {
		in, out := &in.VirtualHubID, &out.VirtualHubID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHubParameters.
func (in *VirtualHubParameters) DeepCopy() *VirtualHubParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualHubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHubParameters_2) DeepCopyInto(out *VirtualHubParameters_2) {
	*out = *in
	if in.AddressPrefix != nil {
		in, out := &in.AddressPrefix, &out.AddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]VirtualHubRouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualWanID != nil {
		in, out := &in.VirtualWanID, &out.VirtualWanID
		*out = new(string)
		**out = **in
	}
	if in.VirtualWanIDRef != nil {
		in, out := &in.VirtualWanIDRef, &out.VirtualWanIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VirtualWanIDSelector != nil {
		in, out := &in.VirtualWanIDSelector, &out.VirtualWanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHubParameters_2.
func (in *VirtualHubParameters_2) DeepCopy() *VirtualHubParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VirtualHubParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHubRouteObservation) DeepCopyInto(out *VirtualHubRouteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHubRouteObservation.
func (in *VirtualHubRouteObservation) DeepCopy() *VirtualHubRouteObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualHubRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHubRouteParameters) DeepCopyInto(out *VirtualHubRouteParameters) {
	*out = *in
	if in.AddressPrefixes != nil {
		in, out := &in.AddressPrefixes, &out.AddressPrefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NextHopIPAddress != nil {
		in, out := &in.NextHopIPAddress, &out.NextHopIPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHubRouteParameters.
func (in *VirtualHubRouteParameters) DeepCopy() *VirtualHubRouteParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualHubRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHubSpec) DeepCopyInto(out *VirtualHubSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHubSpec.
func (in *VirtualHubSpec) DeepCopy() *VirtualHubSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualHubSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualHubStatus) DeepCopyInto(out *VirtualHubStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualHubStatus.
func (in *VirtualHubStatus) DeepCopy() *VirtualHubStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualHubStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetwork) DeepCopyInto(out *VirtualNetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetwork.
func (in *VirtualNetwork) DeepCopy() *VirtualNetwork {
	if in == nil {
		return nil
	}
	out := new(VirtualNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGateway) DeepCopyInto(out *VirtualNetworkGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGateway.
func (in *VirtualNetworkGateway) DeepCopy() *VirtualNetworkGateway {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayBGPSettingsObservation) DeepCopyInto(out *VirtualNetworkGatewayBGPSettingsObservation) {
	*out = *in
	if in.PeeringAddresses != nil {
		in, out := &in.PeeringAddresses, &out.PeeringAddresses
		*out = make([]PeeringAddressesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayBGPSettingsObservation.
func (in *VirtualNetworkGatewayBGPSettingsObservation) DeepCopy() *VirtualNetworkGatewayBGPSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayBGPSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayBGPSettingsParameters) DeepCopyInto(out *VirtualNetworkGatewayBGPSettingsParameters) {
	*out = *in
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.PeerWeight != nil {
		in, out := &in.PeerWeight, &out.PeerWeight
		*out = new(float64)
		**out = **in
	}
	if in.PeeringAddresses != nil {
		in, out := &in.PeeringAddresses, &out.PeeringAddresses
		*out = make([]PeeringAddressesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayBGPSettingsParameters.
func (in *VirtualNetworkGatewayBGPSettingsParameters) DeepCopy() *VirtualNetworkGatewayBGPSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayBGPSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayConnection) DeepCopyInto(out *VirtualNetworkGatewayConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayConnection.
func (in *VirtualNetworkGatewayConnection) DeepCopy() *VirtualNetworkGatewayConnection {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkGatewayConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayConnectionList) DeepCopyInto(out *VirtualNetworkGatewayConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualNetworkGatewayConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayConnectionList.
func (in *VirtualNetworkGatewayConnectionList) DeepCopy() *VirtualNetworkGatewayConnectionList {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkGatewayConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayConnectionObservation) DeepCopyInto(out *VirtualNetworkGatewayConnectionObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayConnectionObservation.
func (in *VirtualNetworkGatewayConnectionObservation) DeepCopy() *VirtualNetworkGatewayConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayConnectionParameters) DeepCopyInto(out *VirtualNetworkGatewayConnectionParameters) {
	*out = *in
	if in.AuthorizationKeySecretRef != nil {
		in, out := &in.AuthorizationKeySecretRef, &out.AuthorizationKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConnectionMode != nil {
		in, out := &in.ConnectionMode, &out.ConnectionMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionProtocol != nil {
		in, out := &in.ConnectionProtocol, &out.ConnectionProtocol
		*out = new(string)
		**out = **in
	}
	if in.CustomBGPAddresses != nil {
		in, out := &in.CustomBGPAddresses, &out.CustomBGPAddresses
		*out = make([]CustomBGPAddressesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DpdTimeoutSeconds != nil {
		in, out := &in.DpdTimeoutSeconds, &out.DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.EgressNATRuleIds != nil {
		in, out := &in.EgressNATRuleIds, &out.EgressNATRuleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableBGP != nil {
		in, out := &in.EnableBGP, &out.EnableBGP
		*out = new(bool)
		**out = **in
	}
	if in.ExpressRouteCircuitID != nil {
		in, out := &in.ExpressRouteCircuitID, &out.ExpressRouteCircuitID
		*out = new(string)
		**out = **in
	}
	if in.ExpressRouteGatewayBypass != nil {
		in, out := &in.ExpressRouteGatewayBypass, &out.ExpressRouteGatewayBypass
		*out = new(bool)
		**out = **in
	}
	if in.IngressNATRuleIds != nil {
		in, out := &in.IngressNATRuleIds, &out.IngressNATRuleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IpsecPolicy != nil {
		in, out := &in.IpsecPolicy, &out.IpsecPolicy
		*out = make([]IpsecPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalAzureIPAddressEnabled != nil {
		in, out := &in.LocalAzureIPAddressEnabled, &out.LocalAzureIPAddressEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LocalNetworkGatewayID != nil {
		in, out := &in.LocalNetworkGatewayID, &out.LocalNetworkGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PeerVirtualNetworkGatewayID != nil {
		in, out := &in.PeerVirtualNetworkGatewayID, &out.PeerVirtualNetworkGatewayID
		*out = new(string)
		**out = **in
	}
	if in.PeerVirtualNetworkGatewayIDRef != nil {
		in, out := &in.PeerVirtualNetworkGatewayIDRef, &out.PeerVirtualNetworkGatewayIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.PeerVirtualNetworkGatewayIDSelector != nil {
		in, out := &in.PeerVirtualNetworkGatewayIDSelector, &out.PeerVirtualNetworkGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoutingWeight != nil {
		in, out := &in.RoutingWeight, &out.RoutingWeight
		*out = new(float64)
		**out = **in
	}
	if in.SharedKeySecretRef != nil {
		in, out := &in.SharedKeySecretRef, &out.SharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TrafficSelectorPolicy != nil {
		in, out := &in.TrafficSelectorPolicy, &out.TrafficSelectorPolicy
		*out = make([]TrafficSelectorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UsePolicyBasedTrafficSelectors != nil {
		in, out := &in.UsePolicyBasedTrafficSelectors, &out.UsePolicyBasedTrafficSelectors
		*out = new(bool)
		**out = **in
	}
	if in.VirtualNetworkGatewayID != nil {
		in, out := &in.VirtualNetworkGatewayID, &out.VirtualNetworkGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkGatewayIDRef != nil {
		in, out := &in.VirtualNetworkGatewayIDRef, &out.VirtualNetworkGatewayIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VirtualNetworkGatewayIDSelector != nil {
		in, out := &in.VirtualNetworkGatewayIDSelector, &out.VirtualNetworkGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayConnectionParameters.
func (in *VirtualNetworkGatewayConnectionParameters) DeepCopy() *VirtualNetworkGatewayConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayConnectionSpec) DeepCopyInto(out *VirtualNetworkGatewayConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayConnectionSpec.
func (in *VirtualNetworkGatewayConnectionSpec) DeepCopy() *VirtualNetworkGatewayConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayConnectionStatus) DeepCopyInto(out *VirtualNetworkGatewayConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayConnectionStatus.
func (in *VirtualNetworkGatewayConnectionStatus) DeepCopy() *VirtualNetworkGatewayConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayIPConfigurationObservation) DeepCopyInto(out *VirtualNetworkGatewayIPConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayIPConfigurationObservation.
func (in *VirtualNetworkGatewayIPConfigurationObservation) DeepCopy() *VirtualNetworkGatewayIPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayIPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayIPConfigurationParameters) DeepCopyInto(out *VirtualNetworkGatewayIPConfigurationParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressAllocation != nil {
		in, out := &in.PrivateIPAddressAllocation, &out.PrivateIPAddressAllocation
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayIPConfigurationParameters.
func (in *VirtualNetworkGatewayIPConfigurationParameters) DeepCopy() *VirtualNetworkGatewayIPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayIPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayList) DeepCopyInto(out *VirtualNetworkGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualNetworkGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayList.
func (in *VirtualNetworkGatewayList) DeepCopy() *VirtualNetworkGatewayList {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayObservation) DeepCopyInto(out *VirtualNetworkGatewayObservation) {
	*out = *in
	if in.BGPSettings != nil {
		in, out := &in.BGPSettings, &out.BGPSettings
		*out = make([]VirtualNetworkGatewayBGPSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayObservation.
func (in *VirtualNetworkGatewayObservation) DeepCopy() *VirtualNetworkGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayParameters) DeepCopyInto(out *VirtualNetworkGatewayParameters) {
	*out = *in
	if in.ActiveActive != nil {
		in, out := &in.ActiveActive, &out.ActiveActive
		*out = new(bool)
		**out = **in
	}
	if in.BGPSettings != nil {
		in, out := &in.BGPSettings, &out.BGPSettings
		*out = make([]VirtualNetworkGatewayBGPSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomRoute != nil {
		in, out := &in.CustomRoute, &out.CustomRoute
		*out = make([]CustomRouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultLocalNetworkGatewayID != nil {
		in, out := &in.DefaultLocalNetworkGatewayID, &out.DefaultLocalNetworkGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EdgeZone != nil {
		in, out := &in.EdgeZone, &out.EdgeZone
		*out = new(string)
		**out = **in
	}
	if in.EnableBGP != nil {
		in, out := &in.EnableBGP, &out.EnableBGP
		*out = new(bool)
		**out = **in
	}
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(string)
		**out = **in
	}
	if in.IPConfiguration != nil {
		in, out := &in.IPConfiguration, &out.IPConfiguration
		*out = make([]VirtualNetworkGatewayIPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressEnabled != nil {
		in, out := &in.PrivateIPAddressEnabled, &out.PrivateIPAddressEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPNClientConfiguration != nil {
		in, out := &in.VPNClientConfiguration, &out.VPNClientConfiguration
		*out = make([]VPNClientConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPNType != nil {
		in, out := &in.VPNType, &out.VPNType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayParameters.
func (in *VirtualNetworkGatewayParameters) DeepCopy() *VirtualNetworkGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewaySpec) DeepCopyInto(out *VirtualNetworkGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewaySpec.
func (in *VirtualNetworkGatewaySpec) DeepCopy() *VirtualNetworkGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayStatus) DeepCopyInto(out *VirtualNetworkGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayStatus.
func (in *VirtualNetworkGatewayStatus) DeepCopy() *VirtualNetworkGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkList) DeepCopyInto(out *VirtualNetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkList.
func (in *VirtualNetworkList) DeepCopy() *VirtualNetworkList {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkObservation) DeepCopyInto(out *VirtualNetworkObservation) {
	*out = *in
	if in.GUID != nil {
		in, out := &in.GUID, &out.GUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]VirtualNetworkSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkObservation.
func (in *VirtualNetworkObservation) DeepCopy() *VirtualNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkParameters) DeepCopyInto(out *VirtualNetworkParameters) {
	*out = *in
	if in.AddressSpace != nil {
		in, out := &in.AddressSpace, &out.AddressSpace
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BGPCommunity != nil {
		in, out := &in.BGPCommunity, &out.BGPCommunity
		*out = new(string)
		**out = **in
	}
	if in.DDOSProtectionPlan != nil {
		in, out := &in.DDOSProtectionPlan, &out.DDOSProtectionPlan
		*out = make([]DDOSProtectionPlanParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EdgeZone != nil {
		in, out := &in.EdgeZone, &out.EdgeZone
		*out = new(string)
		**out = **in
	}
	if in.FlowTimeoutInMinutes != nil {
		in, out := &in.FlowTimeoutInMinutes, &out.FlowTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkParameters.
func (in *VirtualNetworkParameters) DeepCopy() *VirtualNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkPeering) DeepCopyInto(out *VirtualNetworkPeering) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkPeering.
func (in *VirtualNetworkPeering) DeepCopy() *VirtualNetworkPeering {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkPeering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkPeering) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkPeeringList) DeepCopyInto(out *VirtualNetworkPeeringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualNetworkPeering, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkPeeringList.
func (in *VirtualNetworkPeeringList) DeepCopy() *VirtualNetworkPeeringList {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkPeeringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkPeeringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkPeeringObservation) DeepCopyInto(out *VirtualNetworkPeeringObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkPeeringObservation.
func (in *VirtualNetworkPeeringObservation) DeepCopy() *VirtualNetworkPeeringObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkPeeringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkPeeringParameters) DeepCopyInto(out *VirtualNetworkPeeringParameters) {
	*out = *in
	if in.AllowForwardedTraffic != nil {
		in, out := &in.AllowForwardedTraffic, &out.AllowForwardedTraffic
		*out = new(bool)
		**out = **in
	}
	if in.AllowGatewayTransit != nil {
		in, out := &in.AllowGatewayTransit, &out.AllowGatewayTransit
		*out = new(bool)
		**out = **in
	}
	if in.AllowVirtualNetworkAccess != nil {
		in, out := &in.AllowVirtualNetworkAccess, &out.AllowVirtualNetworkAccess
		*out = new(bool)
		**out = **in
	}
	if in.RemoteVirtualNetworkID != nil {
		in, out := &in.RemoteVirtualNetworkID, &out.RemoteVirtualNetworkID
		*out = new(string)
		**out = **in
	}
	if in.RemoteVirtualNetworkIDRef != nil {
		in, out := &in.RemoteVirtualNetworkIDRef, &out.RemoteVirtualNetworkIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RemoteVirtualNetworkIDSelector != nil {
		in, out := &in.RemoteVirtualNetworkIDSelector, &out.RemoteVirtualNetworkIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UseRemoteGateways != nil {
		in, out := &in.UseRemoteGateways, &out.UseRemoteGateways
		*out = new(bool)
		**out = **in
	}
	if in.VirtualNetworkName != nil {
		in, out := &in.VirtualNetworkName, &out.VirtualNetworkName
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkNameRef != nil {
		in, out := &in.VirtualNetworkNameRef, &out.VirtualNetworkNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VirtualNetworkNameSelector != nil {
		in, out := &in.VirtualNetworkNameSelector, &out.VirtualNetworkNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkPeeringParameters.
func (in *VirtualNetworkPeeringParameters) DeepCopy() *VirtualNetworkPeeringParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkPeeringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkPeeringSpec) DeepCopyInto(out *VirtualNetworkPeeringSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkPeeringSpec.
func (in *VirtualNetworkPeeringSpec) DeepCopy() *VirtualNetworkPeeringSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkPeeringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkPeeringStatus) DeepCopyInto(out *VirtualNetworkPeeringStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkPeeringStatus.
func (in *VirtualNetworkPeeringStatus) DeepCopy() *VirtualNetworkPeeringStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkPeeringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkSpec) DeepCopyInto(out *VirtualNetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkSpec.
func (in *VirtualNetworkSpec) DeepCopy() *VirtualNetworkSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkStatus) DeepCopyInto(out *VirtualNetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkStatus.
func (in *VirtualNetworkStatus) DeepCopy() *VirtualNetworkStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkSubnetObservation) DeepCopyInto(out *VirtualNetworkSubnetObservation) {
	*out = *in
	if in.AddressPrefix != nil {
		in, out := &in.AddressPrefix, &out.AddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroup != nil {
		in, out := &in.SecurityGroup, &out.SecurityGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkSubnetObservation.
func (in *VirtualNetworkSubnetObservation) DeepCopy() *VirtualNetworkSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkSubnetParameters) DeepCopyInto(out *VirtualNetworkSubnetParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkSubnetParameters.
func (in *VirtualNetworkSubnetParameters) DeepCopy() *VirtualNetworkSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualWAN) DeepCopyInto(out *VirtualWAN) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualWAN.
func (in *VirtualWAN) DeepCopy() *VirtualWAN {
	if in == nil {
		return nil
	}
	out := new(VirtualWAN)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualWAN) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualWANList) DeepCopyInto(out *VirtualWANList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualWAN, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualWANList.
func (in *VirtualWANList) DeepCopy() *VirtualWANList {
	if in == nil {
		return nil
	}
	out := new(VirtualWANList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualWANList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualWANObservation) DeepCopyInto(out *VirtualWANObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualWANObservation.
func (in *VirtualWANObservation) DeepCopy() *VirtualWANObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualWANObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualWANParameters) DeepCopyInto(out *VirtualWANParameters) {
	*out = *in
	if in.AllowBranchToBranchTraffic != nil {
		in, out := &in.AllowBranchToBranchTraffic, &out.AllowBranchToBranchTraffic
		*out = new(bool)
		**out = **in
	}
	if in.DisableVPNEncryption != nil {
		in, out := &in.DisableVPNEncryption, &out.DisableVPNEncryption
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Office365LocalBreakoutCategory != nil {
		in, out := &in.Office365LocalBreakoutCategory, &out.Office365LocalBreakoutCategory
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualWANParameters.
func (in *VirtualWANParameters) DeepCopy() *VirtualWANParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualWANParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualWANSpec) DeepCopyInto(out *VirtualWANSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualWANSpec.
func (in *VirtualWANSpec) DeepCopy() *VirtualWANSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualWANSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualWANStatus) DeepCopyInto(out *VirtualWANStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualWANStatus.
func (in *VirtualWANStatus) DeepCopy() *VirtualWANStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualWANStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Watcher) DeepCopyInto(out *Watcher) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Watcher.
func (in *Watcher) DeepCopy() *Watcher {
	if in == nil {
		return nil
	}
	out := new(Watcher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Watcher) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherFlowLog) DeepCopyInto(out *WatcherFlowLog) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherFlowLog.
func (in *WatcherFlowLog) DeepCopy() *WatcherFlowLog {
	if in == nil {
		return nil
	}
	out := new(WatcherFlowLog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WatcherFlowLog) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherFlowLogList) DeepCopyInto(out *WatcherFlowLogList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WatcherFlowLog, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherFlowLogList.
func (in *WatcherFlowLogList) DeepCopy() *WatcherFlowLogList {
	if in == nil {
		return nil
	}
	out := new(WatcherFlowLogList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WatcherFlowLogList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherFlowLogObservation) DeepCopyInto(out *WatcherFlowLogObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherFlowLogObservation.
func (in *WatcherFlowLogObservation) DeepCopy() *WatcherFlowLogObservation {
	if in == nil {
		return nil
	}
	out := new(WatcherFlowLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherFlowLogParameters) DeepCopyInto(out *WatcherFlowLogParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityGroupID != nil {
		in, out := &in.NetworkSecurityGroupID, &out.NetworkSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityGroupIDRef != nil {
		in, out := &in.NetworkSecurityGroupIDRef, &out.NetworkSecurityGroupIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkSecurityGroupIDSelector != nil {
		in, out := &in.NetworkSecurityGroupIDSelector, &out.NetworkSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkWatcherName != nil {
		in, out := &in.NetworkWatcherName, &out.NetworkWatcherName
		*out = new(string)
		**out = **in
	}
	if in.NetworkWatcherNameRef != nil {
		in, out := &in.NetworkWatcherNameRef, &out.NetworkWatcherNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.NetworkWatcherNameSelector != nil {
		in, out := &in.NetworkWatcherNameSelector, &out.NetworkWatcherNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountIDRef != nil {
		in, out := &in.StorageAccountIDRef, &out.StorageAccountIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.StorageAccountIDSelector != nil {
		in, out := &in.StorageAccountIDSelector, &out.StorageAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TrafficAnalytics != nil {
		in, out := &in.TrafficAnalytics, &out.TrafficAnalytics
		*out = make([]TrafficAnalyticsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherFlowLogParameters.
func (in *WatcherFlowLogParameters) DeepCopy() *WatcherFlowLogParameters {
	if in == nil {
		return nil
	}
	out := new(WatcherFlowLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherFlowLogSpec) DeepCopyInto(out *WatcherFlowLogSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherFlowLogSpec.
func (in *WatcherFlowLogSpec) DeepCopy() *WatcherFlowLogSpec {
	if in == nil {
		return nil
	}
	out := new(WatcherFlowLogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherFlowLogStatus) DeepCopyInto(out *WatcherFlowLogStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherFlowLogStatus.
func (in *WatcherFlowLogStatus) DeepCopy() *WatcherFlowLogStatus {
	if in == nil {
		return nil
	}
	out := new(WatcherFlowLogStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherList) DeepCopyInto(out *WatcherList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Watcher, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherList.
func (in *WatcherList) DeepCopy() *WatcherList {
	if in == nil {
		return nil
	}
	out := new(WatcherList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WatcherList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherObservation) DeepCopyInto(out *WatcherObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherObservation.
func (in *WatcherObservation) DeepCopy() *WatcherObservation {
	if in == nil {
		return nil
	}
	out := new(WatcherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherParameters) DeepCopyInto(out *WatcherParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherParameters.
func (in *WatcherParameters) DeepCopy() *WatcherParameters {
	if in == nil {
		return nil
	}
	out := new(WatcherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherSpec) DeepCopyInto(out *WatcherSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherSpec.
func (in *WatcherSpec) DeepCopy() *WatcherSpec {
	if in == nil {
		return nil
	}
	out := new(WatcherSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatcherStatus) DeepCopyInto(out *WatcherStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatcherStatus.
func (in *WatcherStatus) DeepCopy() *WatcherStatus {
	if in == nil {
		return nil
	}
	out := new(WatcherStatus)
	in.DeepCopyInto(out)
	return out
}
