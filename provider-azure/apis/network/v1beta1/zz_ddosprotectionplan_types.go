/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DDoSProtectionPlanObservation struct {

	// The ID of the DDoS Protection Plan
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A list of Virtual Network IDs associated with the DDoS Protection Plan.
	VirtualNetworkIds []*string `json:"virtualNetworkIds,omitempty" tf:"virtual_network_ids,omitempty"`
}

type DDoSProtectionPlanParameters struct {

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/official-providers/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// DDoSProtectionPlanSpec defines the desired state of DDoSProtectionPlan
type DDoSProtectionPlanSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DDoSProtectionPlanParameters `json:"forProvider"`
}

// DDoSProtectionPlanStatus defines the observed state of DDoSProtectionPlan.
type DDoSProtectionPlanStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DDoSProtectionPlanObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DDoSProtectionPlan is the Schema for the DDoSProtectionPlans API. Manages an Azure Network DDoS Protection Plan.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type DDoSProtectionPlan struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DDoSProtectionPlanSpec   `json:"spec"`
	Status            DDoSProtectionPlanStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DDoSProtectionPlanList contains a list of DDoSProtectionPlans
type DDoSProtectionPlanList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DDoSProtectionPlan `json:"items"`
}

// Repository type metadata.
var (
	DDoSProtectionPlan_Kind             = "DDoSProtectionPlan"
	DDoSProtectionPlan_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DDoSProtectionPlan_Kind}.String()
	DDoSProtectionPlan_KindAPIVersion   = DDoSProtectionPlan_Kind + "." + CRDGroupVersion.String()
	DDoSProtectionPlan_GroupVersionKind = CRDGroupVersion.WithKind(DDoSProtectionPlan_Kind)
)

func init() {
	SchemeBuilder.Register(&DDoSProtectionPlan{}, &DDoSProtectionPlanList{})
}
