/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MaintenanceAssignmentDedicatedHostObservation struct {

	// The ID of the Maintenance Assignment.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type MaintenanceAssignmentDedicatedHostParameters struct {

	// Specifies the Dedicated Host ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/compute/v1beta1.DedicatedHost
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	DedicatedHostID *string `json:"dedicatedHostId,omitempty" tf:"dedicated_host_id,omitempty"`

	// Reference to a DedicatedHost in compute to populate dedicatedHostId.
	// +kubebuilder:validation:Optional
	DedicatedHostIDRef *v1.Reference `json:"dedicatedHostIdRef,omitempty" tf:"-"`

	// Selector for a DedicatedHost in compute to populate dedicatedHostId.
	// +kubebuilder:validation:Optional
	DedicatedHostIDSelector *v1.Selector `json:"dedicatedHostIdSelector,omitempty" tf:"-"`

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/maintenance/v1beta1.MaintenanceConfiguration
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	MaintenanceConfigurationID *string `json:"maintenanceConfigurationId,omitempty" tf:"maintenance_configuration_id,omitempty"`

	// Reference to a MaintenanceConfiguration in maintenance to populate maintenanceConfigurationId.
	// +kubebuilder:validation:Optional
	MaintenanceConfigurationIDRef *v1.Reference `json:"maintenanceConfigurationIdRef,omitempty" tf:"-"`

	// Selector for a MaintenanceConfiguration in maintenance to populate maintenanceConfigurationId.
	// +kubebuilder:validation:Optional
	MaintenanceConfigurationIDSelector *v1.Selector `json:"maintenanceConfigurationIdSelector,omitempty" tf:"-"`
}

// MaintenanceAssignmentDedicatedHostSpec defines the desired state of MaintenanceAssignmentDedicatedHost
type MaintenanceAssignmentDedicatedHostSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MaintenanceAssignmentDedicatedHostParameters `json:"forProvider"`
}

// MaintenanceAssignmentDedicatedHostStatus defines the observed state of MaintenanceAssignmentDedicatedHost.
type MaintenanceAssignmentDedicatedHostStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MaintenanceAssignmentDedicatedHostObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MaintenanceAssignmentDedicatedHost is the Schema for the MaintenanceAssignmentDedicatedHosts API. Manages a Maintenance Assignment to Dedicated Host.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type MaintenanceAssignmentDedicatedHost struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MaintenanceAssignmentDedicatedHostSpec   `json:"spec"`
	Status            MaintenanceAssignmentDedicatedHostStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MaintenanceAssignmentDedicatedHostList contains a list of MaintenanceAssignmentDedicatedHosts
type MaintenanceAssignmentDedicatedHostList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MaintenanceAssignmentDedicatedHost `json:"items"`
}

// Repository type metadata.
var (
	MaintenanceAssignmentDedicatedHost_Kind             = "MaintenanceAssignmentDedicatedHost"
	MaintenanceAssignmentDedicatedHost_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MaintenanceAssignmentDedicatedHost_Kind}.String()
	MaintenanceAssignmentDedicatedHost_KindAPIVersion   = MaintenanceAssignmentDedicatedHost_Kind + "." + CRDGroupVersion.String()
	MaintenanceAssignmentDedicatedHost_GroupVersionKind = CRDGroupVersion.WithKind(MaintenanceAssignmentDedicatedHost_Kind)
)

func init() {
	SchemeBuilder.Register(&MaintenanceAssignmentDedicatedHost{}, &MaintenanceAssignmentDedicatedHostList{})
}
